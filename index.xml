<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Guillaume&#39;s blog</title>
<link>https://castorfou.github.io/index.html</link>
<atom:link href="https://castorfou.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>This is Guillaume Ramelet&#39;s personal blog.</description>
<generator>quarto-1.2.313</generator>
<lastBuildDate>Wed, 11 Jan 2023 00:00:00 GMT</lastBuildDate>
<item>
  <title>Zotero</title>
  <link>https://castorfou.github.io/posts/2023-01-11-zotero-manage-datascience-paper.html</link>
  <description><![CDATA[ 




<p>I have been using <a href="https://www.zotero.org/">Zotero</a> for a year now.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2023-01-11-zotero-manage-datascience-paper_files/figure-html/dc6fe4af-bcd3-43cd-9751-8a9c06ad16e3-1-30005832-8f7d-4e45-aee6-c390439a7fd7.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Here is the process I use.</p>
<section id="installation-and-setup" class="level1">
<h1>Installation and setup</h1>
<section id="zotero-account" class="level2">
<h2 class="anchored" data-anchor-id="zotero-account">zotero account</h2>
<p>1st step is to create a <a href="https://www.zotero.org/guillaumeramelet/library">zotero account</a> from zotero website, quite usefull to sync libraries between multiple zotero installations.</p>
</section>
<section id="zotero-app" class="level2">
<h2 class="anchored" data-anchor-id="zotero-app">zotero app</h2>
<p>I have installed <a href="../posts/2022-12-15-wsl2-fresh-pc.html#zotero">zotero app</a> within WSL. For a reason the app on my Windows corporate is not the last one, and cannot sync anymore (I think due to too old chrome version).</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;">sudo</span> snap install zotero-snap</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;"># to use CA certificates</span></span>
<span id="cb1-3"><span class="va" style="color: #111111;">FIREFOX_PROFILE</span><span class="op" style="color: #5E5E5E;">=</span><span class="kw" style="color: #003B4F;">`</span><span class="fu" style="color: #4758AB;">find</span> ~/snap/firefox/common/.mozilla/ <span class="at" style="color: #657422;">-name</span> <span class="pp" style="color: #AD0000;">*</span>.default<span class="kw" style="color: #003B4F;">`</span></span>
<span id="cb1-4"><span class="va" style="color: #111111;">ZOTERO_PROFILE</span><span class="op" style="color: #5E5E5E;">=</span><span class="kw" style="color: #003B4F;">`</span><span class="fu" style="color: #4758AB;">find</span> ~/snap/zotero-snap/common/.zotero/ <span class="at" style="color: #657422;">-name</span> <span class="pp" style="color: #AD0000;">*</span>.default<span class="kw" style="color: #003B4F;">`</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">cp</span> <span class="va" style="color: #111111;">$FIREFOX_PROFILE</span>/cert9.db <span class="va" style="color: #111111;">$ZOTERO_PROFILE</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">cp</span> <span class="va" style="color: #111111;">$FIREFOX_PROFILE</span>/key4.db <span class="va" style="color: #111111;">$ZOTERO_PROFILE</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">cp</span> <span class="va" style="color: #111111;">$FIREFOX_PROFILE</span>/pkcs11.txt <span class="va" style="color: #111111;">$ZOTERO_PROFILE</span></span></code></pre></div>
</section>
<section id="zotero-browser-extension" class="level2">
<h2 class="anchored" data-anchor-id="zotero-browser-extension">zotero browser extension</h2>
<p>From zotero website, install <a href="https://www.zotero.org/download/connectors">connectors</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2023-01-11-zotero-manage-datascience-paper_files/figure-html/ee6bf395-c625-4fc4-89af-f84a6d036780-1-90a8b17a-ae98-412d-8f54-194b773b5b2e.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>For a reason, install browser connector from zotero app doesn’t do anything here.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2023-01-11-zotero-manage-datascience-paper_files/figure-html/cb879b8a-56d1-4bff-8a44-794220faccd4-1-774e25b1-fc5d-4664-b848-98375adb619f.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
<section id="how-to-use-it" class="level1">
<h1>How to use it</h1>
<p>As soon as installed in Firefox, the easiest and more efficient way is to navigate sources with Firefox and Click on Zotero add-on <strong>Save to Zotero</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2023-01-11-zotero-manage-datascience-paper_files/figure-html/5245c43c-4b7b-4b9d-94db-30f6e931a0ca-1-da99f0fa-9a3a-421a-91a2-99dc0b44c5e2.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>It gets all metadata and download PDFs.</p>
<section id="note" class="level2">
<h2 class="anchored" data-anchor-id="note">Note</h2>
<p>We should have the same behaviour from app by using the magic wand but for a certificate reason it fails <img src="https://castorfou.github.io/posts/2023-01-11-zotero-manage-datascience-paper_files/figure-html/e3b2bba5-f46b-4619-9f12-e8d0fcc42a62-1-4f61a970-5da0-42c6-b880-3acc5be9b68f.png" class="img-fluid" alt="image.png"></p>
<p>And doing the same from zotero website gets metadata but not the pdfs.</p>
<p>Because of that I will focus on this process based on browser add-on.</p>


</section>
</section>

 ]]></description>
  <category>datascience</category>
  <guid>https://castorfou.github.io/posts/2023-01-11-zotero-manage-datascience-paper.html</guid>
  <pubDate>Wed, 11 Jan 2023 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/icons/ai.png" medium="image" type="image/png" height="50" width="144"/>
</item>
<item>
  <title>Logbook for January 23</title>
  <link>https://castorfou.github.io/posts/2023-01-02-logbook-January-23.html</link>
  <description><![CDATA[ 




<section id="week-1---january-23" class="level1">
<h1>Week 1 - January 23</h1>
<section id="monday-0102" class="level2">
<h2 class="anchored" data-anchor-id="monday-0102">Monday 01/02</h2>
<section id="wsl-and-x-session" class="level3">
<h3 class="anchored" data-anchor-id="wsl-and-x-session">WSL and X-session</h3>
<p>I have left on-going tests last week of 22.</p>
<p>Trying to start a X-session on ubuntu 22.04 within this new version of WSL.</p>
<p>Done it on a sandbox distro at <a href="../posts/2022-12-15-wsl2-fresh-pc.html#run-gnome-session-in-ubuntu-lts">Run gnome-session in Ubuntu LTS</a></p>
<p>Now <code>gnome-shell</code> can be started from distro <code>ubuntu-x11</code> by calling <code>gnomeshell.sh</code></p>
</section>
</section>
<section id="tuesday-0103" class="level2">
<h2 class="anchored" data-anchor-id="tuesday-0103">Tuesday 01/03</h2>
<section id="other-wsl-stuff" class="level3">
<h3 class="anchored" data-anchor-id="other-wsl-stuff">other wsl stuff</h3>
<p><strong>jupyter lab</strong></p>
<p>setup my <code>base_jupyter</code> env <a href="../posts/2022-12-15-wsl2-fresh-pc.html#jupyter-lab">jupyter lab in WSL</a></p>
<p>Now jupyter lab starts automatically with distro <code>ubuntu-22.04</code></p>
<p>and can be restarted with <code>sudo systemctl restart jupyterlab</code></p>
<p><strong><a href="../posts/2022-12-15-wsl2-fresh-pc.html#zotero">zotero</a></strong></p>
<p>can install and use it including sync (otherwise no interest)</p>
</section>
</section>
<section id="wednesday-0104" class="level2">
<h2 class="anchored" data-anchor-id="wednesday-0104">Wednesday 01/04</h2>
<p>get back to <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-8---convolutions-cnns">fastai lesson 8</a></p>
<p>opened a ticket in wsl github : <a href="https://github.com/microsoft/wslg/issues/944">WSL some icons in taskbar for linux applications are defaulting to Tux</a> (triaged to wslg)</p>
</section>
<section id="friday-0106" class="level2">
<h2 class="anchored" data-anchor-id="friday-0106">Friday 01/06</h2>
<p>Working with collab filtering (to fill NaN), inspired by fastai <a href="https://www.youtube.com/watch?v=htiNBPxcXgo&amp;t=1086s">Lesson 8 - Practical Deep Learning for Coders 2022</a></p>
<p>seems it takes 6x times longer to use collab_learner instead of directly embeddings</p>
<p>I need to understand why. I know why, it was just a mistake in calling <code>collab_learner(dls, n_factors, y_range=y_range)</code> (forgot <code>y_range=</code>)</p>
</section>
</section>
<section id="week-2---january-23" class="level1">
<h1>Week 2 - January 23</h1>
<section id="tuesday-0109" class="level2">
<h2 class="anchored" data-anchor-id="tuesday-0109">Tuesday 01/09</h2>
<p>I have continued my experimentations with collaborative filtering and embedding matrices. With nice results. I have played with parameters (y_range) and hyper parameters (wd). Will have to share with colleagues to get their feedback.</p>
<p>I have started to use collab_learner with NN. But I have to better understand what is behind.</p>
<p>Continue to listen to this lesson 8 (1:06). It is back to computer vision with convolution. I have less interest for these matters but I still like the way Jeremy uses Excel to illustrate all these concepts. Jeremy: the AI excel master.</p>
</section>
<section id="thursday-0111" class="level2">
<h2 class="anchored" data-anchor-id="thursday-0111">Thursday 01/11</h2>
<p>This is the end of <a href="https://www.youtube.com/watch?v=htiNBPxcXgo&amp;t=1086s">Lesson 8 - Practical Deep Learning for Coders 2022</a></p>
<p>And a perfect time to start <a href="https://www.youtube.com/watch?v=_7rMfsA24Ls">Lesson 9 - Deep learning foundations to stable diffusion</a></p>


</section>
</section>

 ]]></description>
  <category>logbook</category>
  <guid>https://castorfou.github.io/posts/2023-01-02-logbook-January-23.html</guid>
  <pubDate>Sun, 01 Jan 2023 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/logbook.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>WSL2 from Windows Store</title>
  <link>https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store.html</link>
  <description><![CDATA[ 




<section id="source-of-inspiration" class="level1">
<h1>Source of inspiration</h1>
<p>From devblogs: <a href="https://devblogs.microsoft.com/commandline/the-windows-subsystem-for-linux-in-the-microsoft-store-is-now-generally-available-on-windows-10-and-11/">The Windows Subsystem for Linux in the Microsoft Store is now generally available on Windows 10 and 11</a></p>
<section id="whats-new-in-the-store-version-of-wsl" class="level2">
<h2 class="anchored" data-anchor-id="whats-new-in-the-store-version-of-wsl">What’s new in the Store version of WSL?<a href="https://devblogs.microsoft.com/commandline/the-windows-subsystem-for-linux-in-the-microsoft-store-is-now-generally-available-on-windows-10-and-11/#whats-new-in-the-store-version-of-wsl"></a></h2>
<p>There are 100s of bug fixes and improvements that you can read through on our <a href="https://github.com/microsoft/WSL/releases">release notes</a> page to see all the improvements that we’ve put into the Store version of WSL. In this blog post I’ll highlight some of the significant changes that you might see as a user upgrading to the Store version for the first time.</p>
<ul>
<li>You can opt in for <a href="https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/">systemd support</a></li>
<li>Windows 10 users can now use Linux GUI apps! This was previously only available to Windows 11 users</li>
<li><code>wsl --install</code> now includes:
<ul>
<li>Direct installation from the Microsoft Store by default</li>
<li><code>--no-launch</code> option to not launch the distro after installing</li>
<li><code>--web-download</code> option which will download the distro through our GitHub releases page rather than through the Microsoft Store</li>
</ul></li>
<li><code>wsl --mount</code> now includes:
<ul>
<li><code>--vhd</code> option to make mounting VHD files easier</li>
<li><code>--name</code> option to make naming the mountpoint easier</li>
</ul></li>
<li><code>wsl --import</code> and <code>wsl --export</code> now include:
<ul>
<li><code>--vhd</code> option to import or export to a VHD directly</li>
</ul></li>
<li>Added <code>wsl --import-in-place</code> to take an existing .vhdx file and register it as a distro</li>
<li>Added <code>wsl --version</code> to print your version information more easily</li>
<li><code>wsl --update</code> now includes:
<ul>
<li>Opening the Microsoft Store page by default</li>
<li><code>--web-download</code> option to allow updates from our GitHub release page</li>
</ul></li>
<li>Better error printing</li>
<li>All of WSLg and the WSL kernel are packaged into the same WSL package, meaning no more extra MSI installs!</li>
</ul>
</section>
</section>
<section id="testing-these-features" class="level1">
<h1>Testing these features</h1>
<section id="systemd" class="level2">
<h2 class="anchored" data-anchor-id="systemd">systemd</h2>
<p>following this article: <a href="https://aka.ms/wslsystemd">systemd support</a></p>
<p>Modify <code>/etc/wsl.conf</code> with</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">[boot]</span></span>
<span id="cb1-2"><span class="va" style="color: #111111;">systemd</span><span class="op" style="color: #5E5E5E;">=</span>true</span></code></pre></div>
<p>And restart wsl image (<code>wsl -t ubuntu-22.04</code>)</p>
<p>Test that it works by running</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">systemctl</span> list-unit-files <span class="at" style="color: #657422;">--type</span><span class="op" style="color: #5E5E5E;">=</span>service</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store_files/figure-html/2f50d1d7-1b0b-451b-a60d-a587955b301d-1-ab0bb1c5-0d39-4110-a50d-9c98ac95cb6d.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>I can now use systemctl to manage services such as</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;">sudo</span> systemctl restart autofs.service</span></code></pre></div>
</section>
<section id="snapd" class="level2">
<h2 class="anchored" data-anchor-id="snapd">snapd</h2>
<p>Upgrade snap</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;">sudo</span> apt-get <span class="at" style="color: #657422;">-y</span> upgrade snapd</span></code></pre></div>
<p>Check it is running</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;">$</span> snap list</span>
<span id="cb5-2"><span class="ex" style="color: null;">Name</span>    Version        Rev    Tracking       Publisher   Notes</span>
<span id="cb5-3"><span class="ex" style="color: null;">core20</span>  20220318       1405   latest/stable  canonical✓  base</span>
<span id="cb5-4"><span class="ex" style="color: null;">lxd</span>     5.0.0-b0287c1  22923  5.0/stable/…   canonical✓  <span class="at" style="color: #657422;">-</span></span>
<span id="cb5-5"><span class="ex" style="color: null;">snapd</span>   2.55.3         15534  latest/stable  canonical✓  snapd</span></code></pre></div>
</section>
<section id="firefox" class="level2">
<h2 class="anchored" data-anchor-id="firefox">firefox</h2>
<p>And install firefox</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;">sudo</span> snap install firefox</span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;"># due to a bug when opening settings</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;"># https://answers.launchpad.net/ubuntu/+question/701403https://answers.launchpad.net/ubuntu/+question/701403</span></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;">sudo</span> apt install xdg-desktop-portal-gtksudo apt install xdg-desktop-portal-gtk</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store_files/figure-html/1bedddbf-579e-4267-9ca1-d34931caf4aa-1-f65bdbb3-c8f4-4a30-ac69-54727b96e6e4.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>To allow external websites, import this certificate <code>/usr/local/share/ca-certificates/cert_M_X5C_sase-mob-sslfwd-trust-ca.crt</code> in the certificate manager</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store_files/figure-html/c0de6090-014d-42e0-91d6-94a16bb2f04f-1-a6fce345-70db-4331-ac47-1dd50cb5a69a.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="nautilus" class="level2">
<h2 class="anchored" data-anchor-id="nautilus">nautilus</h2>
<p>And install nautilus</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;">sudo</span> apt install nautilus nautilus-extension-gnome-terminal</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store_files/figure-html/c1044a11-d871-472f-b7ab-538a248f61eb-1-27246a86-24d7-4131-adad-4a50fd9cbe92.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="gimp" class="level2">
<h2 class="anchored" data-anchor-id="gimp">gimp</h2>
<p>And install gimp</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;">sudo</span> apt install gimp</span></code></pre></div>
</section>
<section id="snap-store" class="level2">
<h2 class="anchored" data-anchor-id="snap-store">snap-store</h2>
<p>I can install like for other softwares</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;">sudo</span> snap install snap-store</span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;"># to fix "Unable to download updates, you do not have permission to install software"</span></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;">sudo</span> apt install <span class="at" style="color: #657422;">--reinstall</span> policykit-1-gnome</span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;">sudo</span> apt install <span class="at" style="color: #657422;">--reinstall</span> gnome-software</span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;"># to fix "Unable to install &lt;e.g. notepadqq&gt;: authentication was required"</span></span>
<span id="cb9-6"><span class="fu" style="color: #4758AB;">sudo</span> snap remove snap-store</span>
<span id="cb9-7"><span class="fu" style="color: #4758AB;">rm</span> <span class="at" style="color: #657422;">-rf</span> ~/snap/snap-store</span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;">sudo</span> snap install snap-store</span>
<span id="cb9-9"><span class="ex" style="color: null;">snap</span> run snap-store</span></code></pre></div>
<p>but it failed at installing anything</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store_files/figure-html/e54a5dbc-eff6-4135-aace-5050b7bbb273-1-990616f8-d52f-4010-b858-0eaa79d21efa.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<section id="investigations" class="level3">
<h3 class="anchored" data-anchor-id="investigations">investigations</h3>
<section id="org.freedesktop.fwupd-timeout-was-reached" class="level4">
<h4 class="anchored" data-anchor-id="org.freedesktop.fwupd-timeout-was-reached">Org.freedesktop.fwupd: Timeout was reached</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store_files/figure-html/1e811415-fce7-461a-ace2-9874cd3e68a9-1-ce278e9f-38cf-4c05-b9ab-bfd73d47a46e.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>This is the trace when starting snap-store</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;">12:54:21:0924</span> Gs  plugin fwupd took 25.0 seconds to do setup</span>
<span id="cb10-2"><span class="ex" style="color: null;">12:54:47:0573</span> Gs  can<span class="st" style="color: #20794D;">'t reliably fixup error code 20 in domain g-dbus-error-quark</span></span>
<span id="cb10-3"><span class="st" style="color: #20794D;">12:54:47:0574 Gs  can'</span>t reliably fixup error code 20 in domain g-dbus-error-quark</span>
<span id="cb10-4"><span class="ex" style="color: null;">12:54:47:0574</span> Gs  not handling error failed for action refresh: Error calling StartServiceByName for org.freedesktop.fwupd: Failed to activate service <span class="st" style="color: #20794D;">'org.freedesktop.fwupd'</span>: timed out <span class="er" style="color: #AD0000;">(</span><span class="va" style="color: #111111;">service_start_timeout</span><span class="op" style="color: #5E5E5E;">=</span>25000ms<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb10-5"><span class="ex" style="color: null;">12:54:47:0574</span> Gs  not handling error failed for action get-updates-historical: Error calling StartServiceByName for org.freedesktop.fwupd: Failed to activate service <span class="st" style="color: #20794D;">'org.freedesktop.fwupd'</span>: timed out <span class="er" style="color: #AD0000;">(</span><span class="va" style="color: #111111;">service_start_timeout</span><span class="op" style="color: #5E5E5E;">=</span>25000ms<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb10-6"><span class="ex" style="color: null;">12:54:47:0622</span> Gs  not handling error no-security for action refresh: Failed to obtain authentication.</span>
<span id="cb10-7"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.Builder.desktop/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-8"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.Calculator.desktop/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-9"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.clocks.desktop/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-10"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.Dictionary.desktop/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-11"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.Documents.desktop/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-12"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.Evince/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-13"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.gedit.desktop/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-14"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.Maps.desktop/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-15"><span class="ex" style="color: null;">12:54:47:0671</span> Gs  adding wildcard app <span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/<span class="pp" style="color: #AD0000;">*</span>/org.gnome.Weather/<span class="pp" style="color: #AD0000;">*</span> to plugin cache</span>
<span id="cb10-16"><span class="ex" style="color: null;">12:54:47:0677</span> Gs  Only 0 apps for recent list, hiding</span>
<span id="cb10-17"><span class="ex" style="color: null;">12:55:13:0039</span> Gs  can<span class="st" style="color: #20794D;">'t reliably fixup error code 20 in domain g-dbus-error-quark</span></span></code></pre></div>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="fu" style="color: #4758AB;">sudo</span> systemctl status fwupd.service</span>
<span id="cb11-2"><span class="ex" style="color: null;">○</span> fwupd.service <span class="at" style="color: #657422;">-</span> Firmware update daemon</span>
<span id="cb11-3">     <span class="ex" style="color: null;">Loaded:</span> loaded <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">/lib/systemd/system/fwupd.service</span><span class="kw" style="color: #003B4F;">;</span> <span class="ex" style="color: null;">static</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb11-4">     <span class="ex" style="color: null;">Active:</span> inactive <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">dead</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb11-5">       <span class="ex" style="color: null;">Docs:</span> https://fwupd.org/</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="ex" style="color: null;">Dec</span> 20 09:05:50 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-8"><span class="ex" style="color: null;">Dec</span> 20 09:06:16 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-9"><span class="ex" style="color: null;">Dec</span> 20 09:06:44 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-10"><span class="ex" style="color: null;">Dec</span> 20 12:11:54 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-11"><span class="ex" style="color: null;">Dec</span> 20 12:12:20 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-12"><span class="ex" style="color: null;">Dec</span> 20 12:12:45 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-13"><span class="ex" style="color: null;">Dec</span> 20 13:53:56 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-14"><span class="ex" style="color: null;">Dec</span> 20 13:54:22 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-15"><span class="ex" style="color: null;">Dec</span> 20 13:54:48 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span>
<span id="cb11-16"><span class="ex" style="color: null;">Dec</span> 20 14:00:02 L001LPF3RKAR5 systemd[1]: Condition check resulted in Firmware update daemon being skipped.</span></code></pre></div>
</section>
</section>
</section>
<section id="dropbox" class="level2">
<h2 class="anchored" data-anchor-id="dropbox">dropbox</h2>
<p>This one is the official one but it fails</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;">sudo</span> apt install nautilus-dropbox</span>
<span id="cb12-2"><span class="ex" style="color: null;">dropbox</span> start <span class="at" style="color: #657422;">-i</span></span></code></pre></div>
<p>another one</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;">rm</span> <span class="at" style="color: #657422;">-rf</span> ~/.dropbox-dist ~/.dropbox</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">-q</span> <span class="at" style="color: #657422;">-O</span> ~/dropbox https://www.dropbox.com/download<span class="pp" style="color: #AD0000;">?</span>dl=packages/dropbox.py</span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;">chmod</span> a+x ~/dropbox</span>
<span id="cb13-4"><span class="va" style="color: #111111;">DISPLAY</span><span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">''</span> <span class="ex" style="color: null;">dropbox</span> start <span class="at" style="color: #657422;">-i</span></span></code></pre></div>
<p>but still no luck</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store_files/figure-html/d79959bd-5a08-4c4c-9382-c01208c59a13-1-865c1332-22b4-482f-ac44-062c3587daeb.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="desktop" class="level2">
<h2 class="anchored" data-anchor-id="desktop">Desktop</h2>
<p>Woulld like to test <a href="https://askubuntu.com/questions/1442663/cannot-start-gnome-session-after-enabling-systemd-on-latest-wsl2" class="uri">https://askubuntu.com/questions/1442663/cannot-start-gnome-session-after-enabling-systemd-on-latest-wsl2</a>:</p>
<p>There 2 ways: - configure and access from XRDP - direct configuration</p>
<p>Will try on a fresh new image</p>
</section>
<section id="rc.local" class="level2">
<h2 class="anchored" data-anchor-id="rc.local">rc.local</h2>
<p>It would allow services to be created and run at boot time: <a href="https://www.cyberciti.biz/faq/how-to-enable-rc-local-shell-script-on-systemd-while-booting-linux-system/" class="uri">https://www.cyberciti.biz/faq/how-to-enable-rc-local-shell-script-on-systemd-while-booting-linux-system/</a></p>
<p>not tested yet.</p>
</section>
</section>
<section id="problems" class="level1">
<h1>Problems</h1>
<section id="error-createprocessparsecommon" class="level2">
<h2 class="anchored" data-anchor-id="error-createprocessparsecommon">ERROR: CreateProcessParseCommon</h2>
<p>When starting image after wsl update, I have the following error:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="op" style="color: #5E5E5E;">&lt;</span>3<span class="op" style="color: #5E5E5E;">&gt;</span>WSL <span class="kw" style="color: #003B4F;">(</span><span class="ex" style="color: null;">8</span><span class="kw" style="color: #003B4F;">)</span> <span class="ex" style="color: null;">ERROR:</span> CreateProcessParseCommon:782: Failed to translate <span class="dt" style="color: #AD0000;">\\</span>wsl.localhost<span class="dt" style="color: #AD0000;">\u</span>buntu-22.04<span class="dt" style="color: #AD0000;">\h</span>ome<span class="dt" style="color: #AD0000;">\g</span>uillaume</span></code></pre></div>
<p>I am not the only one, I have posted in <a href="https://github.com/microsoft/WSL/issues/9252">this issue</a> from WSL github repo.</p>
</section>
<section id="cannot-install-from-snap-store" class="level2">
<h2 class="anchored" data-anchor-id="cannot-install-from-snap-store">Cannot install from snap-store</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store_files/figure-html/e569a13b-0f12-4a61-9e62-ca538423277d-1-e863acbc-3ad7-4002-b128-aad901f6c155.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;">14:12:09:0637</span> Gs  not handling error no-security for action refresh: Failed to obtain authentication.</span>
<span id="cb15-2"><span class="ex" style="color: null;">14:12:09:0638</span> Gs  not handling error not-supported for action get-updates-historical: The name org.freedesktop.fwupd was not provided by any .service files</span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>wsl</category>
  <guid>https://castorfou.github.io/posts/2022-12-19-wsl2-from-windows-store.html</guid>
  <pubDate>Mon, 19 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/icons/wsl2.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>WSL2 on a fresh new PC</title>
  <link>https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc.html</link>
  <description><![CDATA[ 




<p>As an example from T15Gen2, corporate mastered.</p>
<p>This procedure needs admin rights on 2 steps (<a href="../posts/2022-12-15-wsl2-fresh-pc.html#install-nvidia-driver">install nvidia drivers</a>, <a href="../posts/2022-12-15-wsl2-fresh-pc.html#activate-wsl">activate wsl</a>)</p>
<p>And if based on WSL from Windows store (<code>wsl --version</code>&gt;=1.0), lots of new features such as systemd, snap, integrated display, etc. Detailed in <a href="../posts/2022-12-19-wsl2-from-windows-store.html">WSL2 from Windows Store</a></p>
<section id="preparation" class="level1">
<h1>Preparation</h1>
<section id="install-windows-terminal" class="level2">
<h2 class="anchored" data-anchor-id="install-windows-terminal">install Windows Terminal</h2>
<p>Just install <code>Windows Terminal</code> from Windows Store at <a href="https://aka.ms/terminal" class="uri">https://aka.ms/terminal</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/ffa57bab-f1f8-4769-89ca-80befe985bff-1-14214012-dafb-4ce0-8960-d2acc3d4dcb1.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="download-nvidia-driver" class="level2">
<h2 class="anchored" data-anchor-id="download-nvidia-driver">download Nvidia driver</h2>
<p>Download from <a href="https://developer.nvidia.com/cuda/wsl" class="uri">https://developer.nvidia.com/cuda/wsl</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/b214ea81-04dd-4295-9f6d-f3404729c9b6-1-44d9bbb0-9529-4d46-aed6-e058437a4e09.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>(Dec-22: this file <code>527.56-desktop-win10-win11-64bit-international-dch-whql.exe</code>)</p>
</section>
<section id="download-ubuntu-lts-image" class="level2">
<h2 class="anchored" data-anchor-id="download-ubuntu-lts-image">download Ubuntu LTS image</h2>
<p>Download from <a href="https://cloud-images.ubuntu.com/daily/server/wsl/" class="uri">https://cloud-images.ubuntu.com/daily/server/wsl/</a></p>
<p>This address may change (search for « <a href="https://www.google.com/search?q=cloud+wsl+ubuntu+images&amp;rlz=1C1GCEB_enFR1022FR1022&amp;oq=cloud+wsl+ubuntu+images&amp;aqs=chrome.0.69i59j69i60l3.344j0j7&amp;sourceid=chrome&amp;ie=UTF-8">cloud wsl ubuntu images</a> »)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/feea4b16-9560-4376-ac20-6ebcd81a2602-1-9bc2eacb-1523-4584-8fcc-5cb94c33c578.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>(Dec-22: this file <code>ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz</code>)</p>
</section>
</section>
<section id="installation" class="level1">
<h1>Installation</h1>
<section id="install-nvidia-driver" class="level2">
<h2 class="anchored" data-anchor-id="install-nvidia-driver">install Nvidia driver</h2>
<p>as admin, install the driver</p>
</section>
<section id="install-ubuntu-in-wsl" class="level2">
<h2 class="anchored" data-anchor-id="install-ubuntu-in-wsl">install Ubuntu in WSL</h2>
<section id="activate-wsl" class="level3">
<h3 class="anchored" data-anchor-id="activate-wsl">activate WSL</h3>
<p>as admin, open windows terminal, and run</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">--install</span></span>
<span id="cb1-2"><span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">--set-default-version</span> 2</span></code></pre></div>
</section>
<section id="install-ubuntu-lts" class="level3">
<h3 class="anchored" data-anchor-id="install-ubuntu-lts">install Ubuntu LTS</h3>
<p>following instructions from <a href="../posts/2022-04-25-install ubuntu 22.04 on WSL.html#automatic-setup">install ubuntu 22.04 on WSL # Automatic setup</a>.</p>
<p>And here are the steps</p>
<p>Create 2 folders: <code>C:\wsl\Ubuntu-22.04\download</code>, <code>C:\wsl\Ubuntu-22.04\instance</code></p>
<p>Move <code>ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz</code> in <code>C:\wsl\Ubuntu-22.04\download</code></p>
<p>Copy scripts <a href="https://raw.githubusercontent.com/castorfou/blog/main/files/setup_wsl_root.sh"><code>setup_wsl_root.sh</code></a> and <a href="https://raw.githubusercontent.com/castorfou/blog/main/files/setup_wsl_user.sh"><code>setup_wsl_user.sh</code></a> to <code>C:\wsl\Ubuntu-22.04\download</code></p>
<section id="install-wsl-vpnkit" class="level4">
<h4 class="anchored" data-anchor-id="install-wsl-vpnkit">install wsl-vpnkit</h4>
<p>Copy <a href="https://github.com/sakai135/wsl-vpnkit/releases/download/v0.3.8/wsl-vpnkit.tar.gz"><code>wsl-vpnkit</code></a> to <code>C:\wsl\Ubuntu-22.04\download</code> (see <a href="https://dev.michelin.com/wsl2/fundamentals" class="uri">https://dev.michelin.com/wsl2/fundamentals</a> for more details)</p>
<p>Install wsl-vpnkit from Windows Terminal:</p>
<pre><code>wsl --import wsl-vpnkit $env:USERPROFILE\wsl-vpnkit C:\wsl\ubuntu-22.04\download\wsl-vpnkit.tar.gz
wsl -d wsl-vpnkit
wsl -d wsl-vpnkit service wsl-vpnkit start</code></pre>
</section>
<section id="install-ubuntu-and-setup-root" class="level4">
<h4 class="anchored" data-anchor-id="install-ubuntu-and-setup-root">install ubuntu and setup root</h4>
<p>Install ubuntu-lts from Windows Terminal:</p>
<pre><code>wsl --import ubuntu-22.04 C:\wsl\ubuntu-22.04\instance C:\wsl\ubuntu-22.04\download\ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz
# close windows terminal / launch it (ubuntu-22.04 entry should be added within it)
wsl -d ubuntu-22.04 # or launch from Windows Terminal menu
cd
cp /mnt/c/wsl/Ubuntu-22.04/download/setup_wsl_* ~/
chmod +x setup_wsl_root.sh
./setup_wsl_root.sh</code></pre>
<p>Provide username, password and quit session with Ctrl-D</p>
<p>From Windows Terminal, stop wsl with <code>wsl -t ubuntu-22.04</code>, a new profile for ubuntu-22.04 should have been automatically created in Windows Terminal</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/55a8442c-ed78-4d61-82ed-eeba534ab895-1-edf2fa53-fb5b-41ec-b04b-b55116f2125b.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="setup-user" class="level4">
<h4 class="anchored" data-anchor-id="setup-user">setup user</h4>
<p>Start <code>ubuntu-22.04</code> by clicking the profile in Windows Terminal</p>
<p>Should start with something like</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/110ff48d-cd3c-4c9c-bf2a-22639a9601bc-1-8e9bca5e-c0bf-4ef4-947b-f5fec289c9a4.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Step 2: accept default entries (type enter). Add the generated key to gitlab &gt; preferences &gt; SSH keys. And then resume.</p>
<p>At that stage this is a fully operating image of ubuntu (internet, apt)</p>
</section>
</section>
<section id="activate-systemd" class="level3">
<h3 class="anchored" data-anchor-id="activate-systemd">activate systemd</h3>
<p>If running wsl version &gt; 1.0, you can <a href="../posts/2022-12-19-wsl2-from-windows-store.html#systemd">activate systemd</a></p>
<p>Modify <code>/etc/wsl.conf</code> with</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;">[boot]</span></span>
<span id="cb4-2"><span class="va" style="color: #111111;">systemd</span><span class="op" style="color: #5E5E5E;">=</span>true</span></code></pre></div>
<p>And restart wsl image (<code>wsl -t ubuntu-22.04</code>)</p>
<p>Test that it works by running</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;">systemctl</span> list-unit-files <span class="at" style="color: #657422;">--type</span><span class="op" style="color: #5E5E5E;">=</span>service</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/4c52acb2-3c41-4b7f-9ab3-c4724c59cb54-1-ab0bb1c5-0d39-4110-a50d-9c98ac95cb6d.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
</section>
<section id="configure-ubuntu-lts-for-pythonai-development" class="level1">
<h1>Configure Ubuntu LTS for Python/AI development</h1>
<section id="keep-config-files-in-git" class="level2">
<h2 class="anchored" data-anchor-id="keep-config-files-in-git">keep config files in git</h2>
<p>I have explained how and why to do this step at <a href="../posts/2022-04-07-keep dotfiles in git.html">keep dotfiles in git</a></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/blog/master/files/setup_wsl_00_config_files_in_git.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span>
<span id="cb6-2"><span class="bu" style="color: null;">source</span> ~/.bashrc</span></code></pre></div>
<p>TODO: take branch name as a parameter. Meanwhile download the script and update branch name to something new</p>
</section>
<section id="git-credential-manager-to-push-on-github" class="level2">
<h2 class="anchored" data-anchor-id="git-credential-manager-to-push-on-github">git credential manager to push on github</h2>
<p>This is explained at <a href="https://github.com/GitCredentialManager/git-credential-manager/blob/main/README.md">git-credential-manager repo</a></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/blog/master/files/setup_wsl_06_git_credential_manager.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span></code></pre></div>
<p>You need to create a personal access token in github.</p>
<p>And when pushing to a github repo, use this token as the password</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/6d6341d7-6604-405d-955f-8234907f503d-1-4129a8f8-597d-439a-9d53-55d7c0022a51.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="optional-automount-secured-vbox" class="level2">
<h2 class="anchored" data-anchor-id="optional-automount-secured-vbox">(optional) automount secured vbox</h2>
<p>Because I keep secured data within my secured disks mounted in windows (Z:, Y:, …)</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/blog/master/files/setup_wsl_01_automount_secured_vbox.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span></code></pre></div>
<p>Modify <code>/etc/vbox.autofs</code> to match your actual mounted disks. <code>sudo service autofs start</code> to start the service.</p>
<p>if it fails, check that kernel is at least v5. <code>uname -a</code>. If not maybe in WSL 1 insted of WSL 2? (<code>sudo automount -f -v</code> should provide more information)</p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-12-15T06:59:08.940563Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-12-15T06:59:08.939739Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-12-15T06:59:09.054598Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-12-15T06:59:09.053780Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-12-15T06:59:08.940524Z&quot;}" data-tags="[]" data-execution_count="5">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;">#my vbox.autofs file</span></span>
<span id="cb9-2"><span class="op" style="color: #5E5E5E;">!</span>cat <span class="op" style="color: #5E5E5E;">/</span>etc<span class="op" style="color: #5E5E5E;">/</span>vbox.autofs</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>janus   -fstype=drvfs,uid=1000,gid=1000 :Z:</code></pre>
</div>
</div>
<p>if <code>systemd</code> is activated, we can manage services with <code>journalctl</code></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="co" style="color: #5E5E5E;">#restart autofs</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;">sudo</span> systemctl restart autofs.service</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;">#read logs for autofs (-r: display last entries first)</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;">#to use it as user, add your user to adm group</span></span>
<span id="cb11-6"><span class="co" style="color: #5E5E5E;">#sudo usermod -a -G adm &lt;your_username&gt;</span></span>
<span id="cb11-7"><span class="ex" style="color: null;">journalctl</span> <span class="at" style="color: #657422;">-r</span> <span class="at" style="color: #657422;">-u</span> autofs</span>
<span id="cb11-8"></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;">#print warning</span></span>
<span id="cb11-10"><span class="ex" style="color: null;">journalctl</span> <span class="at" style="color: #657422;">-r</span> <span class="at" style="color: #657422;">-p</span> warning</span></code></pre></div>
<p>other examples with journalctl:</p>
<p><a href="https://www.geeksforgeeks.org/journalctl-command-in-linux-with-examples/" class="uri">https://www.geeksforgeeks.org/journalctl-command-in-linux-with-examples/</a></p>
</section>
<section id="python-with-conda-and-configure-base-environment-jupyterlab-mamba" class="level2">
<h2 class="anchored" data-anchor-id="python-with-conda-and-configure-base-environment-jupyterlab-mamba">python with conda and configure base environment (jupyterlab, mamba)</h2>
<p>Give a look to <a href="../posts/2022-04-25-install ubuntu 22.04 on WSL.html#python-with-conda-and-configure-base-environment-jupyterlab-mamba">script sources</a></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="co" style="color: #5E5E5E;"># install miniconda</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/blog/master/files/setup_wsl_02_install_python_conda_part1.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span>
<span id="cb12-3"><span class="bu" style="color: null;">source</span> ~/.bashrc</span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;"># install mamba</span></span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/blog/master/files/setup_wsl_02_install_python_conda_part2.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span>
<span id="cb12-6"><span class="bu" style="color: null;">source</span> ~/.bashrc</span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;"># install certificates for Python</span></span>
<span id="cb12-8"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/blog/master/files/setup_wsl_02_install_python_conda_part3.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span>
<span id="cb12-9"><span class="bu" style="color: null;">source</span> ~/.bashrc</span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;"># create base_jupyter environment</span></span>
<span id="cb12-11"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/blog/master/files/setup_wsl_02_install_python_conda_part4.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span>
<span id="cb12-12"><span class="bu" style="color: null;">source</span> ~/.bashrc</span></code></pre></div>
</section>
<section id="python-with-pip" class="level2">
<h2 class="anchored" data-anchor-id="python-with-pip">python with pip</h2>
<p>Give a look to <a href="../posts/2022-04-25-install ubuntu 22.04 on WSL.html#configure-pip">script sources</a></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;">wget</span> <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/blog/master/files/setup_wsl_08_pip.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span></code></pre></div>
</section>
<section id="jupyter-lab" class="level2">
<h2 class="anchored" data-anchor-id="jupyter-lab">jupyter lab</h2>
<p>In order to preserve base environment, I won’t install anything in it.</p>
<p>I will create a <code>base_jupyter</code> env with what is needed for running jupyter lab. And create a jupyterlab service to automatically start jupyter lab with my distro (and stop/restart it)</p>
<p><code>base_jupyter</code></p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2023-01-10T11:07:30.353647Z&quot;,&quot;iopub.status.busy&quot;:&quot;2023-01-10T11:07:30.353429Z&quot;,&quot;iopub.status.idle&quot;:&quot;2023-01-10T11:07:30.466028Z&quot;,&quot;shell.execute_reply&quot;:&quot;2023-01-10T11:07:30.465336Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2023-01-10T11:07:30.353633Z&quot;}" data-tags="[]" data-execution_count="1">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="op" style="color: #5E5E5E;">!</span>cat <span class="op" style="color: #5E5E5E;">/</span>home<span class="op" style="color: #5E5E5E;">/</span>guillaume<span class="op" style="color: #5E5E5E;">/</span>_conda_env<span class="op" style="color: #5E5E5E;">/</span>base_jupyter.txt</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>conda remove --name base_jupyter --all
mamba create -n base_jupyter python=3.9
conda activate base_jupyter
mamba install -c conda-forge jupyterlab
jupyter labextension install jupyterlab-plotly

jupyter-lab --generate-config
# in .jupyter/jupyter_lab_config.py
# replace # c.ServerApp.use_redirect_file = True
# with c.ServerApp.use_redirect_file = False
# or get it from gitlab/JANUS/dotfiles


mamba install -c conda-forge jupyterlab_execute_time

pip install azure-cli</code></pre>
</div>
</div>
<p>jupyterlab as a service:</p>
<p>FILE /etc/systemd/system/jupyterlab.service</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;">[Unit]</span></span>
<span id="cb16-2"><span class="va" style="color: #111111;">Description</span><span class="op" style="color: #5E5E5E;">=</span>Jupyter <span class="ex" style="color: null;">lab</span> boot scriptJupyter lab boot script</span>
<span id="cb16-3"><span class="va" style="color: #111111;">DefaultDependencies</span><span class="op" style="color: #5E5E5E;">=</span>no</span>
<span id="cb16-4"><span class="va" style="color: #111111;">After</span><span class="op" style="color: #5E5E5E;">=</span>network.target</span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="ex" style="color: null;">[Service]</span></span>
<span id="cb16-7"><span class="va" style="color: #111111;">Type</span><span class="op" style="color: #5E5E5E;">=</span>simple</span>
<span id="cb16-8"><span class="va" style="color: #111111;">User</span><span class="op" style="color: #5E5E5E;">=</span>guillaume</span>
<span id="cb16-9"><span class="va" style="color: #111111;">Group</span><span class="op" style="color: #5E5E5E;">=</span>adm</span>
<span id="cb16-10"><span class="va" style="color: #111111;">ExecStart</span><span class="op" style="color: #5E5E5E;">=</span>/home/guillaume/bin/jupyterlab.sh</span>
<span id="cb16-11"><span class="va" style="color: #111111;">TimeoutStartSec</span><span class="op" style="color: #5E5E5E;">=</span>0</span>
<span id="cb16-12"><span class="va" style="color: #111111;">RemainAfterExit</span><span class="op" style="color: #5E5E5E;">=</span>yes</span>
<span id="cb16-13"></span>
<span id="cb16-14"><span class="ex" style="color: null;">[Install]</span></span>
<span id="cb16-15"><span class="va" style="color: #111111;">WantedBy</span><span class="op" style="color: #5E5E5E;">=</span>default.target</span></code></pre></div>
<p>and</p>
<p>FILE /home/guillaume/bin/jupyterlab.sh</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash </span></span>
<span id="cb17-2"><span class="ex" style="color: null;">screen</span> <span class="at" style="color: #657422;">-dmS</span> <span class="st" style="color: #20794D;">"jupyter_screen"</span></span>
<span id="cb17-3"><span class="ex" style="color: null;">screen</span> <span class="at" style="color: #657422;">-S</span> <span class="st" style="color: #20794D;">"jupyter_screen"</span> <span class="at" style="color: #657422;">-p</span> 0 <span class="at" style="color: #657422;">-X</span> exec jupyterlab</span></code></pre></div>
<p>Then enable</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="fu" style="color: #4758AB;">chmod</span> +x /home/guillaume/bin/jupyterlab.sh</span>
<span id="cb18-2"><span class="fu" style="color: #4758AB;">sudo</span> systemctl daemon-reload</span>
<span id="cb18-3"><span class="fu" style="color: #4758AB;">sudo</span> systemctl enable jupyterlab.service</span>
<span id="cb18-4"><span class="fu" style="color: #4758AB;">sudo</span> systemctl restart jupyterlab.service</span></code></pre></div>
<p>Just pointing to <a href="http://localhost:8888/lab" class="uri">http://localhost:8888/lab</a></p>
</section>
</section>
<section id="configure-ubuntu-lts-as-desktop---run-standalone-applications" class="level1">
<h1>Configure Ubuntu LTS as desktop - run standalone applications</h1>
<p>based on wsl version &gt;= 1.0.</p>
<p>See <a href="../posts/2022-12-19-wsl2-from-windows-store.html">WSL2 from Windows Store</a></p>
<section id="snapd" class="level2">
<h2 class="anchored" data-anchor-id="snapd">snapd</h2>
<p>Upgrade snap</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;">sudo</span> apt-get <span class="at" style="color: #657422;">-y</span> upgrade snapd</span></code></pre></div>
<p>Check it is running</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="ex" style="color: null;">$</span> snap list</span>
<span id="cb20-2"><span class="ex" style="color: null;">Name</span>    Version        Rev    Tracking       Publisher   Notes</span>
<span id="cb20-3"><span class="ex" style="color: null;">core20</span>  20220318       1405   latest/stable  canonical✓  base</span>
<span id="cb20-4"><span class="ex" style="color: null;">lxd</span>     5.0.0-b0287c1  22923  5.0/stable/…   canonical✓  <span class="at" style="color: #657422;">-</span></span>
<span id="cb20-5"><span class="ex" style="color: null;">snapd</span>   2.55.3         15534  latest/stable  canonical✓  snapd</span></code></pre></div>
</section>
<section id="firefox" class="level2">
<h2 class="anchored" data-anchor-id="firefox">firefox</h2>
<p>And install firefox</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="fu" style="color: #4758AB;">sudo</span> snap install firefox</span>
<span id="cb21-2"><span class="co" style="color: #5E5E5E;"># due to a bug when opening settings</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;"># https://answers.launchpad.net/ubuntu/+question/701403https://answers.launchpad.net/ubuntu/+question/701403</span></span>
<span id="cb21-4"><span class="fu" style="color: #4758AB;">sudo</span> apt install xdg-desktop-portal-gtk</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/a23898c4-f3f8-40e6-abf4-e46c06ceaa66-1-f65bdbb3-c8f4-4a30-ac69-54727b96e6e4.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>To allow external websites, import this certificate <code>/usr/local/share/ca-certificates/cert_M_X5C_sase-mob-sslfwd-trust-ca.crt</code> in the certificate manager</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/b151c71f-a1b4-4a3f-90cb-f704ad5cee4b-1-a6fce345-70db-4331-ac47-1dd50cb5a69a.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="nautilus" class="level2">
<h2 class="anchored" data-anchor-id="nautilus">nautilus</h2>
<p>And install nautilus</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="fu" style="color: #4758AB;">sudo</span> apt install nautilus nautilus-extension-gnome-terminal</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/ddff4bbe-8c2c-44ef-9df8-bdc6c06ba501-1-27246a86-24d7-4131-adad-4a50fd9cbe92.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="gnome-tweaks-and-yaru-theme" class="level2">
<h2 class="anchored" data-anchor-id="gnome-tweaks-and-yaru-theme">gnome-tweaks and yaru theme</h2>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="fu" style="color: #4758AB;">sudo</span> add-apt-repository univ</span>
<span id="cb23-2"><span class="fu" style="color: #4758AB;">sudo</span> apt-get <span class="at" style="color: #657422;">-y</span> install gnome-tweaks</span>
<span id="cb23-3"><span class="fu" style="color: #4758AB;">sudo</span> apt-get <span class="at" style="color: #657422;">-y</span> install yaru-theme-gtk</span>
<span id="cb23-4"><span class="fu" style="color: #4758AB;">sudo</span> apt-get <span class="at" style="color: #657422;">-y</span> install yaru-theme-icon</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/ae8205fb-aa09-48c5-9738-a917a104644e-1-1a4c2bac-a4ff-46fb-b5b6-ae40add3390d.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>And impact on nautilus is directly visible</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/e15b2c4e-9d7a-42ee-ab9e-8c043cb2810f-1-2f9c1781-e431-46d1-9c92-a8fe8a3a22c2.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="gimp" class="level2">
<h2 class="anchored" data-anchor-id="gimp">gimp</h2>
<p>And install gimp</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="fu" style="color: #4758AB;">sudo</span> apt install gimp</span></code></pre></div>
</section>
<section id="zotero" class="level2">
<h2 class="anchored" data-anchor-id="zotero">zotero</h2>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb25-1"><span class="ex" style="color: null;">snap</span> find zotero</span>
<span id="cb25-2"><span class="ex" style="color: null;">Name</span>         Version  Publisher   Notes  Summary</span>
<span id="cb25-3"><span class="ex" style="color: null;">zotero-snap</span>  6.0.18   extraymond  <span class="at" style="color: #657422;">-</span>      Zotero helps you collect, organize, cite, and share research.</span>
<span id="cb25-4"><span class="ex" style="color: null;">qnotero</span>      2.3.1    ealbiter    <span class="at" style="color: #657422;">-</span>      Standalone sidekick to Zotero reference manager.</span>
<span id="cb25-5"><span class="ex" style="color: null;">zotviewer</span>    1.5.0    fvalle      <span class="at" style="color: #657422;">-</span>      Zotero Visualizer</span>
<span id="cb25-6"></span>
<span id="cb25-7"><span class="fu" style="color: #4758AB;">sudo</span> snap install zotero-snap</span>
<span id="cb25-8"><span class="ex" style="color: null;">zotero-snap</span> 6.0.18 from extraymond installed</span></code></pre></div>
<p>and there is something to do to activate sync: <a href="https://github.com/extraymond/zotero-snap/issues/29" class="uri">https://github.com/extraymond/zotero-snap/issues/29</a></p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb26-1"><span class="va" style="color: #111111;">FIREFOX_PROFILE</span><span class="op" style="color: #5E5E5E;">=</span><span class="kw" style="color: #003B4F;">`</span><span class="fu" style="color: #4758AB;">find</span> ~/snap/firefox/common/.mozilla/ <span class="at" style="color: #657422;">-name</span> <span class="pp" style="color: #AD0000;">*</span>.default<span class="kw" style="color: #003B4F;">`</span></span>
<span id="cb26-2"><span class="va" style="color: #111111;">ZOTERO_PROFILE</span><span class="op" style="color: #5E5E5E;">=</span><span class="kw" style="color: #003B4F;">`</span><span class="fu" style="color: #4758AB;">find</span> ~/snap/zotero-snap/common/.zotero/ <span class="at" style="color: #657422;">-name</span> <span class="pp" style="color: #AD0000;">*</span>.default<span class="kw" style="color: #003B4F;">`</span></span>
<span id="cb26-3"><span class="fu" style="color: #4758AB;">cp</span> <span class="va" style="color: #111111;">$FIREFOX_PROFILE</span>/cert9.db <span class="va" style="color: #111111;">$ZOTERO_PROFILE</span></span>
<span id="cb26-4"><span class="fu" style="color: #4758AB;">cp</span> <span class="va" style="color: #111111;">$FIREFOX_PROFILE</span>/key4.db <span class="va" style="color: #111111;">$ZOTERO_PROFILE</span></span>
<span id="cb26-5"><span class="fu" style="color: #4758AB;">cp</span> <span class="va" style="color: #111111;">$FIREFOX_PROFILE</span>/pkcs11.txt <span class="va" style="color: #111111;">$ZOTERO_PROFILE</span></span></code></pre></div>
</section>
<section id="pdf-support" class="level2">
<h2 class="anchored" data-anchor-id="pdf-support">pdf support</h2>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb27-1"><span class="co" style="color: #5E5E5E;">#acrobat reader (which uses wine)</span></span>
<span id="cb27-2"><span class="fu" style="color: #4758AB;">sudo</span> snap install acrordrdc</span>
<span id="cb27-3"></span>
<span id="cb27-4"><span class="co" style="color: #5E5E5E;">#evince universal documen reader for ubuntu</span></span>
<span id="cb27-5"><span class="fu" style="color: #4758AB;">sudo</span> snap install evince</span></code></pre></div>
</section>
</section>
<section id="run-gnome-session-in-ubuntu-lts" class="level1">
<h1>Run gnome-session in Ubuntu LTS</h1>
<p>for the moment I don’t recommend to do it in the main distro.</p>
<p>It is just as a test. Lots of stuffs don’t work as expected.</p>
<section id="install-test-distro-from-scratch" class="level2">
<h2 class="anchored" data-anchor-id="install-test-distro-from-scratch">install test distro <strong>from scratch</strong></h2>
<p>from powershell</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">--import</span> ubuntu-x11 C:<span class="dt" style="color: #AD0000;">\w</span>sl<span class="dt" style="color: #AD0000;">\U</span>buntu-22.04_X11<span class="dt" style="color: #AD0000;">\i</span>nstance C:<span class="dt" style="color: #AD0000;">\w</span>sl<span class="dt" style="color: #AD0000;">\U</span>buntu-22.04_X11<span class="dt" style="color: #AD0000;">\d</span>ownload<span class="dt" style="color: #AD0000;">\u</span>buntu-jammy-wsl-amd64-wsl.rootfs.tar.gz</span>
<span id="cb28-2"><span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">-d</span> ubuntu-x11</span>
<span id="cb28-3"><span class="bu" style="color: null;">cd</span></span>
<span id="cb28-4"><span class="fu" style="color: #4758AB;">cp</span> /mnt/c/wsl/Ubuntu-22.04_X11/download/setup_wsl_<span class="pp" style="color: #AD0000;">*</span> ~/</span>
<span id="cb28-5"><span class="fu" style="color: #4758AB;">chmod</span> +x setup_wsl_root.sh</span>
<span id="cb28-6"><span class="ex" style="color: null;">./setup_wsl_root.sh</span></span></code></pre></div>
<p>from powershell</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb29-1"><span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">-t</span> ubuntu-x11</span></code></pre></div>
<p>start ubuntu-x11 from windows terminal menu</p>
<p>and enter informations requested (ssh keys (paste to gitlab), update certificates (enter password)). Other steps are automatic.</p>
<p>Other steps: - activate systemd (by modifying /etc/wsl.conf) - restart</p>
</section>
<section id="activate-gnome-session-and-launch-gnome-shell" class="level2">
<h2 class="anchored" data-anchor-id="activate-gnome-session-and-launch-gnome-shell">activate gnome-session and launch gnome-shell</h2>
<p>Here we have a fully working distro. And we will test what is suggested at : <a href="https://askubuntu.com/a/1445415" class="uri">https://askubuntu.com/a/1445415</a></p>
<ul>
<li>Create the file /etc/pam.d/system/systemd-user</li>
<li>Restart distro</li>
<li><code>sudo apt install ubuntu-desktop acpi-support-</code></li>
<li>prevent gdm service to start
<ul>
<li><code>sudo systemctl stop gdm.service</code></li>
<li><code>sudo systemctl disable gdm.service</code></li>
</ul></li>
<li>activate x11 config at boot</li>
</ul>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb30-1"><span class="fu" style="color: #4758AB;">sudo</span> systemctl is-enabled rc-local.service</span>
<span id="cb30-2"><span class="kw" style="color: #003B4F;">(</span><span class="cf" style="color: #003B4F;">if</span> <span class="ex" style="color: null;">static</span> it means it has be activated<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb30-3"><span class="fu" style="color: #4758AB;">sudo</span> systemctl enable rc-local.service</span></code></pre></div>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb31-1"><span class="co" style="color: #5E5E5E;">#create rc.local file</span></span>
<span id="cb31-2"><span class="fu" style="color: #4758AB;">sudo</span> vi /etc/rc.local</span>
<span id="cb31-3"></span>
<span id="cb31-4"><span class="co" style="color: #5E5E5E;">#!/bin/sh -e</span></span>
<span id="cb31-5"><span class="fu" style="color: #4758AB;">mount</span> <span class="at" style="color: #657422;">-o</span> rw,remount /tmp/.X11-unix/</span>
<span id="cb31-6"><span class="fu" style="color: #4758AB;">chmod</span> +t /tmp/.X11-unix</span>
<span id="cb31-7"><span class="fu" style="color: #4758AB;">chmod</span> o+rw /dev/dri/renderD128</span>
<span id="cb31-8"><span class="ex" style="color: null;">/usr/libexec/at-spi-bus-launcher</span> <span class="at" style="color: #657422;">--launch-immediately</span> <span class="kw" style="color: #003B4F;">&amp;</span></span>
<span id="cb31-9"><span class="bu" style="color: null;">exit</span> 0</span>
<span id="cb31-10"></span>
<span id="cb31-11"><span class="co" style="color: #5E5E5E;">#save &amp; exit</span></span>
<span id="cb31-12"><span class="fu" style="color: #4758AB;">sudo</span> chmod 700 /etc/rc.local</span></code></pre></div>
<ul>
<li><code>sudo usermod -a -G adm guillaume</code></li>
<li>Restart distro</li>
<li>launch <code>XDG_SESSION_TYPE=x11 gnome-session --disable-acceleration-check --session=ubuntu --systemd-service &gt; /dev/null 2&gt;&amp;1</code> (this can be added to .bashrc or as a service)</li>
</ul>
<p>and then</p>
<ul>
<li><code>MUTTER_DEBUG_DUMMY_MODE_SPECS=1920x1080 gnome-shell --nested --no-x11 2&gt; /dev/null &amp;</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc_files/figure-html/ce9fb9b5-eda2-4d2d-ab54-2923e266bd5d-1-bbf4eacb-20e4-440a-a1bd-c430832000b2.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Then we can start it by running <code>gnomeshell.sh</code></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb32-1"><span class="fu" style="color: #4758AB;">cat</span> bin/gnomeshell.sh</span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;">#!/bin/bash</span></span>
<span id="cb32-3"><span class="va" style="color: #111111;">MUTTER_DEBUG_DUMMY_MODE_SPECS</span><span class="op" style="color: #5E5E5E;">=</span>1920x1080 <span class="ex" style="color: null;">gnome-shell</span> <span class="at" style="color: #657422;">--nested</span> <span class="at" style="color: #657422;">--no-x11</span> <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">&gt;</span> /dev/null <span class="kw" style="color: #003B4F;">&amp;</span></span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>wsl</category>
  <category>wsl_latest</category>
  <guid>https://castorfou.github.io/posts/2022-12-15-wsl2-fresh-pc.html</guid>
  <pubDate>Wed, 14 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/icons/wsl2.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Logbook for December 22</title>
  <link>https://castorfou.github.io/posts/2022-12-01-logbook-December-22.html</link>
  <description><![CDATA[ 




<section id="week-48---december-22" class="level1">
<h1>Week 48 - December 22</h1>
<section id="thursday-1201" class="level2">
<h2 class="anchored" data-anchor-id="thursday-1201"><strong>Thursday 12/01</strong></h2>
<section id="fastai-course-lesson-8---convolutions-cnns" class="level3">
<h3 class="anchored" data-anchor-id="fastai-course-lesson-8---convolutions-cnns">fastai course lesson 8 - Convolutions (CNNs)</h3>
<p>Running through <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-8---convolutions-cnns">lesson 8</a></p>
</section>
</section>
</section>
<section id="week-49---december-22" class="level1">
<h1>Week 49 - December 22</h1>
<section id="monday-1205" class="level2">
<h2 class="anchored" data-anchor-id="monday-1205"><strong>Monday 12/05</strong></h2>
<section id="chatgpt" class="level3">
<h3 class="anchored" data-anchor-id="chatgpt">ChatGPT</h3>
<p>Waiting for some models to be trained, I have some time to play with <a href="https://chat.openai.com/chat">ChatGPT</a> from openai.</p>
<p>Some questions:</p>
<ul>
<li><p>what are the causes of climate change in France?</p></li>
<li><p>and what are the options to face it?</p></li>
<li><p>how to train a deep neural network with fastai?</p></li>
<li><p>what is the most beautiful Franch word?</p></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-01-logbook-December-22_files/figure-html/8411af41-542f-4d71-b153-e81161ae5df0-1-398d4c0c-0e14-4841-9a8c-6ebe27a40cde.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>nice and fun!</p>
</section>
</section>
<section id="friday-1209" class="level2">
<h2 class="anchored" data-anchor-id="friday-1209">Friday 12/09</h2>
<p>I have just encountered an issue in conda/mamba with error messages <code>libtinfow.so.6: no version information available</code></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="kw" style="color: #003B4F;">(</span><span class="ex" style="color: null;">base</span><span class="kw" style="color: #003B4F;">)</span> <span class="ex" style="color: null;">guillaume@L001LPF3RKAR5:~$</span> conda info</span>
<span id="cb1-2"><span class="ex" style="color: null;">/home/guillaume/miniconda/bin/python:</span> /home/guillaume/miniconda/bin/../lib/./libtinfow.so.6: no version information available <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">required</span> by /home/guillaume/miniconda/bin/../lib/libpypy3.9-c.so<span class="kw" style="color: #003B4F;">)</span></span></code></pre></div>
<p>A solution for me was issued from <a href="https://stackoverflow.com/questions/72103046/libtinfo-so-6-no-version-information-available-message-using-conda-environment" class="uri">https://stackoverflow.com/questions/72103046/libtinfo-so-6-no-version-information-available-message-using-conda-environment</a></p>
<p>Install ncurses from conda-forge</p>
<p>To call <code>conda install -y -c conda-forge ncurses</code> before installing mamba</p>
</section>
</section>
<section id="week-50---december-22" class="level1">
<h1>Week 50 - December 22</h1>
<section id="monday-1212" class="level2">
<h2 class="anchored" data-anchor-id="monday-1212">Monday 12/12</h2>
<section id="fastai-course-lesson-8---convolutions-cnn" class="level3">
<h3 class="anchored" data-anchor-id="fastai-course-lesson-8---convolutions-cnn">fastai course lesson 8 - Convolutions (CNN)</h3>
<p>Continuing <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-8---convolutions-cnns">lesson 8</a></p>
</section>
</section>
<section id="wednesday-1214" class="level2">
<h2 class="anchored" data-anchor-id="wednesday-1214">Wednesday 12/14</h2>
<section id="chatgpt-and-rlhf-reinforcement-learning-from-human-feedback" class="level4">
<h4 class="anchored" data-anchor-id="chatgpt-and-rlhf-reinforcement-learning-from-human-feedback">ChatGPT and RLHF Reinforcement Learning from Human Feedback</h4>
<p>1 hour live from Nathan Lambert and Thomas Simonini. <a href="https://www.youtube.com/watch?v=2MBJOuVq380">Video here</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-01-logbook-December-22_files/figure-html/1faab41a-4cfd-4b54-a8c9-5a56596d6edb-1-4144cf29-793e-429a-bc68-4a163ff3200d.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>And there is a blog post written by Nathan and all. (on HuggingFace blog) <a href="https://huggingface.co/blog/rlhf">Illustrating Reinforcement Learning from Human Feedback (RLHF)</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-01-logbook-December-22_files/figure-html/8e6b1903-728c-46e0-ae9c-d940e1ca5b39-1-d88edcb8-294a-4503-92e6-e7956dd8ae83.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>I like the way to ask this question</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-12-01-logbook-December-22_files/figure-html/a7867948-110f-4e8d-92c9-e5d75f2f765c-1-8899be10-fb66-4762-97cb-34c035f57d06.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
</section>
<section id="week-51---december-22" class="level1">
<h1>Week 51 - December 22</h1>
<section id="monday-1219" class="level2">
<h2 class="anchored" data-anchor-id="monday-1219">Monday 12/19</h2>
<section id="wsl-version-1.0" class="level3">
<h3 class="anchored" data-anchor-id="wsl-version-1.0">WSL version 1.0</h3>
<p>I have just received windows update KB5020812 and with that it means <a href="https://devblogs.microsoft.com/commandline/the-windows-subsystem-for-linux-in-the-microsoft-store-is-now-generally-available-on-windows-10-and-11/">WSL version 1.0</a>! It is now using the Windows Store version.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"> <span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">--version</span></span>
<span id="cb2-2"><span class="ex" style="color: null;">Version</span> WSL : 1.0.3.0</span>
<span id="cb2-3"><span class="ex" style="color: null;">Version</span> du noyau : 5.15.79.1</span>
<span id="cb2-4"><span class="ex" style="color: null;">Version</span> WSLg : 1.0.47</span>
<span id="cb2-5"><span class="ex" style="color: null;">Version</span> MSRDC : 1.2.3575</span>
<span id="cb2-6"><span class="ex" style="color: null;">Version</span> direct3D : 1.606.4</span>
<span id="cb2-7"><span class="ex" style="color: null;">Version</span> de DXCore : 10.0.25131.1002-220531-1700.rs-onecore-base2-hyp</span>
<span id="cb2-8"><span class="ex" style="color: null;">version</span> Windows : 10.0.19044.2364</span></code></pre></div>
<p>Using the Store version of WSL allows you to <a href="https://devblogs.microsoft.com/commandline/a-preview-of-wsl-in-the-microsoft-store-is-now-available/">get updates to WSL much faster</a> compared to when it was a Windows component.</p>
<p>Creating a blog entry <a href="../posts/2022-12-19-wsl2-from-windows-store.html">WSL2 from Windows Store</a> for all experiences I will have with this version.</p>
<p>Canonical has published a whitepaper about how to setup WSL/ubuntu for datascientist: <a href="https://ubuntu.com/blog/upgrade-data-science-workflows-ubuntu-wsl" class="uri">https://ubuntu.com/blog/upgrade-data-science-workflows-ubuntu-wsl</a></p>
<p>And there is a WSL page on ubuntu wiki with fancy tips such as how to activate sound into WSL: <a href="https://wiki.ubuntu.com/WSL" class="uri">https://wiki.ubuntu.com/WSL</a></p>
</section>
</section>
<section id="wednesday-1221" class="level2">
<h2 class="anchored" data-anchor-id="wednesday-1221">Wednesday 12/21</h2>
<section id="desktop-linux-in-wsl" class="level3">
<h3 class="anchored" data-anchor-id="desktop-linux-in-wsl">desktop linux in WSL</h3>
<p>Trying with kali linux - <a href="https://www.kali.org/docs/wsl/win-kex/" class="uri">https://www.kali.org/docs/wsl/win-kex/</a> * download kali from <a href="https://learn.microsoft.com/en-us/windows/wsl/install-manual#downloading-distributions" class="uri">https://learn.microsoft.com/en-us/windows/wsl/install-manual#downloading-distributions</a> * double-click on KaliLinux_1.13.1.0.appx * create kali-linux entry in Windows Terminal * create wsl.conf with systemd: systemd=true in /etc/wsl.conf, restart kali * activate wsl-vpnkit: echo ‘wsl.exe -d wsl-vpnkit service wsl-vpnkit start’ &gt;&gt; ~/.profile, restart kali * I acnnot activate kali repos which are not within artifactory…</p>


</section>
</section>
</section>

 ]]></description>
  <category>logbook</category>
  <guid>https://castorfou.github.io/posts/2022-12-01-logbook-December-22.html</guid>
  <pubDate>Thu, 01 Dec 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/logbook.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Logbook for November 22</title>
  <link>https://castorfou.github.io/posts/2022-11-01-logbook-November-22.html</link>
  <description><![CDATA[ 




<section id="week-45---november-22" class="level1">
<h1>Week 45 - November 22</h1>
<section id="monday-117" class="level2">
<h2 class="anchored" data-anchor-id="monday-117"><strong>Monday 11/7</strong></h2>
<p>freshly back from vacations (2 weeks) without touching anything AI-computer related</p>
</section>
<section id="wednesday-119" class="level2">
<h2 class="anchored" data-anchor-id="wednesday-119"><strong>Wednesday 11/9</strong></h2>
<section id="blog-and-broken-links" class="level3">
<h3 class="anchored" data-anchor-id="blog-and-broken-links">blog and broken links</h3>
<p>Last <a href="../posts/2022-10-01-logbook-October-22.html#friday-1021">time</a> I had to fix broken links on this blog. For that I have setup <a href="https://search.google.com/u/1/search-console/index?resource_id=https://castorfou.github.io/blog/">google search console</a>.</p>
<p>But for the moment I have this report</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-11-01-logbook-November-22_files/figure-html/0384030d-0913-44fd-bbda-0174f9c47c70-1-45512fec-0746-4a43-9866-d18264ece5b6.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Have to figure out why.</p>
<p>And sitemap as well is not configured. Maybe quarto can help to generate one.</p>
</section>
<section id="mamba-v1.0" class="level3">
<h3 class="anchored" data-anchor-id="mamba-v1.0">mamba v1.0</h3>
<p>Mamba released v1.0.</p>
<p>I can now update my environments:</p>
<p><code>(base) $ conda update -c conda-forge mamba</code></p>
</section>
</section>
<section id="thursday-1110" class="level2">
<h2 class="anchored" data-anchor-id="thursday-1110"><strong>Thursday 11/10</strong></h2>
<section id="fixed-unsafe-legacy-renegotiation-disabled" class="level3">
<h3 class="anchored" data-anchor-id="fixed-unsafe-legacy-renegotiation-disabled">[fixed] unsafe legacy renegotiation disabled</h3>
<p>Unfortuantely having updated mamba broke my WSL system. My other environment (with same update) is fine.</p>
<p>I think this is linked to openssl version (v3 on WSL, v1.1.1 on linux)</p>
<p>Here are some more information about this problem</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">$</span> conda create <span class="at" style="color: #657422;">-n</span> fastai python=3.9</span>
<span id="cb1-2"><span class="ex" style="color: null;">Looking</span> for: [<span class="st" style="color: #20794D;">'python=3.9'</span>]</span>
<span id="cb1-3"><span class="ex" style="color: null;">Download</span> error <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">35</span><span class="kw" style="color: #003B4F;">)</span> <span class="ex" style="color: null;">SSL</span> connect error [https://repo.anaconda.com/pkgs/r/noarch/repodata.json]</span>
<span id="cb1-4"><span class="ex" style="color: null;">error:0A000152:SSL</span> routines::unsafe legacy renegotiation disabled</span></code></pre></div>
<p>and information about the environment</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># openssl version</span></span>
<span id="cb2-2"><span class="ex" style="color: null;">$</span> openssl version</span>
<span id="cb2-3"><span class="ex" style="color: null;">OpenSSL</span> 3.0.7 1 Nov 2022 <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">Library:</span> OpenSSL 3.0.7 1 Nov 2022<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;"># ubuntu version (using lsb-release)</span></span>
<span id="cb2-6"><span class="ex" style="color: null;">$</span> . /etc/lsb-release <span class="kw" style="color: #003B4F;">&amp;&amp;</span> <span class="bu" style="color: null;">echo</span> <span class="va" style="color: #111111;">$DISTRIB_RELEASE</span></span>
<span id="cb2-7"><span class="ex" style="color: null;">22.04</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;"># SSL declarations that could impact this behaviour</span></span>
<span id="cb2-10"><span class="ex" style="color: null;">$</span> declare <span class="at" style="color: #657422;">-p</span><span class="kw" style="color: #003B4F;">|</span><span class="fu" style="color: #4758AB;">grep</span> <span class="at" style="color: #657422;">-i</span> ssl</span>
<span id="cb2-11"><span class="bu" style="color: null;">declare</span> <span class="at" style="color: #657422;">-x</span> <span class="va" style="color: #111111;">CURL_CA_BUNDLE</span><span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"/etc/ssl/certs/ca-certificates.crt"</span></span>
<span id="cb2-12"><span class="bu" style="color: null;">declare</span> <span class="at" style="color: #657422;">-x</span> <span class="va" style="color: #111111;">REQUESTS_CA_BUNDLE</span><span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"/etc/ssl/certs/ca-certificates.crt"</span></span>
<span id="cb2-13"><span class="bu" style="color: null;">declare</span> <span class="at" style="color: #657422;">-x</span> <span class="va" style="color: #111111;">SSL_CERT_FILE</span><span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"/home/guillaume/miniconda/lib/python3.9/site-packages/certifi/cacert.pem"</span></span></code></pre></div>
<p>Initially I thought of <a href="https://bugs.launchpad.net/ubuntu/+source/openssl/+bug/1963834/comments/7">this issue</a> as fixed in <a href="../posts/2022-07-26-install ubuntu 18.04 on WSL.html#automatic-setup">WSL installation</a> (setup_wsl_user.sh / “3. update certificates”).</p>
<p>But the workaround/fix is still active</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;">$</span> cat /etc/ssl/openssl.cnf<span class="kw" style="color: #003B4F;">|</span><span class="fu" style="color: #4758AB;">grep</span> <span class="at" style="color: #657422;">-i</span> unsafe</span>
<span id="cb3-2"><span class="ex" style="color: null;">Options</span> = UnsafeLegacyRenegotiation</span></code></pre></div>
<p>[FIX]</p>
<p>Just had to export <code>OPENSSL_CONF</code></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="bu" style="color: null;">export</span> <span class="va" style="color: #111111;">OPENSSL_CONF</span><span class="op" style="color: #5E5E5E;">=</span>/etc/ssl/openssl.cnf</span></code></pre></div>
<p>Modifying <code>.bashrc</code> to integrated thie environment variable.</p>
</section>
<section id="fastai-course-lesson-4---nlp" class="level3">
<h3 class="anchored" data-anchor-id="fastai-course-lesson-4---nlp">fastai course lesson 4 - nlp</h3>
<p>Start of <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-4---natural-language-nlp">lesson 4</a></p>
</section>
</section>
</section>
<section id="week-46---november-22" class="level1">
<h1>Week 46 - November 22</h1>
<section id="monday-1114" class="level2">
<h2 class="anchored" data-anchor-id="monday-1114"><strong>Monday 11/14</strong></h2>
<section id="fastai-course-lesson-4---nlp-lesson-5---from-scratch-model" class="level3">
<h3 class="anchored" data-anchor-id="fastai-course-lesson-4---nlp-lesson-5---from-scratch-model">fastai course lesson 4 - nlp, lesson 5 - from-scratch model</h3>
<p>Ending <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-4---natural-language-nlp">lesson 4</a></p>
<p>Starting <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-5---from-scratch-model">lesson 5</a></p>
</section>
</section>
<section id="wednesday-1116" class="level2">
<h2 class="anchored" data-anchor-id="wednesday-1116"><strong>Wednesday 11/16</strong></h2>
<section id="quarto-update" class="level3">
<h3 class="anchored" data-anchor-id="quarto-update">quarto update</h3>
<p>quarto has been updated to version 1.2.269 as mentioned in <a href="https://forums.fast.ai/t/new-quarto-version-whats-new/102042">fastai forum</a></p>
<p><a href="../posts/2022-09-16-migrate blog from nbdev to quarto.html#quarto-updated-to-version-1.2.269">Here</a> the procedure to update.</p>
</section>
</section>
</section>
<section id="week-48---november-22" class="level1">
<h1>Week 48 - November 22</h1>
<section id="monday-1128" class="level2">
<h2 class="anchored" data-anchor-id="monday-1128"><strong>Monday 11/28</strong></h2>
<section id="fastai-course-lesson-5---from-scratch-model" class="level3">
<h3 class="anchored" data-anchor-id="fastai-course-lesson-5---from-scratch-model">fastai course lesson 5 - from-scratch model</h3>
<p>Ending <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-5---from-scratch-model">lesson 5</a></p>
<p>Tip: <code>pd.options.display.float_format = '{:.2f}'.format</code> will display all floats from dataframes with 2 digits</p>
<p>Tip2: <code>from fastai.imports import *</code> will import everuthing that we need (numpy, pandas, matplotlib, …)</p>
</section>
<section id="fastai-course-lesson-6---random-forests" class="level3">
<h3 class="anchored" data-anchor-id="fastai-course-lesson-6---random-forests">fastai course lesson 6 - Random forests</h3>
<p>Running through <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-6---random-forests">lesson 6</a></p>
</section>
</section>
<section id="wednesday-1130" class="level2">
<h2 class="anchored" data-anchor-id="wednesday-1130"><strong>Wednesday 11/30</strong></h2>
<section id="fastai-course-lesson-7---collaborative-filtering" class="level3">
<h3 class="anchored" data-anchor-id="fastai-course-lesson-7---collaborative-filtering">fastai course lesson 7 - Collaborative filtering</h3>
<p>Running through <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-7---collaborative-filtering">lesson 7</a></p>


</section>
</section>
</section>

 ]]></description>
  <category>logbook</category>
  <guid>https://castorfou.github.io/posts/2022-11-01-logbook-November-22.html</guid>
  <pubDate>Tue, 01 Nov 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/logbook.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Practical Deep Learning for Coders</title>
  <link>https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses.html</link>
  <description><![CDATA[ 




<section id="source-of-inspiration" class="level1">
<h1>Source of inspiration</h1>
<p>Many sources about that, pointing all to <a href="https://course.fast.ai/" class="uri">https://course.fast.ai/</a></p>
<p>This is version 5 of this course.</p>
</section>
<section id="setup-local-conda-environment-for-fastai" class="level1">
<h1>Setup local conda environment for fastai</h1>
<section id="conda-environment" class="level2">
<h2 class="anchored" data-anchor-id="conda-environment">conda environment</h2>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-11-15T07:03:32.364344Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-11-15T07:03:32.363693Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-11-15T07:03:32.520173Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-11-15T07:03:32.519165Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-11-15T07:03:32.364287Z&quot;}" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;">!</span>cat <span class="op" style="color: #5E5E5E;">~/</span>_conda_env<span class="op" style="color: #5E5E5E;">/</span>fastai.txt</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>conda create -n fastai python=3.9
conda activate fastai
conda install ipykernel
python -m ipykernel install --user --name=fastai
conda install -c fastchan fastai nbdev
pip install gradio
pip install kaggle


# update
conda activate fastai
conda update -c fastchan fastai nbdev
pip install -U gradio </code></pre>
</div>
</div>
</section>
<section id="setup-kaggle" class="level2">
<h2 class="anchored" data-anchor-id="setup-kaggle">setup kaggle</h2>
<p>And I have to setup kaggle locally:</p>
<ul>
<li>[already done] <code>pip install kaggle</code> inside my fastai env</li>
<li>create a token from my kaggle profile <a href="https://www.kaggle.com/guillaumeramelet/account">page</a></li>
<li>move this <code>kaggle.json</code> into <code>~/.kaggle/kaggle.json</code></li>
<li><code>chmod 600 /home/guillaume/.kaggle/kaggle.json</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/c8926a88-d5b7-4214-ac5d-bcaf818f8c59-1-3a059c3a-b170-4943-b7bd-c44c96211fa3.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="get-materials-from-github" class="level2">
<h2 class="anchored" data-anchor-id="get-materials-from-github">get materials from github</h2>
<p><a href="https://github.com/fastai/course22/">Github fastai/course22</a> is where you’ll find the notebooks, slides, and spreadsheets for the 2022 edition of Practical Deep Learning for Coders. we can get a local version from .</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="bu" style="color: null;">cd</span> ~/git</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">git</span> clone https://github.com/fastai/course22.git </span>
<span id="cb3-3"><span class="bu" style="color: null;">cd</span> course22</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/a63057aa-0968-4c37-95fb-369f8e4d3ae5-1-31e16cdc-010d-4056-b275-a5feb523c752.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
<section id="lesson-1---getting-started" class="level1">
<h1>Lesson 1 - Getting started</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/9206f93d-2255-404a-87b2-a87fbf7dc8bc-1-f65839a7-cf1c-4da2-a395-7818e5241abe.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<blockquote class="blockquote">
<p>In this lesson you’re going to hit the ground running – in the first five minutes you’ll see a complete end to end example of training and using a model that’s so advanced it was considered at the cutting edge of research capabilities in 2015.<br>
So, let’s get started!</p>
</blockquote>
<p><a href="https://course.fast.ai/Lessons/lesson1.html" class="uri">https://course.fast.ai/Lessons/lesson1.html</a></p>
<section id="deep-learning-introduction" class="level2">
<h2 class="anchored" data-anchor-id="deep-learning-introduction">Deep learning introduction</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/f3d59743-04e9-4fdb-b22e-e806b84aa958-1-d9a38f06-b9ab-4b1c-8dca-8187fbb0355c.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>In 2015, nearly impossible to recognize a bird with CS. And Jeremy doing that in 2 minutes ;)</p>
</section>
<section id="recent-progress" class="level2">
<h2 class="anchored" data-anchor-id="recent-progress">Recent progress</h2>
<p>After this brief demonstration, Jeremy shared what he remmbers about recent progress in AI such as:</p>
<ul>
<li><p>artworks: Dall-e, midjourney to create images from text</p></li>
<li><p>explaining jokes: Google Pathways Language Model (PaLM) to explain jokes or run mathematical proof</p></li>
</ul>
</section>
<section id="self-learning-of-features" class="level2">
<h2 class="anchored" data-anchor-id="self-learning-of-features">Self learning of features</h2>
<p>Then classical but nice explanation that NN learns features (features are not given or coded) and illustrates that with Matt Zeiler and Rob Fergus works</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/a855fd4d-0ffb-4a62-bd66-2b6feaf8bdc0-1-374144e3-fa7b-4cf5-ba83-6a1d37a72288.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="vision-can-be-used-in-many-different-ways" class="level2">
<h2 class="anchored" data-anchor-id="vision-can-be-used-in-many-different-ways">Vision can be used in many different ways</h2>
<p>And it is of course used to classify images, but all these techniques can be combined out of this field for example:</p>
<ul>
<li>recognize sound by transforming sound waves into pictures (<a href="https://forums.fast.ai/t/share-your-work-here/27676/40">Ethan Sutin</a>)</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/f67b71f4-57d0-4494-b202-114f06b7fed3-2-521368e2-f88d-4fd0-a52c-d3ddbef3cfc6.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<ul>
<li>turn timeseries into pictures (<a href="https://forums.fast.ai/t/time-series-sequential-data-study-group/29686">Ignacio Oguiza</a>)</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/f67b71f4-57d0-4494-b202-114f06b7fed3-3-99638923-aae2-43cf-aaa2-ada718cf6cae.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<ul>
<li>pictures from mouse movements (<a href="https://forums.fast.ai/t/new-blog-post-user-classification-by-mouse-movements/2595">Gleb Esman</a>)</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/f67b71f4-57d0-4494-b202-114f06b7fed3-1-3e04cfbd-19d4-49a3-922e-70da10f0bf44.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="tools---pytorch-jupyter-notebooks-kaggle" class="level2">
<h2 class="anchored" data-anchor-id="tools---pytorch-jupyter-notebooks-kaggle">Tools - pytorch, jupyter notebooks, kaggle</h2>
<p>For this course Jeremy suggests to use the kaggle cloud server.</p>
<p>If using someone else notebook, just upvote and click <code>Copy &amp; Edit</code></p>
<p><a href="https://www.kaggle.com/code/guillaumeramelet/jupyter-notebook-101/edit" class="uri">https://www.kaggle.com/code/guillaumeramelet/jupyter-notebook-101/edit</a></p>
<p>And now some hands-on starting with <code>Is it a bird?</code> <a href="https://www.kaggle.com/code/guillaumeramelet/is-it-a-bird-creating-a-model-from-your-own-data/edit">notebook</a>.</p>
<p>And aside note: Jeremy is running all the presentation through Jupyter notebook and <a href="https://rise.readthedocs.io/en/stable/">RISE</a></p>
<p>It’s a good idea to ensure you’re running the latest version of any libraries you need.</p>
<p><code>!pip install -Uqq libraries</code> upgrades to the latest version of libraries (fastai for example)</p>
</section>
<section id="going-through-this-is-it-a-bird-notebook" class="level2">
<h2 class="anchored" data-anchor-id="going-through-this-is-it-a-bird-notebook">Going through this “is it a bird?” notebook</h2>
<p>Jeremy shares best practices and steps</p>
<p>Such as viewing your data between each steps</p>
<p>Jeremy uses a lot of functional programming it is why we see things like <a href="https://www.geeksforgeeks.org/python-map-function/">map</a> used a lot.</p>
<section id="datablock" class="level3">
<h3 class="anchored" data-anchor-id="datablock">DataBlock</h3>
<p>Using Datablocks API</p>
<blockquote class="blockquote">
<p>To train a model, we’ll need DataLoaders, which is an object that contains a training set (the images used to create a model) and a validation set (the images used to check the accuracy of a model – not used during training). In fastai we can create that easily using a DataBlock, and view sample images from it:</p>
</blockquote>
<p>And Jeremy explains the logic between the 5 arguments needed to create a DataBlock:</p>
<ul>
<li><p>blocks: tupple with type of inputs and output</p></li>
<li><p>get_items: to get all data, here it points to a function to get list of image fileS</p></li>
<li><p>splitter: method to split between training set and validation set</p></li>
<li><p>get_y: to kown labels, here it is a function</p></li>
<li><p>item_tfms: which transformation to apply</p></li>
</ul>
<p>And from a DataBlock you create dataloaders (dls) provding (path for images; and bs (batch size))</p>
</section>
<section id="learners" class="level3">
<h3 class="anchored" data-anchor-id="learners">learners</h3>
<p>This is a key part.</p>
<p>Learners are taking 3 arguments: dataloaders, model, metric</p>
<p>And vision models can be from <a href="https://timm.fast.ai/">timm</a>.</p>
<p>Here we train a pre-trained model, which is called fine_tune and we do it on 3 epochs.</p>
</section>
<section id="predict" class="level3">
<h3 class="anchored" data-anchor-id="predict">predict</h3>
<p>Just providing an item to <code>lean.predict</code> will return <code>label</code>, <code>tensor value</code>, <code>probability</code></p>
<p>And it is why we have such outputs</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/245ad086-5bae-4405-aeb7-bcfd2c6eb798-1-18981c69-5b80-4d5b-a8c6-24710ba3d0fb.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
<section id="and-beyond-image-recognition" class="level2">
<h2 class="anchored" data-anchor-id="and-beyond-image-recognition">and beyond image recognition</h2>
<section id="segmentation" class="level3">
<h3 class="anchored" data-anchor-id="segmentation">Segmentation</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/1d6931ed-c358-4c9c-a75d-e22d417160ce-1-7d714c96-df7f-4758-9e69-93aa3a810658.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>And here we don’t have datablock but direclty dataloaders</p>
</section>
<section id="tabular-analysis" class="level3">
<h3 class="anchored" data-anchor-id="tabular-analysis">Tabular analysis</h3>
<p>Here again no need for DataBlock but a direct use of <code>TabularDataLoaders</code></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/3850c635-af2c-401c-9cf3-0e38301b8957-1-83f9e7f9-0495-4d89-82c5-15e21bddaa31.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>And the <code>tabular_learner</code> wich takes dls and metric.</p>
</section>
<section id="collaborative-filtering-recommandation-system" class="level3">
<h3 class="anchored" data-anchor-id="collaborative-filtering-recommandation-system">Collaborative filtering (recommandation system)</h3>
</section>
</section>
</section>
<section id="lesson-2---deployment" class="level1">
<h1>Lesson 2 - Deployment</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/6deea125-0962-4449-89e7-602fa5f876f5-1-dd1b59e1-eaa3-486f-b8ac-519f4ba1e3a8.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<blockquote class="blockquote">
<p>Today you’ll be designing your own machine learning project, creating your own dataset, training a model using your data, and finally deploying an application on the web. We’ll be using a particular deployment target called <a href="https://huggingface.co/spaces">Hugging Face Space</a> with <a href="https://gradio.app/">Gradio</a>, and will also see how to use JavaScript to implement an interface in the browser. Deploying to other services will look very similar to the approach you’ll study in this lesson.</p>
</blockquote>
<p><a href="https://course.fast.ai/Lessons/lesson2.html" class="uri">https://course.fast.ai/Lessons/lesson2.html</a></p>
<p>In this lesson we will use gradio + huggingface spaces.</p>
<p>Jeremy starts by training a vision classifier and use this 1st model to clean labels using <code>ImageClassifierCleaner</code></p>
<p>This is not specific to vision.</p>
<section id="gradio-huggingface-spaces" class="level2">
<h2 class="anchored" data-anchor-id="gradio-huggingface-spaces">Gradio + HuggingFace Spaces</h2>
<section id="create-hf-repo" class="level3">
<h3 class="anchored" data-anchor-id="create-hf-repo">create HF repo</h3>
<p>Create this <a href="https://huggingface.co/spaces/Guillaume63/minima">minima</a> space from HF.</p>
<p>Aside the explanation on HF, Jeremy shares how useful <a href="https://github.com/shiftkey/desktop/releases">Github Desktop</a> is.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/15d3e6f7-032e-49ca-8ff1-6846909cd2a5-1-f95a61af-e56e-4650-b51a-c9a017744a5d.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="create-1st-gradio-app-and-host-it" class="level3">
<h3 class="anchored" data-anchor-id="create-1st-gradio-app-and-host-it">create 1st gradio app and host it</h3>
<p>Create app.py as instructed in our freshly created HF space. Commit Push (using github desktop). Back to HF interface, something is being built. and voila</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/a75f8c4f-d400-4343-8080-e5b4dcc749a6-1-46b3093a-b3cb-45dc-82e7-30e6d9e8423a.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Nothing new because I played with <a href="../posts/2022-10-12-gradio_huggingface.html">gradio and HF</a> couple of weeks ago.</p>
<p>We know have a basic app hosted. We can just integrate a deep learning model.</p>
</section>
<section id="train-and-export-a-dl-model" class="level3">
<h3 class="anchored" data-anchor-id="train-and-export-a-dl-model">train and export a DL model</h3>
<p>And for that Jeremy has setup <a href="https://www.kaggle.com/code/guillaumeramelet/saving-a-basic-fastai-model/edit">something on kaggle</a></p>
<p>They key (and new) part here is</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">learn.export(<span class="st" style="color: #20794D;">'model.pkl'</span>)</span></code></pre></div>
<p>Finally, open the Kaggle sidebar on the right if it’s not already, and find the section marked “Output”. Open the /kaggle/working folder, and you’ll see model.pkl. Click on it, then click on the menu on the right that appears, and choose “Download”. After a few seconds, your model will be downloaded to your computer, where you can then create your app that uses the model.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/64ceac72-ba74-41b6-a8f8-492fc045312d-1-395df238-6c39-4ca7-87fa-812471437c69.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>And copy/past it to your local minima repo. Push it to HF.</p>
</section>
<section id="integrate-it-with-gradio" class="level3">
<h3 class="anchored" data-anchor-id="integrate-it-with-gradio">integrate it with gradio</h3>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/1050ea4d-4e98-4c77-b7e2-c0edbaa51443-1-8dfac218-e7a8-4b71-a053-eea355eb97c5.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>And Jeremy illustrates how to do it with a notebook and nbdev. Exactly as I did in <a href="../posts/2022-10-12-gradio_huggingface.html">gradio and huggingface - handson</a></p>
<section id="load-model" class="level4">
<h4 class="anchored" data-anchor-id="load-model">load model</h4>
<p>Main parts are to load the model with</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">learn <span class="op" style="color: #5E5E5E;">=</span> load_learner(<span class="st" style="color: #20794D;">'model.pkl'</span>)</span></code></pre></div>
</section>
<section id="run-prediction" class="level4">
<h4 class="anchored" data-anchor-id="run-prediction">run prediction</h4>
<p>to run a prediction with</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">pred, idx, probs <span class="op" style="color: #5E5E5E;">=</span> learn.predict(img)</span></code></pre></div>
</section>
<section id="call-prediction-through-a-function" class="level4">
<h4 class="anchored" data-anchor-id="call-prediction-through-a-function">call prediction through a function</h4>
<p>and to create the <code>classify_image</code> function as expected by gradio</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">categories <span class="op" style="color: #5E5E5E;">=</span> (<span class="st" style="color: #20794D;">'Dog'</span>, <span class="st" style="color: #20794D;">'Cat'</span>)</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;">def</span> classify_image(img):</span>
<span id="cb7-4">    pred, idx, probs <span class="op" style="color: #5E5E5E;">=</span> learn.predict(img)</span>
<span id="cb7-5">    <span class="cf" style="color: #003B4F;">return</span> <span class="bu" style="color: null;">dict</span>(<span class="bu" style="color: null;">zip</span>(categories, <span class="bu" style="color: null;">map</span>(<span class="bu" style="color: null;">float</span>, probs))))</span></code></pre></div>
<p>and this return part is quite complex because gradio cannot deal with Tensors.</p>
</section>
<section id="create-gradio-ui" class="level4">
<h4 class="anchored" data-anchor-id="create-gradio-ui">create gradio UI</h4>
<p>There is now the gradio interface that takes image and returns dictionary.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">image <span class="op" style="color: #5E5E5E;">=</span> gr.inputs.Image(shape<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">192</span>, <span class="dv" style="color: #AD0000;">192</span>))</span>
<span id="cb8-2">label <span class="op" style="color: #5E5E5E;">=</span> gr.outputs.Label()</span>
<span id="cb8-3">examples <span class="op" style="color: #5E5E5E;">=</span> [<span class="st" style="color: #20794D;">'dog.jpg'</span>, <span class="st" style="color: #20794D;">'cat.jpg'</span>, <span class="st" style="color: #20794D;">'dunno.jpg'</span>]</span>
<span id="cb8-4"></span>
<span id="cb8-5">intf <span class="op" style="color: #5E5E5E;">=</span> gr.Interface(fn<span class="op" style="color: #5E5E5E;">=</span>classify_image, inputs<span class="op" style="color: #5E5E5E;">=</span>image, outputs<span class="op" style="color: #5E5E5E;">=</span>label, examples<span class="op" style="color: #5E5E5E;">=</span>examples)</span>
<span id="cb8-6">intf.launch(inline<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
</section>
<section id="export-as-app.py" class="level4">
<h4 class="anchored" data-anchor-id="export-as-app.py">export as app.py</h4>
<p>And export as app.py and for that Jeremy uses a slightly different version that I used</p>
<p>Mine;</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;">import</span> nbdev<span class="op" style="color: #5E5E5E;">;</span> nbdev.export.nb_export(<span class="st" style="color: #20794D;">'app.ipynb'</span>, lib_path<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'.'</span>)</span></code></pre></div>
<p>His:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;">from</span> nbdev.export <span class="im" style="color: #00769E;">import</span> notebook2script</span>
<span id="cb10-2">notebook2script(<span class="st" style="color: #20794D;">'app.ipynb'</span>)</span></code></pre></div>
<p><a href="https://huggingface.co/spaces/jph00/testing" class="uri">https://huggingface.co/spaces/jph00/testing</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/eb0aa304-6cbc-438c-9ce9-d754ed437cf0-1-4d65166a-5f79-431a-9bf5-e7192e6815ae.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
</section>
<section id="fastsetup" class="level2">
<h2 class="anchored" data-anchor-id="fastsetup">fastsetup</h2>
<p><a href="https://github.com/fastai/fastsetup" class="uri">https://github.com/fastai/fastsetup</a></p>
<p>clone it with github desktop (will do cmd line I don’t have the option Jeremy has)</p>
<p><strong>install conda mamba</strong> (if needed)</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;">./setup-conda.sh</span></span></code></pre></div>
<p><strong>install fastai from scratch</strong></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;">conda</span> create <span class="at" style="color: #657422;">-n</span> fastai python=3.9</span>
<span id="cb12-2"><span class="ex" style="color: null;">conda</span> activate fastai</span>
<span id="cb12-3"><span class="ex" style="color: null;">conda</span> install <span class="at" style="color: #657422;">-c</span> fastchan fastai nbdev</span>
<span id="cb12-4"><span class="ex" style="color: null;">pip</span> install gradio</span></code></pre></div>
<p><strong>update to up-to-date versions</strong></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;">conda</span> activate fastai</span>
<span id="cb13-2"><span class="ex" style="color: null;">conda</span> update <span class="at" style="color: #657422;">-c</span> fastchan fastai nbdev</span>
<span id="cb13-3"><span class="ex" style="color: null;">pip</span> install <span class="at" style="color: #657422;">-U</span> gradio</span></code></pre></div>
</section>
<section id="api" class="level2">
<h2 class="anchored" data-anchor-id="api">API</h2>
<section id="gradio-streamlit" class="level3">
<h3 class="anchored" data-anchor-id="gradio-streamlit">gradio, streamlit</h3>
<p>2 options within HF to build app:</p>
<ul>
<li><a href="https://gradio.app/docs/">gradio</a>. Lot of widgets, reasonably flexible to allow prototyping.</li>
<li><a href="https://streamlit.io/">streamlit</a>. More flexible. Not so easy to start with.</li>
</ul>
</section>
<section id="gradio-hf-api" class="level3">
<h3 class="anchored" data-anchor-id="gradio-hf-api">gradio, hf API</h3>
<p>and with gradio + HF you have automatically an API available <img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/8c26adf0-8899-447a-b13b-6399d5ec244d-1-1cd15510-9c6e-461f-be59-220e4554cd76.png" class="img-fluid" alt="image.png"></p>
<p>By <a href="https://hf.space/embed/jph00/testing/api">clicking it</a> you get the documentation of this API.</p>
<p>It can then be used by any JS interface you would like to develop.</p>
<p>And HF is nice enought to provide examples (live demo) in Python, curl (command line) and javascript</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/ae5534c2-d593-455e-8a8b-c7624e9b09d8-1-0e4921b6-7f1f-4ead-a7cf-e75df376aa4f.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="example-from-js" class="level3">
<h3 class="anchored" data-anchor-id="example-from-js">example from js</h3>
<p>Jeremy uses this to develop a small JS interface in <a href="https://fastai.github.io/tinypets/1single.html" class="uri">https://fastai.github.io/tinypets/1single.html</a></p>
<p>And the code is quite minimum: <a href="https://github.com/fastai/tinypets/blob/master/1single.html" class="uri">https://github.com/fastai/tinypets/blob/master/1single.html</a></p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb14-1">---</span>
<span id="cb14-2">title: 1. Single file</span>
<span id="cb14-3">layout: page</span>
<span id="cb14-4">---</span>
<span id="cb14-5"></span>
<span id="cb14-6"><span class="kw" style="color: #003B4F;">&lt;input</span> <span class="er" style="color: #AD0000;">id</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"photo"</span> <span class="er" style="color: #AD0000;">type</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"file"</span><span class="kw" style="color: #003B4F;">&gt;</span></span>
<span id="cb14-7"><span class="kw" style="color: #003B4F;">&lt;div</span> <span class="er" style="color: #AD0000;">id</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">"results"</span><span class="kw" style="color: #003B4F;">&gt;&lt;/div&gt;</span></span>
<span id="cb14-8"><span class="kw" style="color: #003B4F;">&lt;script&gt;</span></span>
<span id="cb14-9">  <span class="kw" style="color: #003B4F;">async</span> <span class="kw" style="color: #003B4F;">function</span> <span class="fu" style="color: #4758AB;">loaded</span>(reader) {</span>
<span id="cb14-10">    <span class="kw" style="color: #003B4F;">const</span> response <span class="op" style="color: #5E5E5E;">=</span> <span class="cf" style="color: #003B4F;">await</span> <span class="fu" style="color: #4758AB;">fetch</span>(<span class="st" style="color: #20794D;">'https://hf.space/embed/jph00/pets/+/api/predict/'</span><span class="op" style="color: #5E5E5E;">,</span> {</span>
<span id="cb14-11">      <span class="dt" style="color: #AD0000;">method</span><span class="op" style="color: #5E5E5E;">:</span> <span class="st" style="color: #20794D;">"POST"</span><span class="op" style="color: #5E5E5E;">,</span> <span class="dt" style="color: #AD0000;">body</span><span class="op" style="color: #5E5E5E;">:</span> <span class="bu" style="color: null;">JSON</span><span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">stringify</span>({ <span class="st" style="color: #20794D;">"data"</span><span class="op" style="color: #5E5E5E;">:</span> [reader<span class="op" style="color: #5E5E5E;">.</span><span class="at" style="color: #657422;">result</span>] })<span class="op" style="color: #5E5E5E;">,</span></span>
<span id="cb14-12">      <span class="dt" style="color: #AD0000;">headers</span><span class="op" style="color: #5E5E5E;">:</span> { <span class="st" style="color: #20794D;">"Content-Type"</span><span class="op" style="color: #5E5E5E;">:</span> <span class="st" style="color: #20794D;">"application/json"</span> }</span>
<span id="cb14-13">    })<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb14-14">    <span class="kw" style="color: #003B4F;">const</span> json <span class="op" style="color: #5E5E5E;">=</span> <span class="cf" style="color: #003B4F;">await</span> response<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">json</span>()<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb14-15">    <span class="kw" style="color: #003B4F;">const</span> label <span class="op" style="color: #5E5E5E;">=</span> json[<span class="st" style="color: #20794D;">'data'</span>][<span class="dv" style="color: #AD0000;">0</span>][<span class="st" style="color: #20794D;">'confidences'</span>][<span class="dv" style="color: #AD0000;">0</span>][<span class="st" style="color: #20794D;">'label'</span>]<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb14-16">    results<span class="op" style="color: #5E5E5E;">.</span><span class="at" style="color: #657422;">innerHTML</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="vs" style="color: #20794D;">`&lt;br/&gt;&lt;img src="</span><span class="sc" style="color: #5E5E5E;">${</span>reader<span class="op" style="color: #5E5E5E;">.</span><span class="at" style="color: #657422;">result</span><span class="sc" style="color: #5E5E5E;">}</span><span class="vs" style="color: #20794D;">" width="300"&gt; &lt;p&gt;</span><span class="sc" style="color: #5E5E5E;">${</span>label<span class="sc" style="color: #5E5E5E;">}</span><span class="vs" style="color: #20794D;">&lt;/p&gt;`</span></span>
<span id="cb14-17">  }</span>
<span id="cb14-18">  <span class="kw" style="color: #003B4F;">function</span> <span class="fu" style="color: #4758AB;">read</span>() {</span>
<span id="cb14-19">    <span class="kw" style="color: #003B4F;">const</span> reader <span class="op" style="color: #5E5E5E;">=</span> <span class="kw" style="color: #003B4F;">new</span> <span class="bu" style="color: null;">FileReader</span>()<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb14-20">    reader<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">addEventListener</span>(<span class="st" style="color: #20794D;">'load'</span><span class="op" style="color: #5E5E5E;">,</span> () <span class="kw" style="color: #003B4F;">=&gt;</span> <span class="fu" style="color: #4758AB;">loaded</span>(reader))</span>
<span id="cb14-21">    reader<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">readAsDataURL</span>(photo<span class="op" style="color: #5E5E5E;">.</span><span class="at" style="color: #657422;">files</span>[<span class="dv" style="color: #AD0000;">0</span>])<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb14-22">  }</span>
<span id="cb14-23">  photo<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">addEventListener</span>(<span class="st" style="color: #20794D;">'input'</span><span class="op" style="color: #5E5E5E;">,</span> read)<span class="op" style="color: #5E5E5E;">;</span></span>
<span id="cb14-24"><span class="kw" style="color: #003B4F;">&lt;/script&gt;</span></span></code></pre></div>
</section>
</section>
<section id="gh-pages" class="level2">
<h2 class="anchored" data-anchor-id="gh-pages">GH pages</h2>
<p>It can run locally of course, and can be hosted with gh pages.</p>
<section id="by-generating-from-fastpages" class="level3">
<h3 class="anchored" data-anchor-id="by-generating-from-fastpages">by generating from fastpages</h3>
<p>Jeremy suggests to use <a href="https://github.com/fastai/fastpages">fastpages</a>. In the doc at the bottom there is a link to generate a website from fastapages</p>
<p><a href="https://github.com/fastai/fastpages">fastai/fastpages: An easy to use blogging platform, with enhanced support for Jupyter Notebooks.</a></p>
<blockquote class="blockquote">
<p>Setup Instructions</p>
<ol type="1">
<li>Generate a copy of this repo by clicking <a href="https://github.com/fastai/fastpages/generate">on this link</a>. Make sure to sign in to your account, or you will see a 404 error. Name your repo anything you like <strong>except</strong> {your-username}.github.io.</li>
</ol>
</blockquote>
<p>Apply a theme (to be setup in <code>_config.yml</code>)</p>
<p>Create an <code>index.md</code> file which is the landing page.</p>
</section>
<section id="or-by-forking-an-existing-one-e.g.-tinypets" class="level3">
<h3 class="anchored" data-anchor-id="or-by-forking-an-existing-one-e.g.-tinypets">or by forking an existing one (e.g.&nbsp;<a href="https://github.com/fastai/tinypets">tinypets</a>)</h3>
<p>and in that case we have to turn on gh pages</p>
<p>Settings &gt; Pages &gt; Enable gh pages (select branch and save)</p>
<p>We can now switch to different theme.</p>
<p>From <code>remote_theme: daviddarnes/alembic@main</code> to <code>remote_theme: pages-themes/hacker</code></p>
<p>it provides a complete different look</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/35e779a3-c3ad-43e9-bb90-4371217829ad-1-60c95ea4-29b6-42e6-9827-1cdafd04e705.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Looks like we can browse through these jekyll themes at <a href="http://jekyllthemes.org/" class="uri">http://jekyllthemes.org/</a></p>
</section>
</section>
</section>
<section id="lesson-3---neural-net-foundations" class="level1">
<h1>Lesson 3 - Neural net foundations</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/1cb73eaa-2f68-4fba-b4c0-d24170f98917-1-d4e08165-739e-4034-843b-1efe335281ad.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<blockquote class="blockquote">
<p>Today we’ll be learning about the mathematical foundations of deep learning: Stochastic gradient descent (SGD), and the flexibility of linear functions layered with non-linear activation functions. We’ll be focussing particularly on a popular combination called the Rectified linear function (ReLU).</p>
</blockquote>
<p><a href="https://course.fast.ai/Lessons/lesson3.html" class="uri">https://course.fast.ai/Lessons/lesson3.html</a></p>
<p>Jeremy mentions <a href="https://www.youtube.com/watch?v=gGxe2mN3kAg">Lesson Zero</a> which is more about the way he teaches to learn these things. and recommened process to be run by students.</p>
<p>On this lesson, Jeremy uses <a href="https://www.paperspace.com/gradient">paperspace gradient</a>. Which offers full machine with jupyter environments.</p>
<section id="timm" class="level2">
<h2 class="anchored" data-anchor-id="timm">timm</h2>
<p>To use it we have to install it: <code>pip install timm</code></p>
<p>Jeremy illsutrates how to switch model architecture. And for that uses timm fastai. He has created a notebook on kaggle to rank vision models <a href="https://www.kaggle.com/code/jhoward/which-image-models-are-best/" class="uri">https://www.kaggle.com/code/jhoward/which-image-models-are-best/</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/bb0e4629-a800-4743-a8cc-92a8763ec532-1-56e655b6-1940-4766-bf49-ff76de4ad4b7.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Convnext models seem to be a good fit.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;">import</span> timm</span>
<span id="cb15-2"></span>
<span id="cb15-3">timm.list_models(<span class="st" style="color: #20794D;">'convnext*'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>['convnext_atto',
 'convnext_atto_ols',
 'convnext_base',
 'convnext_base_384_in22ft1k',
 'convnext_base_in22ft1k',
 'convnext_base_in22k',
 'convnext_femto',
 'convnext_femto_ols',
 'convnext_large',
 'convnext_large_384_in22ft1k',
 'convnext_large_in22ft1k',
 'convnext_large_in22k',
 'convnext_nano',
 'convnext_nano_ols',
 'convnext_pico',
 'convnext_pico_ols',
 'convnext_small',
 'convnext_small_384_in22ft1k',
 'convnext_small_in22ft1k',
 'convnext_small_in22k',
 'convnext_tiny',
 'convnext_tiny_384_in22ft1k',
 'convnext_tiny_hnf',
 'convnext_tiny_in22ft1k',
 'convnext_tiny_in22k',
 'convnext_xlarge_384_in22ft1k',
 'convnext_xlarge_in22ft1k',
 'convnext_xlarge_in22k']</code></pre>
</div>
</div>
<p>And to use one it is just a matter of calling</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">learn <span class="op" style="color: #5E5E5E;">=</span> vision_learner(dls, <span class="st" style="color: #20794D;">'convnext_tiny_in22k'</span>, metrics<span class="op" style="color: #5E5E5E;">=</span>error_rate).to_fp16()</span></code></pre></div>
</section>
<section id="using-in-an-app" class="level2">
<h2 class="anchored" data-anchor-id="using-in-an-app">Using in an app</h2>
<p>When dealing with categories, fastai keep category names in the dataloader under vocab</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">categories <span class="op" style="color: #5E5E5E;">=</span> learn.dls.vocab</span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="kw" style="color: #003B4F;">def</span> classify_image(img):</span>
<span id="cb18-4">    pred, idx, probs <span class="op" style="color: #5E5E5E;">=</span> learn.predict(img)</span>
<span id="cb18-5">    <span class="cf" style="color: #003B4F;">return</span> <span class="bu" style="color: null;">dict</span>(<span class="bu" style="color: null;">zip</span>(categories, <span class="bu" style="color: null;">map</span>(<span class="bu" style="color: null;">float</span>, probs)))</span></code></pre></div>
</section>
<section id="applying-this-on-my-own-app-cheeses" class="level2">
<h2 class="anchored" data-anchor-id="applying-this-on-my-own-app-cheeses">Applying this on my own app: <a href="https://huggingface.co/spaces/Guillaume63/cheeses">cheeses</a></h2>
<p>All notebooks from these courses are at <a href="https://github.com/fastai/course22" class="uri">https://github.com/fastai/course22</a></p>
<p>And my app is at <a href="https://huggingface.co/spaces/Guillaume63/cheeses" class="uri">https://huggingface.co/spaces/Guillaume63/cheeses</a></p>
<p>I had to configure this repo to use git-lfs to store large binary files:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;">git</span> lfs install</span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;">#if needed reset the last commit</span></span>
<span id="cb19-3"><span class="fu" style="color: #4758AB;">git</span> reset <span class="at" style="color: #657422;">--soft</span> HEAD^</span>
<span id="cb19-4"><span class="fu" style="color: #4758AB;">git</span> status</span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;">#if offeneded files ar already staged, restore them</span></span>
<span id="cb19-6"><span class="fu" style="color: #4758AB;">git</span> restore <span class="at" style="color: #657422;">--staged</span> <span class="pp" style="color: #AD0000;">*</span>.jpg</span>
<span id="cb19-7"><span class="fu" style="color: #4758AB;">git</span> status</span>
<span id="cb19-8"><span class="co" style="color: #5E5E5E;">#add them back</span></span>
<span id="cb19-9"><span class="fu" style="color: #4758AB;">git</span> add <span class="at" style="color: #657422;">-A</span></span>
<span id="cb19-10"><span class="co" style="color: #5E5E5E;">#check they are managed by git lfs</span></span>
<span id="cb19-11"><span class="fu" style="color: #4758AB;">git</span> lfs ls-files</span>
<span id="cb19-12"><span class="fu" style="color: #4758AB;">git</span> commit <span class="at" style="color: #657422;">-am</span><span class="st" style="color: #20794D;">'recommit after lfs install'</span></span>
<span id="cb19-13"><span class="fu" style="color: #4758AB;">git</span> push</span></code></pre></div>
<p>and I pushed it to <a href="https://forums.fast.ai/t/share-your-work-here/96015/515?u=guillaumeramelet">fastai forum</a></p>
</section>
<section id="inside-nn" class="level2">
<h2 class="anchored" data-anchor-id="inside-nn">Inside NN</h2>
<p><a href="https://www.kaggle.com/code/jhoward/how-does-a-neural-net-really-work" class="uri">https://www.kaggle.com/code/jhoward/how-does-a-neural-net-really-work</a></p>
<p>Illustration of a powerfull python function <code>partial</code></p>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;">from</span> functools <span class="im" style="color: #00769E;">import</span> partial</span>
<span id="cb20-2"><span class="kw" style="color: #003B4F;">def</span> mk_quad(a, b, c): <span class="cf" style="color: #003B4F;">return</span> partial(quad, a, b, c)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">f <span class="op" style="color: #5E5E5E;">=</span> mk_quad(<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb21-2">f(<span class="fl" style="color: #AD0000;">1.5</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>10.75</code></pre>
</div>
</div>
<p>I think I will reuse that!</p>
<p>Jeremy explains NN in 3 steps:</p>
<ul>
<li>loss caculation (with nice simulator to manually approach better paameters)</li>
<li>grad calculation, adjustment (with learning rate) and loop</li>
<li>we can use combination of relu to be as close as possible to any function (whatever the dimension)</li>
</ul>
</section>
<section id="using-microsoft-excel" class="level2">
<h2 class="anchored" data-anchor-id="using-microsoft-excel">Using Microsoft excel</h2>
<p>This is fun. Not as surpising as the one from 3-4 years ago but Jeremy is very good at explaining it. Excel spreadsheet is <a href="https://github.com/fastai/course22/blob/master/xl/titanic.xlsx">here</a>.</p>
</section>
<section id="next-lesson" class="level2">
<h2 class="anchored" data-anchor-id="next-lesson">Next lesson</h2>
<p>Will practice nlp using huggingface api.</p>
</section>
</section>
<section id="lesson-4---natural-language-nlp" class="level1">
<h1>Lesson 4 - Natural Language (NLP)</h1>
<p><a href="https://course.fast.ai/Lessons/lesson4.html" class="uri">https://course.fast.ai/Lessons/lesson4.html</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/fd076952-c3a5-4a41-be6e-81395db0ee12-1-67afa14d-fd26-45ed-8d09-82a97458787d.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<blockquote class="blockquote">
<p>It’s time for us to learn how to analyse natural language documents, using Natural Language Processing (NLP). We’ll be focusing on the <a href="https://huggingface.co/">Hugging Face</a> ecosystem, especially the <a href="https://huggingface.co/docs/transformers/index">Transformers</a> library, and the vast collection of pretrained <a href="https://huggingface.co/models">NLP models</a>. Our project today will be to classify that similarity of phrases used to describe <a href="https://www.kaggle.com/competitions/us-patent-phrase-to-phrase-matching">US patents</a>. A similar approach can be applied to a wide variety of practical issues, in fields as wide-reaching as marketing, logistics, and medicine.</p>
</blockquote>
<p>Jeremy is using this notebook <a href="https://www.kaggle.com/code/jhoward/getting-started-with-nlp-for-absolute-beginners">Getting started with NLP for absolute beginners</a> on kaggle. As usually upvote &amp; copy/<a href="https://www.kaggle.com/code/guillaumeramelet/getting-started-with-nlp-for-absolute-beginners/edit">edit</a> to start using it.</p>
<p>Didn’t know that pandas author Wes McKinney has released (free) a <a href="https://wesmckinney.com/book/">book Python for Data Analysis</a> explaining how to use it brillantly.</p>
<p>At the time of the training (May/2022), HuggingFace had 44k models. Today (November/2022) it has 86k models. Huge!</p>
<p>We use dataset library from HF.</p>
<p>Jeremy explains then validation set. And points to some article from Rachel Thomas explaining <a href="https://www.fast.ai/posts/2017-11-13-validation-sets.html">how to create a good one</a>.</p>
<p>And another one from Rachel Thomas explaining how tricky can be proxy metrics: <a href="https://www.fast.ai/posts/2019-09-24-metrics.html">The problem with metrics is a big problem for AI</a></p>
</section>
<section id="lesson-5---from-scratch-model" class="level1">
<h1>Lesson 5 - From-scratch model</h1>
<p><a href="https://course.fast.ai/Lessons/lesson5.html" class="uri">https://course.fast.ai/Lessons/lesson5.html</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/85af52d2-9674-45b5-b71c-2576078497f9-1-dbe1075e-9548-4e54-9924-ca99f1e6649f.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<blockquote class="blockquote">
<p>Today we look at how to create a neural network from scratch using Python and PyTorch, and how to implement a training loop for optimising the weights of a model. We build up from a single layer regression model up to a neural net with one hidden layer, and then to a deep learning model. Along the way we’ll also look at how we can use a special function called sigmoid to make binary classification models easier to train, and we’ll also learn about metrics.</p>
</blockquote>
<p>We start from a kaggle notebook from <a href="https://www.kaggle.com/jhoward/code">jeremy’s profile</a> which is <a href="https://www.kaggle.com/code/jhoward/linear-model-and-neural-net-from-scratch">Linear model and neural net from scratch</a>. As usually upvote &amp; copy/<a href="https://www.kaggle.com/code/guillaumeramelet/linear-model-and-neural-net-from-scratch/edit">edit</a> to start using it. Or get the notebooks from <a href="https://github.com/fastai/course22/blob/master/05-linear-model-and-neural-net-from-scratch.ipynb">github</a>.</p>
<p>Today I will use the local version.</p>
<section id="linear-model-then-deep-learning-model" class="level2">
<h2 class="anchored" data-anchor-id="linear-model-then-deep-learning-model">linear model then deep learning model</h2>
<p>Just restarting from titanic dataset and exactly as what was made in excel, now we do it with PyTorch.</p>
<p>It is good to see how much fiddling it requires. This is good to develop intuititions but defintely it is not what you want to implement when exploring a question.</p>
</section>
<section id="why-you-should-use-a-framework" class="level2">
<h2 class="anchored" data-anchor-id="why-you-should-use-a-framework">Why you should use a framework</h2>
<p>It is in kaggle <a href="https://www.kaggle.com/code/jhoward/why-you-should-use-a-framework">Why you should use a framework</a>. As usually upvote &amp; copy/edit to start using it. Or get the notebooks from <a href="https://github.com/fastai/course22/blob/master/06-why-you-should-use-a-framework.ipynb">github</a>.</p>
<p>Jeremy used TabularPandas, lr_find, ensemble</p>
<div class="cell" data-tags="[]" data-execution_count="14">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">learn.lr_find(suggest_funcs<span class="op" style="color: #5E5E5E;">=</span>(slide, valley))</span></code></pre></div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>SuggestedLRs(slide=0.0831763744354248, valley=0.007585775572806597)</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/cell-6-output-3.png" class="img-fluid"></p>
</div>
</div>
<p>I could try this for autoencoders: <a href="https://alanbertl.com/autoencoder-with-fast-ai/" class="uri">https://alanbertl.com/autoencoder-with-fast-ai/</a> (this is v1 but should be easy to adapt to v2)</p>
<p>And then ends with <a href="https://www.kaggle.com/code/jhoward/how-random-forests-really-work">How random forests really work</a>. Or get the notebooks from <a href="https://github.com/fastai/course22/blob/master/07-how-random-forests-really-work.ipynb">github</a>.</p>
<p>Tip: <code>pd.options.display.float_format = '{:.2f}'.format</code> will display all floats from dataframes with 2 digits</p>
<p>Tip2: <code>from fastai.imports import *</code> will import everything that we need (numpy, pandas, matplotlib, …)</p>
<p>Jeremy illustrates binary split and mentions <a href="https://link.springer.com/article/10.1023/A:1022631118932">OneR</a> classifier (paper from 1993)</p>
</section>
</section>
<section id="lesson-6---random-forests" class="level1">
<h1>Lesson 6 - Random forests</h1>
<p><a href="https://course.fast.ai/Lessons/lesson6.html" class="uri">https://course.fast.ai/Lessons/lesson6.html</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/1be83661-8a7f-45af-acfe-3045c8c77946-1-2af8bec3-ac03-4b00-97a6-d70bec83e724.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<blockquote class="blockquote">
<p>Random forests started a revolution in machine learning 20 years ago. For the first time, there was a fast and reliable algorithm which made almost no assumptions about the form of the data, and required almost no preprocessing. In today’s lesson, you’ll learn how a random forest really works, and how to build one from scratch. And, just as importantly, you’ll learn how to interpret random forests to better understand your data.</p>
</blockquote>
<p>We continue on the previous notebook <a href="https://www.kaggle.com/code/jhoward/how-random-forests-really-work">How random forests really work</a>.</p>
<p>And repeating binary split on 2 dataset already split makes it a TwoR approach… And we can continue recursively. This is what a DecisionTree is.</p>
<div class="cell" data-tags="[]" data-execution_count="35">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">draw_tree(m, trn_xs, size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="35">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/cell-7-output-1.svg" class="img-fluid"></p>
</div>
</div>
<p>Then Jeremy explains different ensemble approached: - by subsetting rows (and columns) and averaging predictions - this is bagging and random forest is one implementation - by focusing on residuals on each steps and summing predictions - this is boosting and gradient boosting decision trees is one implementation. Jeremys’explanation at <a href="https://explained.ai/gradient-boosting/">explained ai</a></p>
<p>And he mentions feature importance, dependency plot, waterfall plots, oob errors, and other stuff from book <a href="https://github.com/fastai/fastbook/blob/master/09_tabular.ipynb">chapter 9</a>.</p>
<p>And then Jeremy illustrates with a kaggle competition about rice quality. This is in <a href="https://github.com/fastai/course22/blob/master/08-first-steps-road-to-the-top-part-1.ipynb">08-first-steps-road-to-the-top-part-1.ipynb in github</a></p>
<p>As always I have to accept conditions before being able to download this dataset</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/56a8e326-0b24-4b49-bc0e-f4a44ab10a65-1-ddf78814-ef73-4ad3-8cc5-3e4896f575cb.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>There are 6 videos (walkthrough) from Jeremy, I think 6 hours long to enter into each detail of his process to be a kaggle grandmaster.</p>
<blockquote class="blockquote">
<ul>
<li><a href="https://www.youtube.com/watch?v=-Scs4gbwWXg">Walkthru 8</a></li>
<li><a href="https://www.youtube.com/watch?v=EK5wJRzffas">Walkthru 9</a></li>
<li><a href="https://youtu.be/zhBRynq9Yvo">Walkthru 10</a></li>
<li><a href="https://youtu.be/j-zMF2VirA8">Walkthru 11</a></li>
<li><a href="https://youtu.be/GuCkpjXHdTc">Walkthru 12</a></li>
<li><a href="https://youtu.be/INrkhUGCXHg">Walkthru 13</a></li>
</ul>
</blockquote>
<p>Not so bad top80% within a couple of minutes (of running). It would have taken me days to write such a notebook.</p>
<p>And step 2 happens in <a href="https://github.com/fastai/course22/blob/master/09-small-models-road-to-the-top-part-2.ipynb">09-small-models-road-to-the-top-part-2.ipynb in github</a></p>
<p>Where Jeremy changes from resnet26d to convnext_small using <a href="https://www.kaggle.com/code/jhoward/the-best-vision-models-for-fine-tuning">The best vision models for fine-tuning</a>.(in collaboration with Thomas Capelle ;) )</p>
<p>And introduces TTA (tranformation at inference time and take avergae of it)</p>
</section>
<section id="lesson-7---collaborative-filtering" class="level1">
<h1>Lesson 7 - Collaborative filtering</h1>
<p><a href="https://course.fast.ai/Lessons/lesson7.html" class="uri">https://course.fast.ai/Lessons/lesson7.html</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/29f01da0-60c7-40bc-b4a2-ff2655209a33-1-e97eb590-fbad-4ca4-b1f1-affa840869fc.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<blockquote class="blockquote">
<p>You interact nearly every day with <em>recommendation systems</em>—algorithms which guess what products and services you might like, based on your past behavior. These systems largely rely on <em>collaborative-filtering</em>, an approach based on linear algebra that fills in the missing values in a matrix. Today we’ll see two ways to do this: one based on a classic linear algebra formulation, and one based on deep learning.</p>
</blockquote>
<p>Next is in <a href="https://github.com/fastai/course22/blob/master/10-scaling-up-road-to-the-top-part-3.ipynb">10-scaling-up-road-to-the-top-part-3.ipynb in github</a></p>
<p>This is about dealing with GPU memory management and training with less memory (and adjusting batch size in a smart way (combined with gradient accumulation))</p>
<p>In fastai, it is done with <img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/a91a8f12-70e8-4ddb-b234-3211441b9c2c-1-f2e4471d-9ab4-4510-a13f-0461d8de2ee8.png" class="img-fluid" alt="image.png"></p>
<p>you adjust bs and use callback with GradientAccumulation</p>
<p>Last part is about collaborative filtering and it is quite identical to subsequent book chapter. Notebook is at kaggle <a href="https://www.kaggle.com/code/jhoward/collaborative-filtering-deep-dive/notebook" class="uri">https://www.kaggle.com/code/jhoward/collaborative-filtering-deep-dive/notebook</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/878f5f41-fb02-4d76-8e07-e3a3a0884608-1-9f314285-1119-4290-87ef-5c0d1ab5581d.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Jeremy explains latent factor, the way to implement them in pytorch. Then bias factor added to these matrices to adjust bias. ProductBias to calculate similarity. And the full learning process. Then introduces weight decay as a way to regularize (avoid overfitting).</p>
<p>There is a chapter on interpreting Embeddings and Biases but Jeremy has not gone through it.</p>
</section>
<section id="lesson-8---convolutions-cnns" class="level1">
<h1>Lesson 8 - Convolutions (CNNs)</h1>
<p><a href="https://course.fast.ai/Lessons/lesson8.html" class="uri">https://course.fast.ai/Lessons/lesson8.html</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/cee3aee1-77c8-4a3a-93d5-ddcc0958d0b0-1-937c5629-1a79-4873-966f-05458b912588.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<blockquote class="blockquote">
<p>Today we finish off our study of collaborative filtering by looking closely at <em>embeddings</em>—a critical building block of many deep learning algorithms. Then we’ll dive into <em>convolutional neural networks</em> (CNNs) and see how they really work. We’ve used plenty of CNNs through this course, but we haven’t peeked inside them to see what’s really going on in there. As well as learning about their most fundamental building block, the <em>convolution</em>, we’ll also look at pooling, dropout, and more.</p>
</blockquote>
<p>First part is continuing collaborative filtering. Notebook is at kaggle <a href="https://www.kaggle.com/code/jhoward/collaborative-filtering-deep-dive/notebook" class="uri">https://www.kaggle.com/code/jhoward/collaborative-filtering-deep-dive/notebook</a></p>
<p>It starts with embeddings and bias and interpretation. Jeremy shows how to visualize bias (which movies are most liked (even by people usually not liking this kind of movies) and disliked) or from a user perspective (which users tend to like all movies or dislike alkl movies)</p>
<p>And to visualize embeddings (thanks to a PCA) to understand which kind of movies we have. (and could be which kind of users we have)</p>
<p>I am re-running from start. As adviced it is good to restart <a href="https://www.kaggle.com/code/jhoward/linear-model-and-neural-net-from-scratch/comments#2062682" class="uri">https://www.kaggle.com/code/jhoward/linear-model-and-neural-net-from-scratch/comments#2062682</a></p>
<p>I like the progressivity here: linear model, then matrix product, then neural network with 2 hidden layers. All of this using basic PyTorch pieces (tensors, multiplication, gradient calculation, …) but nothing about Module</p>
<p>And then the second step is from fastai book available at <a href="https://github.com/fastai/fastbook/blob/master/08_collab.ipynb" class="uri">https://github.com/fastai/fastbook/blob/master/08_collab.ipynb</a> to explore Module.</p>
<p>At the end of <a href="https://www.youtube.com/watch?v=htiNBPxcXgo&amp;t=1086s">Lesson 8 - Practical Deep Learning for Coders 2022</a>, Jeremy suggests to read Meta Learning from Radek (<a href="https://radekosmulski.com/" class="uri">https://radekosmulski.com/</a>)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses_files/figure-html/09dbdd7a-6fba-4792-b34b-9f982ae241d6-1-50be3667-b78e-4934-a5db-954d2137942b.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>


</section>

 ]]></description>
  <category>fastai</category>
  <guid>https://castorfou.github.io/posts/2022-10-17-fastai-2022-courses.html</guid>
  <pubDate>Mon, 17 Oct 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/icons/fastai.png" medium="image" type="image/png" height="59" width="144"/>
</item>
<item>
  <title>Run dataiku with docker</title>
  <link>https://castorfou.github.io/posts/2022-10-13-dockerdss.html</link>
  <description><![CDATA[ 




<section id="source-of-inspiration" class="level2">
<h2 class="anchored" data-anchor-id="source-of-inspiration">Source of inspiration</h2>
<p>Would like to play with <a href="https://www.dataiku.com/">dataiku</a> to do some dataprep</p>
<p>But I don’t want to install it.</p>
</section>
<section id="install-docker-run-docker-service" class="level2">
<h2 class="anchored" data-anchor-id="install-docker-run-docker-service">Install docker, run docker service</h2>
<section id="for-wsl" class="level3">
<h3 class="anchored" data-anchor-id="for-wsl">for WSL</h3>
<p>Everything explained at <a href="../blog/posts/2022-04-25-install ubuntu 22.04 on WSL.html#docker">Docker for wsl</a></p>
</section>
<section id="for-linux" class="level3">
<h3 class="anchored" data-anchor-id="for-linux">for linux</h3>
<p>I guess this is the same logic</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;">sudo</span> apt list <span class="at" style="color: #657422;">--installed</span> <span class="kw" style="color: #003B4F;">|</span><span class="fu" style="color: #4758AB;">grep</span> docker</span>
<span id="cb1-2"><span class="ex" style="color: null;">docker-ce-cli/focal,now</span> 5:20.10.18~3-0~ubuntu-focal amd64 [installed]</span>
<span id="cb1-3"><span class="ex" style="color: null;">docker-ce-rootless-extras/focal,now</span> 5:20.10.18~3-0~ubuntu-focal amd64 [installed,automatic]</span>
<span id="cb1-4"><span class="ex" style="color: null;">docker-ce/focal,now</span> 5:20.10.18~3-0~ubuntu-focal amd64 [installed]</span>
<span id="cb1-5"><span class="ex" style="color: null;">docker-compose-plugin/focal,now</span> 2.10.2~ubuntu-focal amd64 [installed]</span>
<span id="cb1-6"><span class="ex" style="color: null;">docker-scan-plugin/focal,now</span> 0.17.0~ubuntu-focal amd64 [installed,automatic]</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;">sudo</span> apt install <span class="at" style="color: #657422;">-y</span> docker-ce docker-ce-cli containerd.io </span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">sudo</span> usermod <span class="at" style="color: #657422;">-aG</span> docker <span class="va" style="color: #111111;">$USER</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">sudo</span> service docker start</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;">sudo</span> curl <span class="at" style="color: #657422;">-L</span> <span class="st" style="color: #20794D;">"https://github.com/docker/compose/releases/download/v2.11.2/docker-compose-linux-x86_64"</span> <span class="at" style="color: #657422;">-o</span> /usr/local/bin/docker-compose</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;">sudo</span> chmod +x /usr/local/bin/docker-compose</span></code></pre></div>
</section>
<section id="docker-service-status" class="level3">
<h3 class="anchored" data-anchor-id="docker-service-status">docker service status</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;">sudo</span> service docker status</span>
<span id="cb3-2"><span class="ex" style="color: null;">●</span> docker.service <span class="at" style="color: #657422;">-</span> Docker Application Container Engine</span>
<span id="cb3-3">     <span class="ex" style="color: null;">Loaded:</span> loaded <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">/lib/systemd/system/docker.service</span><span class="kw" style="color: #003B4F;">;</span> <span class="ex" style="color: null;">enabled</span><span class="kw" style="color: #003B4F;">;</span> <span class="ex" style="color: null;">vendor</span> preset: enabled<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb3-4">     <span class="ex" style="color: null;">Active:</span> active <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">running</span><span class="kw" style="color: #003B4F;">)</span> <span class="ex" style="color: null;">since</span> Tue 2022-10-11 10:26:23 CEST<span class="kw" style="color: #003B4F;">;</span> <span class="ex" style="color: null;">2</span> days ago</span>
<span id="cb3-5"><span class="ex" style="color: null;">TriggeredBy:</span> ● docker.socket</span>
<span id="cb3-6">       <span class="ex" style="color: null;">Docs:</span> https://docs.docker.com</span>
<span id="cb3-7">   <span class="ex" style="color: null;">Main</span> PID: 2231 <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">dockerd</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb3-8">      <span class="ex" style="color: null;">Tasks:</span> 18</span>
<span id="cb3-9">     <span class="ex" style="color: null;">Memory:</span> 120.5M</span>
<span id="cb3-10">        <span class="ex" style="color: null;">CPU:</span> 1min 4.466s</span>
<span id="cb3-11">     <span class="ex" style="color: null;">CGroup:</span> /system.slice/docker.service</span>
<span id="cb3-12">             <span class="ex" style="color: null;">└─2231</span> /usr/bin/dockerd <span class="at" style="color: #657422;">-H</span> fd:// <span class="at" style="color: #657422;">--containerd</span><span class="op" style="color: #5E5E5E;">=</span>/run/containerd/containerd.sock</span></code></pre></div>
</section>
</section>
<section id="useful-commands" class="level2">
<h2 class="anchored" data-anchor-id="useful-commands">Useful commands</h2>
<section id="list-images" class="level3">
<h3 class="anchored" data-anchor-id="list-images">list images</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;">docker</span> ps</span>
<span id="cb4-2"><span class="ex" style="color: null;">docker</span> images</span></code></pre></div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="op" style="color: #5E5E5E;">!</span>docker images</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>REPOSITORY               TAG             IMAGE ID       CREATED         SIZE
evalai_worker            latest          dba6096090fb   2 months ago    2.58GB
evalai_django            latest          ae485874e456   2 months ago    1.52GB
evalai_nodejs_v2         latest          2c31d7c19b50   2 months ago    2GB
evalai_nodejs            latest          870941d3fc88   2 months ago    1.98GB
softwaremill/elasticmq   latest          b722353e4eaa   2 months ago    648MB
node                     14.20.0         326f034bd14b   3 months ago    914MB
prom/statsd-exporter     latest          a52efa669891   3 months ago    17MB
&lt;none&gt;                   &lt;none&gt;          5b8afa69cc58   11 months ago   422MB
&lt;none&gt;                   &lt;none&gt;          66a693993cdc   11 months ago   422MB
&lt;none&gt;                   &lt;none&gt;          5db5659b96f2   11 months ago   422MB
&lt;none&gt;                   &lt;none&gt;          7bd2798881a8   11 months ago   422MB
&lt;none&gt;                   &lt;none&gt;          a1753859aadb   11 months ago   422MB
&lt;none&gt;                   &lt;none&gt;          adea02a35542   11 months ago   559MB
debian                   bullseye-slim   dd984c2cf05c   12 months ago   80.4MB
python                   3.7.5           fbf9f709ca9f   2 years ago     917MB
node                     12.2.0          502d06d3bfdf   3 years ago     906MB
postgres                 10.4            978b82dc00dc   4 years ago     236MB</code></pre>
</div>
</div>
<p>Here we can see I played with <a href="../blog/posts/2022-07-29-evalai and gitlab.html">evalai</a>…</p>
</section>
<section id="run-image" class="level3">
<h3 class="anchored" data-anchor-id="run-image">run image</h3>
<p>To enter into an image in interactive mode</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;">docker</span> run <span class="at" style="color: #657422;">-ti</span> <span class="op" style="color: #5E5E5E;">&lt;</span>REPO<span class="op" style="color: #5E5E5E;">&gt;</span>:<span class="op" style="color: #5E5E5E;">&lt;</span>TAG<span class="op" style="color: #5E5E5E;">&gt;</span></span></code></pre></div>
<p>as an example</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;">docker</span> run <span class="at" style="color: #657422;">-it</span> python:3.7.5 </span>
<span id="cb8-2"><span class="ex" style="color: null;">Python</span> 3.7.5 <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">default,</span> Nov 23 2019, 05:59:34<span class="kw" style="color: #003B4F;">)</span> </span>
<span id="cb8-3"><span class="ex" style="color: null;">[GCC</span> 8.3.0] on linux</span>
<span id="cb8-4"><span class="ex" style="color: null;">Type</span> <span class="st" style="color: #20794D;">"help"</span>, <span class="st" style="color: #20794D;">"copyright"</span>, <span class="st" style="color: #20794D;">"credits"</span> or <span class="st" style="color: #20794D;">"license"</span> for more information.</span>
<span id="cb8-5"><span class="op" style="color: #5E5E5E;">&gt;&gt;&gt;</span> </span></code></pre></div>
</section>
<section id="stop-image" class="level3">
<h3 class="anchored" data-anchor-id="stop-image">stop image</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;">docker</span> stop <span class="op" style="color: #5E5E5E;">&lt;</span>Container_ID<span class="op" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb9-2"><span class="ex" style="color: null;">docker</span> rm <span class="op" style="color: #5E5E5E;">&lt;</span>Container_ID<span class="op" style="color: #5E5E5E;">&gt;</span></span></code></pre></div>
</section>
</section>
<section id="dataiku-dss" class="level2">
<h2 class="anchored" data-anchor-id="dataiku-dss">Dataiku DSS</h2>
<p><a href="https://hub.docker.com/r/dataiku/dss/" class="uri">https://hub.docker.com/r/dataiku/dss/</a></p>
<p>Start a DSS instance on the default internal data directory, exposing DSS on the default port (10000)</p>
<p><code>docker run -p 10000:10000 -d dataiku/dss</code></p>
<p>Alternatively, you can start a DSS instance on a mounted data directory or Docker volume, exposing DSS on the default port (10000).</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;">mkdir</span> ~/dss</span>
<span id="cb10-2"><span class="ex" style="color: null;">docker</span> run <span class="at" style="color: #657422;">-p</span> 10000:10000 <span class="at" style="color: #657422;">-v</span> /home/explore/dss:/home/dataiku/dss <span class="at" style="color: #657422;">-d</span> dataiku/dss</span></code></pre></div>
<p>Open DSS in your browser (Chrome or Firefox)</p>
<p>For Linux, open <a href="http://localhost:10000" class="uri">http://localhost:10000</a></p>
<p>Default login/password (admin/admin)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-13-dockerdss_files/figure-html/93bbf859-a253-454a-b069-5e9a51bcb17d-1-f39b4d16-fcaf-4a3c-bdd1-cc251309b89b.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>And I can start it just from lunching <code>start.sh</code> from Appliations/dataiku</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-13-dockerdss_files/figure-html/036fdbf0-3fcd-46d1-aeb8-5a564b56c3d2-1-38eccb86-b5fb-42e1-ac6e-0d1fe7650a59.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Mounting with volume configuration will keep all modifications.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-13-dockerdss_files/figure-html/9b27ef6f-82d2-4d7d-99aa-a6ba9cfb7fca-1-9f9d7a28-4bef-4a26-ac18-90f64a703472.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="portainer" class="level2">
<h2 class="anchored" data-anchor-id="portainer">Portainer</h2>
<p>I will use the community edition which is open source.</p>
<p>But portainer.io is providing nice documentation on:</p>
<ul>
<li>docker and container: <a href="https://install.portainer.io/containers-101" class="uri">https://install.portainer.io/containers-101</a></li>
<li>portainer: <a href="https://install.portainer.io/portainer-101" class="uri">https://install.portainer.io/portainer-101</a></li>
</ul>
<p>For CE installation, everything is detailed at <a href="https://docs.portainer.io/v/ce-2.9/start/install/server/docker/wsl" class="uri">https://docs.portainer.io/v/ce-2.9/start/install/server/docker/wsl</a></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;">docker</span> volume create portainer_data</span>
<span id="cb11-2"><span class="ex" style="color: null;">docker</span> run <span class="at" style="color: #657422;">-d</span> <span class="at" style="color: #657422;">-p</span> 8000:8000 <span class="at" style="color: #657422;">-p</span> 9443:9443 <span class="at" style="color: #657422;">--name</span> portainer <span class="at" style="color: #657422;">--restart</span><span class="op" style="color: #5E5E5E;">=</span>always <span class="at" style="color: #657422;">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class="at" style="color: #657422;">-v</span> portainer_data:/data portainer/portainer-ce:2.9.3</span></code></pre></div>
<p><a href="https://localhost:9443" class="uri">https://localhost:9443</a></p>
<p>create admin user (admin/adminadmin)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-13-dockerdss_files/figure-html/a77d907d-10ca-4975-a1bc-b6d5021f663d-1-e7fe540d-da6d-4ef4-912b-dd44279ca26a.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>


</section>

 ]]></description>
  <category>docker</category>
  <category>dataiku</category>
  <category>wsl</category>
  <category>linux</category>
  <guid>https://castorfou.github.io/posts/2022-10-13-dockerdss.html</guid>
  <pubDate>Thu, 13 Oct 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/icons/docker.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>gradio and huggingface - handson</title>
  <link>https://castorfou.github.io/posts/2022-10-12-gradio_huggingface.html</link>
  <description><![CDATA[ 




<section id="source-of-inspiration" class="level2">
<h2 class="anchored" data-anchor-id="source-of-inspiration">Source of inspiration</h2>
<p><a href="../posts/2022-10-01-logbook-October-22.html#friday-107">HF news of the week early october</a></p>
<p>There is a new version of <a href="https://github.com/gradio-app/gradio/releases/tag/v3.4">Gradio</a> announced. Have to try it.</p>
<p>These apps can then be hosted on huggingface. Let’s try that.</p>
</section>
<section id="how-to-do-it" class="level2">
<h2 class="anchored" data-anchor-id="how-to-do-it">How to do it</h2>
<p>I have a small need that gradio could fit perfectly.</p>
<p>I am in the board of a badminton club. We have list of members given by one source. And updated rankings given by another source (these rankings can evolve during the year, actually after each game)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-12-gradio_huggingface_files/figure-html/99cf6b2f-c8e3-4237-9466-807f3f33ecde-1-b0965153-4129-47de-a501-ecba6ebf3a48.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>This project is in <a href="https://github.com/castorfou/rbc">gh rbc</a></p>
<section id="get-rankings" class="level3">
<h3 class="anchored" data-anchor-id="get-rankings">Get rankings</h3>
<p>Rankings are taken from badmania website at <a href="https://badmania.fr/club-joueurs-2254-riom-badminton-club.html" class="uri">https://badmania.fr/club-joueurs-2254-riom-badminton-club.html</a></p>
<p>It is as easy as:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-2">pd.read_html(<span class="st" style="color: #20794D;">'https://badmania.fr/club-joueurs-2254-riom-badminton-club.html'</span>)[<span class="dv" style="color: #AD0000;">0</span>].head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">

<div>

<table class="dataframe table table-sm table-striped">
  <thead>
    <tr>
      <th></th>
      <th>Nom ▼▲</th>
      <th>Nom ▼▲.1</th>
      <th>Prénom ▼▲</th>
      <th>Prénom ▼▲.1</th>
      <th>Sexe</th>
      <th>Licence</th>
      <th>Catégorie ▼▲</th>
      <th>Classement ▼▲</th>
      <th>Class.</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>ANDRAL</td>
      <td>Anthony</td>
      <td>ANDRAL</td>
      <td>Anthony</td>
      <td>NaN</td>
      <td>7354056</td>
      <td>Senior</td>
      <td>P11/P10/P10</td>
      <td>P11/P10/P10</td>
    </tr>
    <tr>
      <th>1</th>
      <td>AVARGUEZ</td>
      <td>Eric</td>
      <td>AVARGUEZ</td>
      <td>Eric</td>
      <td>NaN</td>
      <td>6630518</td>
      <td>Veteran 6</td>
      <td>P11/D9/P10</td>
      <td>P11/D9/P10</td>
    </tr>
    <tr>
      <th>2</th>
      <td>BARBIER DARDARE</td>
      <td>Léna</td>
      <td>BARBIER...</td>
      <td>Léna</td>
      <td>NaN</td>
      <td>7454028</td>
      <td>Minibad</td>
      <td>-/-/-</td>
      <td>-/-/-</td>
    </tr>
    <tr>
      <th>3</th>
      <td>BARDEL</td>
      <td>Damien</td>
      <td>BARDEL</td>
      <td>Damien</td>
      <td>NaN</td>
      <td>7250210</td>
      <td>Veteran 1</td>
      <td>P12/P12/P11</td>
      <td>P12/P12/P11</td>
    </tr>
    <tr>
      <th>4</th>
      <td>BARRAUD</td>
      <td>Ines</td>
      <td>BARRAUD</td>
      <td>Ines</td>
      <td>NaN</td>
      <td>7354562</td>
      <td>NaN</td>
      <td>-/-/-</td>
      <td>-/-/-</td>
    </tr>
  </tbody>
</table>
</div>
</div>
</div>
<p>Because list of members provide ‘Licence’ column (License), it is easy to link the 2 files together</p>
<p>Everything is under <a href="https://github.com/castorfou/rbc/blob/main/update_classement.ipynb">update_classement.ipynb</a>: * <code>get_classement</code> to extract ranking from a given license * <code>add_classements</code> to add all the ranking to the members list (using <code>apply(lambda x: get_classement(x))</code></p>
</section>
<section id="export-rankings-function-with-nbdev" class="level3">
<h3 class="anchored" data-anchor-id="export-rankings-function-with-nbdev">Export rankings function with nbdev</h3>
<p>Here I am using the basic export function from <a href="../blog/posts/2022-09-12-nbdev2.html">nbdev2</a>.</p>
<section id="declare-filename-to-export-to" class="level4">
<h4 class="anchored" data-anchor-id="declare-filename-to-export-to">declare filename to export to</h4>
<p>Just by inserting</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;">#|default_exp rbc</span></span></code></pre></div>
<p>at the top of notebook. It means it will export <code>rbc.py</code></p>
</section>
<section id="declare-what-to-export" class="level4">
<h4 class="anchored" data-anchor-id="declare-what-to-export">declare what to export</h4>
<p>This is the standard way using quarto directives.</p>
<p>Just by inserting</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;">#| export</span></span></code></pre></div>
<p>in front of each cell of interest</p>
</section>
<section id="declare-where-to-export-and-export" class="level4">
<h4 class="anchored" data-anchor-id="declare-where-to-export-and-export">declare where to export, and export</h4>
<p>At the bottom of notebook.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;">#| hide</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="im" style="color: #00769E;">import</span> nbdev<span class="op" style="color: #5E5E5E;">;</span> nbdev.export.nb_export(<span class="st" style="color: #20794D;">'update_classement.ipynb'</span>, lib_path<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'.'</span>)</span></code></pre></div>
<p>It creates <code>rbc.py</code> in the same directory as ‘update_classement.ipynb’. (lib_path)</p>
</section>
</section>
<section id="create-gradio-interface" class="level3">
<h3 class="anchored" data-anchor-id="create-gradio-interface">Create gradio interface</h3>
<section id="here-is-a-small-example." class="level4">
<h4 class="anchored" data-anchor-id="here-is-a-small-example.">Here is a small example.</h4>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">import</span> gradio <span class="im" style="color: #00769E;">as</span> gr</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;">def</span> greet(name):</span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;">return</span> <span class="st" style="color: #20794D;">"Hello "</span> <span class="op" style="color: #5E5E5E;">+</span> name <span class="op" style="color: #5E5E5E;">+</span> <span class="st" style="color: #20794D;">"!"</span></span>
<span id="cb5-5"></span>
<span id="cb5-6">demo <span class="op" style="color: #5E5E5E;">=</span> gr.Interface(</span>
<span id="cb5-7">    fn<span class="op" style="color: #5E5E5E;">=</span>greet,</span>
<span id="cb5-8">    inputs<span class="op" style="color: #5E5E5E;">=</span>gr.Textbox(lines<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, placeholder<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"Name Here..."</span>),</span>
<span id="cb5-9">    outputs<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"text"</span>,</span>
<span id="cb5-10">)</span>
<span id="cb5-11">demo.launch()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running on local URL:  http://127.0.0.1:7860

To create a public link, set `share=True` in `launch()`.</code></pre>
</div>
<div class="cell-output cell-output-display">
<div><iframe src="http://127.0.0.1:7860/" width="900" height="500" allow="autoplay; camera; microphone; clipboard-read; clipboard-write;" frameborder="0" allowfullscreen=""></iframe></div>
</div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>(&lt;gradio.routes.App at 0x7ff6b688a310&gt;, 'http://127.0.0.1:7860/', None)</code></pre>
</div>
</div>
</section>
<section id="our-interface" class="level4">
<h4 class="anchored" data-anchor-id="our-interface">Our interface</h4>
<p>Everything is in <a href="https://github.com/castorfou/rbc/blob/main/main.ipynb">main.ipynb</a></p>
<p>Quite simple, the gradio interface as Blocks,</p>
<p>with 2 file zones, one button and one action (click to send file content to a function <code>analyse_fichier</code>)</p>
<p><code>analyse_fichier</code> which takes the file, use <code>add_classements</code> from <code>rbc</code>, save the new content in a temporary file, and return it as the 2nd file block output.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-12-gradio_huggingface_files/figure-html/3dcbfc10-2cc5-4bad-90b3-0593724cfb08-1-43d95d1f-d77e-433f-8a11-084374ab9c51.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="export-to-main.py" class="level4">
<h4 class="anchored" data-anchor-id="export-to-main.py">export to <code>main.py</code></h4>
<p>This is the same logic as earlier.</p>
<ul>
<li>declare export name with <code>#|default_exp app</code></li>
<li>declare cells to export with <code>#| export</code></li>
<li>export from main.ipynb to main.py with <code>import nbdev; nbdev.export.nb_export('main.ipynb', lib_path='.')</code></li>
</ul>
<p>Just by launching <code>Restart kernel and run all cells</code>, everything is run smoothly and <code>main.py</code> is created</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-12-gradio_huggingface_files/figure-html/e5c063dc-6171-4c20-be4b-dd1046d139ef-1-a627caeb-2dac-4fb0-93ce-ccce300e5116.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
<section id="publish-to-huggingface" class="level3">
<h3 class="anchored" data-anchor-id="publish-to-huggingface">Publish to huggingface</h3>
<p>We publish to Spaces in <a href="https://huggingface.co">huggingface</a></p>
<p>You need an huggingface account. And created a space which is almost like creating a git repo.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-12-gradio_huggingface_files/figure-html/901fec32-f6dd-4b16-8632-de137570293a-1-ca5b351f-bec1-4515-80ef-c12abd84ae76.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Then you can drag and drop main.py or git push to this location. This last option is what I used.</p>
<p>I have just created a new space called rbc at <code>https://huggingface.co/spaces/Guillaume63/rbc</code></p>
<p>I can now git clone this repo to a folder aside my current project (I used <code>rbc_hugginface</code>)</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="bu" style="color: null;">cd</span> ~/git</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">git</span> clone https://huggingface.co/spaces/Guillaume63/rbc rbc_huggingface</span></code></pre></div>
<p>I can now copy these files to it, git add, commit, push, and voila - requirements.txt - app.py - main.py</p>
<p>I have stored that in the <code>pubglish_to_hf.sh</code> bash script</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;"># git clone https://huggingface.co/spaces/Guillaume63/rbc rbc_huggingface</span></span>
<span id="cb9-3"><span class="va" style="color: #111111;">NOW</span><span class="op" style="color: #5E5E5E;">=</span><span class="kw" style="color: #003B4F;">`</span><span class="fu" style="color: #4758AB;">date</span> <span class="st" style="color: #20794D;">'+%F_%H:%M'</span><span class="kw" style="color: #003B4F;">`;</span></span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;">cp</span> <span class="pp" style="color: #AD0000;">*</span>.py ../rbc_huggingface</span>
<span id="cb9-5"><span class="fu" style="color: #4758AB;">cp</span> requirements.txt ../rbc_huggingface</span>
<span id="cb9-6"><span class="bu" style="color: null;">cd</span> ../rbc_huggingface</span>
<span id="cb9-7"><span class="fu" style="color: #4758AB;">git</span> add .</span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;">git</span> commit <span class="at" style="color: #657422;">-am</span><span class="st" style="color: #20794D;">"</span><span class="va" style="color: #111111;">$NOW</span><span class="st" style="color: #20794D;">"</span></span>
<span id="cb9-9"><span class="fu" style="color: #4758AB;">git</span> push</span>
<span id="cb9-10"><span class="bu" style="color: null;">cd</span> ../rbc</span></code></pre></div>
<p>Demo recorded with peek (<code>peek -b ffmpeg</code>)</p>
<p><img src="https://castorfou.github.io/images/gradio_huggingface.gif" class="img-fluid"></p>
<section id="todo-using-gh-actions" class="level4">
<h4 class="anchored" data-anchor-id="todo-using-gh-actions">TODO using gh actions</h4>
<p>A nicer approach would be to use github actions to publish to huggingface.</p>
<p>At each commit on github, actions would run to commit our 3 files to huggingface.</p>
<p><a href="https://huggingface.co/docs/hub/spaces-github-actions" class="uri">https://huggingface.co/docs/hub/spaces-github-actions</a></p>


</section>
</section>
</section>

 ]]></description>
  <category>gradio</category>
  <category>huggingface</category>
  <category>nbdev</category>
  <guid>https://castorfou.github.io/posts/2022-10-12-gradio_huggingface.html</guid>
  <pubDate>Wed, 12 Oct 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/icons/huggingface.png" medium="image" type="image/png" height="53" width="144"/>
</item>
<item>
  <title>pip cheatsheet</title>
  <link>https://castorfou.github.io/posts/2022-10-06-pip_cheatsheet.html</link>
  <description><![CDATA[ 




<section id="cheatsheet" class="level1">
<h1>Cheatsheet</h1>
<p>I like this version</p>
<p><a href="http://dcjtech.info/wp-content/uploads/2015/10/Pip-Cheatsheet.pdf" class="uri">http://dcjtech.info/wp-content/uploads/2015/10/Pip-Cheatsheet.pdf</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-06-pip_cheatsheet_files/figure-html/b7d1b715-12e0-4487-bec1-895f71ca385c-1-e3170f1f-5427-4556-9c61-66bdd784da1e.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
<section id="thinks-to-know" class="level1">
<h1>thinks to know</h1>
<section id="install-last-versions" class="level2">
<h2 class="anchored" data-anchor-id="install-last-versions">install last versions</h2>
<p>Didn’t know that to specify to install at least a given version, one need quotes</p>
<pre class="text"><code>pip install 'PKG&gt;=1.0'</code></pre>
</section>
<section id="freeze" class="level2">
<h2 class="anchored" data-anchor-id="freeze">freeze</h2>
<p>to generate <code>requirements.txt</code></p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-10-06T07:14:41.980492Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-10-06T07:14:41.979925Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-10-06T07:14:42.319878Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-10-06T07:14:42.318870Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-10-06T07:14:41.980449Z&quot;}" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="op" style="color: #5E5E5E;">!</span>pip freeze <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="op" style="color: #5E5E5E;">~/</span>temp<span class="op" style="color: #5E5E5E;">/</span>requirements.txt</span></code></pre></div>
</div>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-10-06T07:15:08.879099Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-10-06T07:15:08.878735Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-10-06T07:15:08.992290Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-10-06T07:15:08.991363Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-10-06T07:15:08.879070Z&quot;}" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="op" style="color: #5E5E5E;">!</span>cat <span class="op" style="color: #5E5E5E;">~/</span>temp<span class="op" style="color: #5E5E5E;">/</span>requirements.txt</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>certifi @ file:///opt/conda/conda-bld/certifi_1663615672595/work/certifi
numpy==1.23.3
pandas==1.4.0
python-dateutil==2.8.2
pytz==2022.4
six==1.16.0</code></pre>
</div>
</div>
</section>
<section id="pip-upgrader" class="level2">
<h2 class="anchored" data-anchor-id="pip-upgrader">pip-upgrader</h2>
<p>Playing with pip-upgrader</p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-10-06T07:19:50.865047Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-10-06T07:19:50.864351Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-10-06T07:19:53.210489Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-10-06T07:19:53.209436Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-10-06T07:19:50.865023Z&quot;}" data-tags="[]" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">import</span> sys</span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;">!</span>{sys.executable} <span class="op" style="color: #5E5E5E;">-</span>m pip install pip<span class="op" style="color: #5E5E5E;">-</span>upgrader</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Looking in indexes: https://pypi.org/simple/, https://artifactory.michelin.com/api/pypi/pypi/simple
Collecting pip-upgrader
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/b2/42/36c09ad93ddbf10406e301f3d4d7d063cf27fa5cf7a881ccea78bb22cdc7/pip_upgrader-1.4.15-py2.py3-none-any.whl (16 kB)
Collecting packaging
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/05/8e/8de486cbd03baba4deef4142bd643a3e7bbe954a784dc1bb17142572d127/packaging-21.3-py3-none-any.whl (40 kB)
Collecting requests
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/ca/91/6d9b8ccacd0412c08820f72cebaa4f0c0441b5cda699c90f618b6f8a1b42/requests-2.28.1-py3-none-any.whl (62 kB)
Collecting colorclass
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/30/b6/daf3e2976932da4ed3579cff7a30a53d22ea9323ee4f0d8e43be60454897/colorclass-2.2.2-py2.py3-none-any.whl (18 kB)
Collecting docopt
  Using cached docopt-0.6.2-py2.py3-none-any.whl
Collecting terminaltables
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/c4/fb/ea621e0a19733e01fe4005d46087d383693c0f4a8f824b47d8d4122c87e0/terminaltables-3.1.10-py2.py3-none-any.whl (15 kB)
Collecting pyparsing!=3.0.5,&gt;=2.0.2
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/6c/10/a7d0fa5baea8fe7b50f448ab742f26f52b80bfca85ac2be9d35cdd9a3246/pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting urllib3&lt;1.27,&gt;=1.21.1
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/6f/de/5be2e3eed8426f871b170663333a0f627fc2924cc386cd41be065e7ea870/urllib3-1.26.12-py2.py3-none-any.whl (140 kB)
Requirement already satisfied: certifi&gt;=2017.4.17 in /home/guillaume/miniconda/envs/poubelle/lib/python3.9/site-packages (from requests-&gt;pip-upgrader) (2022.9.14)
Collecting charset-normalizer&lt;3,&gt;=2
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/db/51/a507c856293ab05cdc1db77ff4bc1268ddd39f29e7dc4919aa497f0adbec/charset_normalizer-2.1.1-py3-none-any.whl (39 kB)
Collecting idna&lt;4,&gt;=2.5
  Using cached https://artifactory.michelin.com/api/pypi/pypi/packages/packages/fc/34/3030de6f1370931b9dbb4dad48f6ab1015ab1d32447850b9fc94e60097be/idna-3.4-py3-none-any.whl (61 kB)
Installing collected packages: docopt, urllib3, terminaltables, pyparsing, idna, colorclass, charset-normalizer, requests, packaging, pip-upgrader
Successfully installed charset-normalizer-2.1.1 colorclass-2.2.2 docopt-0.6.2 idna-3.4 packaging-21.3 pip-upgrader-1.4.15 pyparsing-3.0.9 requests-2.28.1 terminaltables-3.1.10 urllib3-1.26.12</code></pre>
</div>
</div>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-10-06T07:20:49.231819Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-10-06T07:20:49.231539Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-10-06T07:20:59.399512Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-10-06T07:20:59.398684Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-10-06T07:20:49.231796Z&quot;}" data-tags="[]" data-execution_count="12">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="op" style="color: #5E5E5E;">!</span>{sys.prefix}<span class="op" style="color: #5E5E5E;">/</span><span class="bu" style="color: null;">bin</span><span class="op" style="color: #5E5E5E;">/</span>pip<span class="op" style="color: #5E5E5E;">-</span>upgrade <span class="op" style="color: #5E5E5E;">--</span>skip<span class="op" style="color: #5E5E5E;">-</span>package<span class="op" style="color: #5E5E5E;">-</span>installation <span class="op" style="color: #5E5E5E;">~/</span>temp<span class="op" style="color: #5E5E5E;">/</span>requirements.txt</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Found valid requirements file(s): 
/home/guillaume/temp/requirements.txt
Setting API url to https://pypi.org/simple/{package}/ as found in /home/guillaume/.config/pip/pip.conf. Use --default-index-url to use pypi default index
2/6: numpy ... up to date: 1.23.3
3/6: pandas ... upgrade available: 1.4.0 ==&gt; 1.5.0 (uploaded on -)
4/6: python-dateutil ... up to date: 2.8.2
5/6: pytz ... up to date: 2022.4
6/6: six ... up to date: 1.16.0

Available upgrades:
+-----+----------+-----------------+----------------+--------------+
| No. | Package  | Current version | Latest version | Release date |
+-----+----------+-----------------+----------------+--------------+
|  1  |  pandas  | 1.4.0           | 1.5.0          | -            |
+-----+----------+-----------------+----------------+--------------+

Please choose which packages should be upgraded. Choices: "all", "q" (quit), "x" (exit) or "1 2 3"
Choice: ^C

Upgrade interrupted.</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>pip</category>
  <guid>https://castorfou.github.io/posts/2022-10-06-pip_cheatsheet.html</guid>
  <pubDate>Thu, 06 Oct 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/icons/python.png" medium="image" type="image/png" height="43" width="144"/>
</item>
<item>
  <title>Logbook for October 22</title>
  <link>https://castorfou.github.io/posts/2022-10-01-logbook-October-22.html</link>
  <description><![CDATA[ 




<section id="week-40---october-22" class="level1">
<h1>Week 40 - October 22</h1>
<section id="friday-107" class="level2">
<h2 class="anchored" data-anchor-id="friday-107"><strong>Friday 10/7</strong></h2>
<p>Just playing with huggingface projects.</p>
<p>Weekly someone from HF publishes <strong>news of the week</strong></p>
<p>Last 2 weeks, Thomas Simonini has sent updates on Transformers, Stable Diffusion. <a href="https://discord.com/channels/879548962464493619/897387888663232554/1023968170094104596">09/27</a> <a href="https://discord.com/channels/879548962464493619/897387888663232554/1026502106036842617">10/03</a></p>
<p>And just playing with these apps, I realize it has been developped using <a href="https://github.com/gradio-app/gradio">gradio</a>. Should be nice to give a test. Could be usefull for this project: drag&amp;drop badminton players spreadsheet, and return one with uptodate ranks</p>
</section>
</section>
<section id="week-41---october-22" class="level1">
<h1>Week 41 - October 22</h1>
<section id="wednesday-1012" class="level2">
<h2 class="anchored" data-anchor-id="wednesday-1012"><strong>Wednesday 10/12</strong></h2>
<p>I am interested since a while to skip execution of some cells in notebooks.</p>
<pre class="text"><code>I usually have to rerun (most parts of) a notebook when reopen it, 
in order to get access to previously defined variables and go on working.

However, sometimes I'd like to skip some of the cells, which have no 
influence to subsequent cells (e.g., they might comprise a branch of 
analysis that is finished) and could take very long time to run. 
These cells can be scattered throughout the notebook, so that something 
like "Run All Below" won't help much.</code></pre>
<p>I had used freeze extension a while ago when using exclusively jupyter notebook, and now I use jupyter lab and I have not found any alternative</p>
<p>There is a solution proposed here <a href="https://stackoverflow.com/questions/19309287/how-to-intermittently-skip-certain-cells-when-running-ipython-notebook" class="uri">https://stackoverflow.com/questions/19309287/how-to-intermittently-skip-certain-cells-when-running-ipython-notebook</a> that could be of interest:</p>
<p>using <code>%%cache</code></p>
</section>
<section id="saturday-1015" class="level2">
<h2 class="anchored" data-anchor-id="saturday-1015"><strong>Saturday 10/15</strong></h2>
<p>just to create a bash script from Files app in ubuntu (explorer): <a href="https://itsfoss.com/add-new-document-option/" class="uri">https://itsfoss.com/add-new-document-option/</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-01-logbook-October-22_files/figure-html/23f135dd-a2fb-477a-8f4c-5b3aa72dee11-1-5ef18c14-6cf6-45ee-80f0-43545441a9a7.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>I would like to create HD pictures to support my pitch of my newbiz idea.</p>
<p>And <a href="https://korben.info/">korben</a> has just tested <a href="https://promptomania.com/">promptomania</a> to generate best prompt to generate diffusion pictures.</p>
<p>I have installed a verssion on my linux using <a href="https://sd-webui.github.io/stable-diffusion-webui/docs/2.linux-installation.html" class="uri">https://sd-webui.github.io/stable-diffusion-webui/docs/2.linux-installation.html</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-10-01-logbook-October-22_files/figure-html/470f75d8-424b-4fbd-961d-05d9a5c0de49-1-6c045fca-0f54-4e7e-bac5-d4dc8ebe5c3c.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
<section id="week-42---october-22" class="level1">
<h1>Week 42 - October 22</h1>
<section id="monday-1017" class="level2">
<h2 class="anchored" data-anchor-id="monday-1017"><strong>Monday 10/17</strong></h2>
<p>Just taken back blogging with nbdev to <a href="../posts/2022-09-16-migrate blog from nbdev to quarto.html#publication">handle publication</a> using gh actions to gh pages.</p>
<p>And finally took time to start fastai courses with <a href="../posts/2022-10-17-fastai-2022-courses.html">chapter 1 - Getting started</a>.</p>
</section>
<section id="tuesday-1018" class="level2">
<h2 class="anchored" data-anchor-id="tuesday-1018"><strong>Tuesday 10/18</strong></h2>
<p>Searching why dark mode doesn’t toggle as expected, I land on this thread <a href="https://github.com/quarto-dev/quarto-cli/issues/822" class="uri">https://github.com/quarto-dev/quarto-cli/issues/822</a></p>
<p>Quite interesting site where slides are published using quarto. <a href="https://pythoncoderunicorn.github.io/Quarto-RLadies/#/title-slide" class="uri">https://pythoncoderunicorn.github.io/Quarto-RLadies/#/title-slide</a></p>
<p>An alternative to RISE?</p>
</section>
<section id="thursday-1020" class="level2">
<h2 class="anchored" data-anchor-id="thursday-1020"><strong>Thursday 10/20</strong></h2>
<section id="portainer" class="level3">
<h3 class="anchored" data-anchor-id="portainer">portainer</h3>
<p>Just testing portainer for docker as explained in <a href="../posts/2022-10-13-dockerdss.html#portainer">Run dataiku with docker</a></p>
</section>
<section id="detect-broken-links-in-blog" class="level3">
<h3 class="anchored" data-anchor-id="detect-broken-links-in-blog">detect broken links in blog</h3>
<p>And have to figure out a way to detect broken links:</p>
<ul>
<li>using <a href="https://search.google.com/u/0/search-console?resource_id=https%3A%2F%2Fcastorfou.github.io%2Fblog%2F">google search console</a></li>
</ul>
<p>As it takes a day to be processed I will test again tomorrow</p>
</section>
<section id="favicon-on-blog" class="level3">
<h3 class="anchored" data-anchor-id="favicon-on-blog">favicon on blog</h3>
<p>Creation of a favicon for this <a href="../posts/2022-09-16-migrate blog from nbdev to quarto.html#setup-favicon.ico">blog</a>.</p>
</section>
<section id="google-analytics-on-blog" class="level3">
<h3 class="anchored" data-anchor-id="google-analytics-on-blog">google analytics on blog</h3>
<p>Setup <a href="https://support.google.com/analytics/answer/9539598?hl=en">google analytics</a>, get G- Id, and update <code>_quarto.yml</code> accordingly as explained in <a href="https://quarto.org/docs/websites/website-tools.html#google-analytics">quarto doc</a>.</p>
<p>Analytics available <a href="https://analytics.google.com/analytics/web/?utm_source=marketingplatform.google.com&amp;utm_medium=et&amp;utm_campaign=marketingplatform.google.com%2Fabout%2Fanalytics%2F#/p338279857/reports/intelligenthome">here</a></p>
</section>
</section>
<section id="friday-1021" class="level2">
<h2 class="anchored" data-anchor-id="friday-1021"><strong>Friday 10/21</strong></h2>
<p>Fastai courses 2022 <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-2---deployment">chapter 2 - Deployment</a> completed</p>
<p>Fastai courses 2022 <a href="../posts/2022-10-17-fastai-2022-courses.html#lesson-3---neural-net-foundations">chapter 3 - Neural net foundations</a></p>


</section>
</section>

 ]]></description>
  <category>logbook</category>
  <guid>https://castorfou.github.io/posts/2022-10-01-logbook-October-22.html</guid>
  <pubDate>Sat, 01 Oct 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/images/logbook.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>inline images from jupyter with quarto</title>
  <link>https://castorfou.github.io/posts/2022-09-23-inline-images-with-quarto.html</link>
  <description><![CDATA[ 




<section id="using-jupyter-lab" class="level1">
<h1>using jupyter lab</h1>
<p>Here is the 1st image inline</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-09-23-inline-images-with-quarto_files/figure-html/07fd1e51-1326-4afd-a6c1-09036e94ce24-1-71a4fc95-5776-4180-ae3a-b815bbf1b7a0.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>and here the second one</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-09-23-inline-images-with-quarto_files/figure-html/5c471b5c-3e4b-4bb3-8f97-4e0b4adb5679-1-74e0d8d8-ad0f-4eca-b52b-167ac518d0e9.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>if we see a the same image, we have a problem</p>
</section>
<section id="using-jupyter-notebook" class="level1">
<h1>using jupyter notebook</h1>
<p>1st image</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-09-23-inline-images-with-quarto_files/figure-html/29c0b91d-1-image.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>2nd image</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-09-23-inline-images-with-quarto_files/figure-html/fabdc4eb-1-image.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>if we see a the same image, we have a problem</p>
</section>
<section id="analysis" class="level1">
<h1>analysis</h1>
<p>when using jupyter lab, cell code for images are like that</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1"><span class="al" style="color: #AD0000;">![image.png](attachment:71a4fc95-5776-4180-ae3a-b815bbf1b7a0.png)</span></span></code></pre></div>
<p>and with jupyter notebook or vscode, it is like that</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb2-1"><span class="al" style="color: #AD0000;">![image.png](attachment:image.png)</span></span></code></pre></div>
<p>There is an enhancement request at vscode to support it</p>
<p><a href="https://github.com/microsoft/vscode/issues/151408" class="uri">https://github.com/microsoft/vscode/issues/151408</a></p>
<p>and quarto when creating _site, is saving these images in this structure:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="op" style="color: #5E5E5E;">!</span>tree ..<span class="op" style="color: #5E5E5E;">/</span>_site<span class="op" style="color: #5E5E5E;">/</span>posts<span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2022</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">0</span><span class="er" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">23</span><span class="op" style="color: #5E5E5E;">-</span>inline<span class="op" style="color: #5E5E5E;">-</span>images<span class="op" style="color: #5E5E5E;">-</span><span class="cf" style="color: #003B4F;">with</span><span class="op" style="color: #5E5E5E;">-</span>quarto_files<span class="op" style="color: #5E5E5E;">/</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>../_site/posts/2022-09-23-inline-images-with-quarto_files/
└── figure-html
    ├── 71a4fc95-5776-4180-ae3a-b815bbf1b7a0.png
    ├── 74e0d8d8-ad0f-4eca-b52b-167ac518d0e9.png
    └── image.png

1 directory, 3 files</code></pre>
</div>
</div>
<p>only one image.png for 2 files, that cannot work :(</p>
</section>
<section id="workaround" class="level1">
<h1>workaround</h1>
<p>use jupyter lab to blog</p>


</section>

 ]]></description>
  <category>nbdev</category>
  <category>quarto</category>
  <guid>https://castorfou.github.io/posts/2022-09-23-inline-images-with-quarto.html</guid>
  <pubDate>Fri, 23 Sep 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/posts/images/icons/jupyter.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Blog - migrate to quarto</title>
  <link>https://castorfou.github.io/posts/2022-09-16-migrate blog from nbdev to quarto.html</link>
  <description><![CDATA[ 




<section id="inspiration" class="level1">
<h1>Inspiration</h1>
<p>Hamel just announced that <a href="https://forums.fast.ai/t/fastpages-deprecating-fastpages-in-favor-of-quarto/99095">fastpages will be discontinued</a> as nbdev+quarto is now a valid option to provide a blogging platform. He has written a <a href="https://nbdev.fast.ai/tutorials/blogging.html">migration guide</a> for that.</p>
<p>This is my walkthrough.</p>
</section>
<section id="walkthrough" class="level1">
<h1>Walkthrough</h1>
<p>Main software needed are: * <a href="https://quarto.org/docs/websites/website-blog.html">quarto</a> * python env with jupyter (can blog from <code>base</code>)</p>
<section id="install-quarto" class="level2">
<h2 class="anchored" data-anchor-id="install-quarto">install quarto</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">$</span> sudo apt install quarto</span>
<span id="cb1-2"><span class="ex" style="color: null;">[sudo]</span> password for guillaume:</span>
<span id="cb1-3"><span class="ex" style="color: null;">Reading</span> package lists... Done</span>
<span id="cb1-4"><span class="ex" style="color: null;">Building</span> dependency tree... Done</span>
<span id="cb1-5"><span class="ex" style="color: null;">Reading</span> state information... Done</span>
<span id="cb1-6"><span class="ex" style="color: null;">quarto</span> is already the newest version <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">1.1.189</span><span class="kw" style="color: #003B4F;">)</span><span class="bu" style="color: null;">.</span></span>
<span id="cb1-7"><span class="ex" style="color: null;">0</span> upgraded, 0 newly installed, 0 to remove and 0 not upgraded.</span></code></pre></div>
<p>will have to see what will happen on platforms where I don’t have admin rights.</p>
<p>Here Quarto is already present because I use it for nbdev2.</p>
</section>
<section id="create-repo-blog" class="level2">
<h2 class="anchored" data-anchor-id="create-repo-blog">create repo <code>blog</code></h2>
<p>I create <code>blog</code> repo on github.</p>
<p>And I can now get it locally: <code>git clone https://github.com/castorfou/blog.git</code> (I am from office, only https is accepted)</p>
</section>
<section id="create-a-quarto-blog" class="level2">
<h2 class="anchored" data-anchor-id="create-a-quarto-blog">create a quarto blog</h2>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;">cd</span> ~/git/blog</span>
<span id="cb2-2"><span class="ex" style="color: null;">quarto</span> create-project <span class="at" style="color: #657422;">--type</span> website:blog .</span>
<span id="cb2-3"><span class="ex" style="color: null;">quarto</span> install extension quarto-ext/video</span></code></pre></div>
<p>Issue here with <code>quarto install</code> when running from a corporate pc</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;">$</span> quarto install extension quarto-ext/video</span>
<span id="cb3-2"><span class="ex" style="color: null;">Sending</span> fatal alert BadCertificate</span>
<span id="cb3-3"><span class="ex" style="color: null;">ERROR:</span> TypeError: error sending request for url <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">https://github.com/quarto-ext/video/archive/refs/heads/main.tar.gz</span><span class="kw" style="color: #003B4F;">)</span><span class="bu" style="color: null;">:</span> error trying to connect: invalid peer certificate contents: invalid peer certificate: UnknownIssuer</span></code></pre></div>
<p>I have opened an issue at <a href="https://github.com/quarto-ext/video/issues/27" class="uri">https://github.com/quarto-ext/video/issues/27</a></p>
</section>
<section id="copy-former-blog-content---notebooks-and-markdown-files" class="level2">
<h2 class="anchored" data-anchor-id="copy-former-blog-content---notebooks-and-markdown-files">copy former blog content - notebooks and markdown files</h2>
<p>Your new repo will have a <code>posts/</code> directory.</p>
<p>This is where you will copy all of your notebook and markdown posts from fastpages.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;">cp</span> <span class="at" style="color: #657422;">-r</span> ../guillaume_blog/_notebooks/<span class="pp" style="color: #AD0000;">*</span> posts/</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;">cp</span> <span class="at" style="color: #657422;">-r</span> ../guillaume_blog/_posts/<span class="pp" style="color: #AD0000;">*</span> posts/</span></code></pre></div>
<p>I have to fix some stuff here,</p>
<p>some markdown posts have empty description which is not allowed by the migration process.</p>
<p>To fix that I will run <code>sed -i -- 's/^description:[[:space:]*]$/description:\ \"\"/' ~/git/blog/posts/*.md</code></p>
<p>Globally to identify culprit, I executed this:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="va" style="color: #111111;">chemin</span><span class="op" style="color: #5E5E5E;">=</span><span class="kw" style="color: #003B4F;">`</span><span class="bu" style="color: null;">pwd</span><span class="kw" style="color: #003B4F;">`</span></span>
<span id="cb5-2"><span class="cf" style="color: #003B4F;">for</span> FILE <span class="kw" style="color: #003B4F;">in</span> ../guillaume_blog/_posts/<span class="pp" style="color: #AD0000;">*</span><span class="kw" style="color: #003B4F;">;</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb5-3"><span class="cf" style="color: #003B4F;">do</span> <span class="bu" style="color: null;">echo</span> <span class="va" style="color: #111111;">$FILE</span><span class="kw" style="color: #003B4F;">;</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">cp</span> <span class="st" style="color: #20794D;">"</span><span class="va" style="color: #111111;">$FILE</span><span class="st" style="color: #20794D;">"</span> posts/<span class="kw" style="color: #003B4F;">;</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;">sed</span> <span class="at" style="color: #657422;">-i</span> <span class="at" style="color: #657422;">--</span> <span class="st" style="color: #20794D;">'s/^description:[[:space:]*]$/description:\ \"\"/'</span> <span class="va" style="color: #111111;">$chemin</span>/posts/<span class="pp" style="color: #AD0000;">*</span>.md<span class="kw" style="color: #003B4F;">;</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb5-6"><span class="ex" style="color: null;">nbdev_migrate</span> <span class="at" style="color: #657422;">--path</span> posts<span class="kw" style="color: #003B4F;">;</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb5-7"><span class="fu" style="color: #4758AB;">rm</span> <span class="at" style="color: #657422;">-f</span> posts/<span class="pp" style="color: #AD0000;">*</span> <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">&gt;</span> /dev/null<span class="kw" style="color: #003B4F;">;</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb5-8"><span class="cf" style="color: #003B4F;">done</span><span class="kw" style="color: #003B4F;">;</span></span></code></pre></div>
<p>but now that I know the migration issues, I can just execute:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># handle empty description in markdown files</span></span>
<span id="cb6-2"><span class="va" style="color: #111111;">chemin</span><span class="op" style="color: #5E5E5E;">=</span><span class="kw" style="color: #003B4F;">`</span><span class="bu" style="color: null;">pwd</span><span class="kw" style="color: #003B4F;">`</span></span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;">sed</span> <span class="at" style="color: #657422;">-i</span> <span class="at" style="color: #657422;">--</span> <span class="st" style="color: #20794D;">'s/^description:[[:space:]*]$/description:\ \"\"/'</span> <span class="va" style="color: #111111;">$chemin</span>/posts/<span class="pp" style="color: #AD0000;">*</span>.md</span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;"># code should not be here</span></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;">rm</span> posts/notebook2script.py </span>
<span id="cb6-6"><span class="fu" style="color: #4758AB;">rm</span> <span class="at" style="color: #657422;">-rf</span> posts/exp</span></code></pre></div>
<p>What was wrong with <code>2021-02-10-college-de-france-representations-parcimonieuses.md</code> was accents in title. Removing é with e fixed it.</p>
</section>
<section id="copy-former-blog-content---images" class="level2">
<h2 class="anchored" data-anchor-id="copy-former-blog-content---images">copy former blog content - images</h2>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;">mkdir</span> images</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">cp</span> <span class="at" style="color: #657422;">-r</span> ../guillaume_blog/images/<span class="pp" style="color: #AD0000;">*</span> images</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;">cp</span> <span class="at" style="color: #657422;">-r</span> ../guillaume_blog/images/copied_from_nb/<span class="pp" style="color: #AD0000;">*</span> images</span></code></pre></div>
</section>
<section id="migrate-posts-to-quarto" class="level2">
<h2 class="anchored" data-anchor-id="migrate-posts-to-quarto">migrate posts to quarto</h2>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;">conda</span> activate dataset_tools <span class="co" style="color: #5E5E5E;">#this is an env with nbdev installed</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;">#install last version of nbdev</span></span>
<span id="cb8-3"><span class="ex" style="color: null;">pip</span> install <span class="at" style="color: #657422;">-U</span> nbdev</span>
<span id="cb8-4"><span class="ex" style="color: null;">nbdev_migrate</span> <span class="at" style="color: #657422;">--path</span> posts</span></code></pre></div>
</section>
<section id="update-some-files" class="level2">
<h2 class="anchored" data-anchor-id="update-some-files">update some files</h2>
<ul>
<li><code>.gitignore</code>: we suggest adding <code>_site/</code> as well as dot files <code>.*</code></li>
<li><code>about.qmd</code>: I reuse my former <code>_pages/about.md</code></li>
<li><code>profile.jpg</code>: and use my profile picture</li>
</ul>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>.gitignore</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>/.quarto/
.*
!.gitignore
!.github</code></pre>
</div>
</div>
</section>
<section id="preview" class="level2">
<h2 class="anchored" data-anchor-id="preview">preview</h2>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;">quarto</span> preview</span></code></pre></div>
<p>Here we can fix many thinks, and auto update rendered pages is just excellent!</p>
<ul>
<li>move images from posts to posts/images (have to restart quarto preview after that)</li>
<li>delete the 2 examples (welcome and post-with-code)</li>
</ul>
<p>Will have to browse through all the site to see if all is properly rendered. &gt; fix for broken links or Jekyll shortcodes (things with {% … %}) that need to be converted to Quarto. Search the the Quarto documentation if you need help locating specific Quarto features.</p>
</section>
<section id="keep-git-repo-in-sync" class="level2">
<h2 class="anchored" data-anchor-id="keep-git-repo-in-sync">keep git repo in sync</h2>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="va" style="color: #111111;">NOW</span><span class="op" style="color: #5E5E5E;">=</span><span class="kw" style="color: #003B4F;">`</span><span class="fu" style="color: #4758AB;">date</span> <span class="st" style="color: #20794D;">'+%F_%H:%M'</span><span class="kw" style="color: #003B4F;">`;</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;">git</span> add .</span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;">git</span> commit <span class="at" style="color: #657422;">-m</span> <span class="st" style="color: #20794D;">"</span><span class="va" style="color: #111111;">$NOW</span><span class="st" style="color: #20794D;">"</span></span>
<span id="cb12-4"><span class="fu" style="color: #4758AB;">git</span> push</span></code></pre></div>
</section>
<section id="publication-to-gh-pages-using-gh-actions" class="level2">
<h2 class="anchored" data-anchor-id="publication-to-gh-pages-using-gh-actions">publication to gh-pages using gh-actions</h2>
<p>There are 2 ways to publish. A straightforword one by calling <code>quarto publish</code>. And a more advanced one with github actions.</p>
<p>Using my corporate PC, <code>quarto publish</code> fails so I will give github actions a try.</p>
<section id="quarto-publish" class="level3">
<h3 class="anchored" data-anchor-id="quarto-publish">quarto publish</h3>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;">quarto</span> publish gh-pages</span></code></pre></div>
<p>:heavy_check_mark: This is ok when publishing with home PC.</p>
<p>:x: But fails when publishing with corporate PC.see below quarto publishing issue behind firewall</p>
<p>shared it with community at discord: <a href="https://discord.com/channels/689892369998676007/1020178609605984267/1020631703653462038" class="uri">https://discord.com/channels/689892369998676007/1020178609605984267/1020631703653462038</a></p>
</section>
<section id="github-actions" class="level3">
<h3 class="anchored" data-anchor-id="github-actions">github actions</h3>
<p>as explained in <a href="https://quarto.org/docs/publishing/github-pages.html#github-action" class="uri">https://quarto.org/docs/publishing/github-pages.html#github-action</a></p>
<p>1st step is to decide where code is executed: * local execution and rendering * local execution with CI rendering * CI execution and rendering</p>
<p>I think I will go for local execution and rendering.</p>
<section id="freezing-computations" class="level4">
<h4 class="anchored" data-anchor-id="freezing-computations">freezing computations</h4>
<p>To be added to <code>_quarto.yml</code></p>
<pre class="text"><code>execute:
  freeze: auto</code></pre>
<p>And then <code>quarto render</code></p>
</section>
<section id="publish-actions" class="level4">
<h4 class="anchored" data-anchor-id="publish-actions">publish actions</h4>
<p>Add a publish.yml GitHub Action to your project by creating this YAML file and saving it to .github/workflows/publish.yml:</p>
<pre class="text"><code>on:
  workflow_dispatch:
  push:
    branches: main

name: Quarto Publish

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render and Publish
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}</code></pre>
<p>We can now remove the publish command from <code>publish.sh</code></p>
<p>And remove _site/ from <code>.gitignore</code></p>
</section>
</section>
</section>
<section id="open-external-links-in-new-tabs" class="level2">
<h2 class="anchored" data-anchor-id="open-external-links-in-new-tabs">open external links in new tabs</h2>
<p>thanks to <a href="https://quarto.org/docs/reference/formats/html.html#links" class="uri">https://quarto.org/docs/reference/formats/html.html#links</a></p>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>_quarto.yml <span class="op" style="color: #5E5E5E;">|</span>grep <span class="op" style="color: #5E5E5E;">-</span>A <span class="dv" style="color: #AD0000;">2</span> external</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    link-external-icon: true
    link-external-newwindow: true
    link-external-filter: ^(?:http:|https:)\/\/castorfou\.github\.io\/

</code></pre>
</div>
</div>
</section>
<section id="setup-favicon.ico" class="level2">
<h2 class="anchored" data-anchor-id="setup-favicon.ico">setup favicon.ico</h2>
<p>Creation of a favicon for this blog. Using <a href="https://www.gimp.org/tutorials/CircleImage/">gimp</a></p>
<p>And quarto <a href="https://quarto.org/docs/websites/website-tools.html#favicon">doc for favicon</a></p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>_quarto.yml <span class="op" style="color: #5E5E5E;">|</span>grep <span class="op" style="color: #5E5E5E;">-</span>B <span class="dv" style="color: #AD0000;">2</span> favico</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>website:
  title: "Guillaume's blog"
  favicon: favicon_small.png</code></pre>
</div>
</div>
<p>And <code>favicon_small.png</code> is just at root.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="op" style="color: #5E5E5E;">!</span>find ..<span class="op" style="color: #5E5E5E;">/</span>  <span class="op" style="color: #5E5E5E;">-</span>name <span class="st" style="color: #20794D;">'favicon_small.png'</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>../favicon_small.png
../_site/favicon_small.png</code></pre>
</div>
</div>
</section>
<section id="tbd-detect-broken-links" class="level2">
<h2 class="anchored" data-anchor-id="tbd-detect-broken-links">(tbd) detect broken links</h2>
<p><a href="../posts/2022-10-01-logbook-October-22.html#week-42---october-22">Guillaume’s blog - Logbook for October 22</a></p>
<blockquote class="blockquote">
<p>And have to figure out a way to detect broken links:</p>
<ul>
<li>using <a href="https://search.google.com/u/0/search-console?resource_id=https%3A%2F%2Fcastorfou.github.io%2Fblog%2F">google search console</a></li>
</ul>
<p>As it takes a day to be processed I will test again tomorrow</p>
</blockquote>
</section>
<section id="change-theme-and-allow-lightdark-mode" class="level2">
<h2 class="anchored" data-anchor-id="change-theme-and-allow-lightdark-mode">change theme and allow light/dark mode</h2>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>_quarto.yml <span class="op" style="color: #5E5E5E;">|</span> grep <span class="op" style="color: #5E5E5E;">-</span>A2 theme</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>    theme: 
      light: journal
      dark: darkly</code></pre>
</div>
</div>
<p>And to have a light banner in the landing page</p>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>index.qmd <span class="op" style="color: #5E5E5E;">|</span> grep banner</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>title-block-banner: false</code></pre>
</div>
</div>
</section>
<section id="tbd-fix-latex-expressions" class="level2">
<h2 class="anchored" data-anchor-id="tbd-fix-latex-expressions">(tbd) fix latex expressions</h2>
</section>
<section id="tbd-google-analytics-on-blog" class="level2">
<h2 class="anchored" data-anchor-id="tbd-google-analytics-on-blog">(tbd) google analytics on blog</h2>
<p><a href="../posts/2022-10-01-logbook-October-22.html#week-42---october-22">Guillaume’s blog - Logbook for October 22</a></p>
<blockquote class="blockquote">
<p>Setup <a href="https://support.google.com/analytics/answer/9539598?hl=en">google analytics</a>, get G- Id, and update <code>_quarto.yml</code> accordingly as explained in <a href="https://quarto.org/docs/websites/website-tools.html#google-analytics">quarto doc</a>.</p>
<p>Analytics available <a href="https://analytics.google.com/analytics/web/?utm_source=marketingplatform.google.com&amp;utm_medium=et&amp;utm_campaign=marketingplatform.google.com%2Fabout%2Fanalytics%2F#/p338279857/reports/intelligenthome">here</a></p>
</blockquote>
</section>
<section id="tbd-allow-comments" class="level2">
<h2 class="anchored" data-anchor-id="tbd-allow-comments">(tbd) allow comments</h2>
</section>
</section>
<section id="publication-process" class="level1">
<h1>Publication process</h1>
<div class="cell" data-tags="[]" data-execution_count="1">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>publish.sh</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NOW=`date '+%F_%H:%M'`;
#quarto render
git add .
git commit -m "$NOW"
git push
#quarto publish gh-pages --no-prompt</code></pre>
</div>
</div>
</section>
<section id="issues-improvments" class="level1">
<h1>Issues / improvments</h1>
<section id="workaround-quarto-publishing-issue-behind-firewall" class="level2">
<h2 class="anchored" data-anchor-id="workaround-quarto-publishing-issue-behind-firewall">[workaround] quarto publishing issue behind firewall</h2>
<p>Identical to error happening when installing quarto extension</p>
<p><a href="https://github.com/quarto-ext/video/issues/27" class="uri">https://github.com/quarto-ext/video/issues/27</a></p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="ex" style="color: null;">$</span> quarto publish</span>
<span id="cb28-2"><span class="ex" style="color: null;">?</span> Publish update to: › https://castorfou.github.io/blog/ <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">GitHub</span> Pages<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb28-3"><span class="ex" style="color: null;">From</span> https://github.com/castorfou/blog</span>
<span id="cb28-4"> <span class="ex" style="color: null;">*</span> branch            gh-pages   <span class="at" style="color: #657422;">-</span><span class="op" style="color: #5E5E5E;">&gt;</span> FETCH_HEAD</span>
<span id="cb28-5"> </span>
<span id="cb28-6"><span class="ex" style="color: null;">origin</span>  https://github.com/castorfou/blog.git <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">fetch</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb28-7"><span class="ex" style="color: null;">origin</span>  https://github.com/castorfou/blog.git <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">push</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb28-8"><span class="ex" style="color: null;">To</span> https://github.com/castorfou/blog.git</span>
<span id="cb28-9"> <span class="ex" style="color: null;">+</span> 0a3710d...1aeaf23 HEAD <span class="at" style="color: #657422;">-</span><span class="op" style="color: #5E5E5E;">&gt;</span> gh-pages <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">forced</span> update<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb28-10"><span class="ex" style="color: null;">fatal:</span> <span class="st" style="color: #20794D;">'fadc274b'</span> is not a working tree</span>
<span id="cb28-11"></span>
<span id="cb28-12"><span class="ex" style="color: null;">NOTE:</span> GitHub Pages sites use caching so you might need to click the refresh</span>
<span id="cb28-13"><span class="ex" style="color: null;">button</span> within your web browser to see changes after deployment.</span>
<span id="cb28-14"></span>
<span id="cb28-15"><span class="kw" style="color: #003B4F;">(</span><span class="ex" style="color: null;">\)</span> Deploying gh-pages branch to website <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">this</span> may take a few minutes<span class="kw" style="color: #003B4F;">)</span><span class="ex" style="color: null;">Sending</span> fatal alert BadCertificate</span>
<span id="cb28-16"><span class="ex" style="color: null;">[✓]</span> Deploying gh-pages branch to website <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">this</span> may take a few minutes<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb28-17"><span class="ex" style="color: null;">ERROR:</span> TypeError: error sending request for url <span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">https://castorfou.github.io/blog/.nojekyll</span><span class="kw" style="color: #003B4F;">)</span><span class="bu" style="color: null;">:</span> error trying to connect: invalid peer certificate contents: invalid peer certificate: UnknownIssuer</span></code></pre></div>
<p>For context, I use quarto as a replacement of fastai/fastpages and followed a migration guide from Hamel Hussain asking for this installation.</p>
<p>And I’m in a corporate environment with transparent proxies and self signed certificates. My system has updated CERT in /usr/local/share/ca-certificates/, and SSL_CERT_FILE environment variable pointing to updated corporate pem.</p>
<pre><code>$ quarto install extension quarto-ext/lightbox
Sending fatal alert BadCertificate
ERROR: TypeError: error sending request for url (https://github.com/quarto-ext/lightbox/archive/refs/heads/main.tar.gz): error trying to connect: invalid peer certificate contents: invalid peer certificate: UnknownIssuer</code></pre>
<p>It fails with the same message. When I run <code>quarto publish</code> I have the same issue.</p>
<p>One option is to use github actions as explained in <a href="../posts/2022-09-16-migrate blog from nbdev to quarto.html#publication-to-gh-pages-using-gh-actions">publication to gh-pages using gh-actions</a>.</p>
</section>
<section id="workaround-inline-images-are-not-properly-rendered" class="level2">
<h2 class="anchored" data-anchor-id="workaround-inline-images-are-not-properly-rendered">[workaround] inline images are not properly rendered</h2>
<p>analysis made at <a href="../posts/2022-09-23-inline-images-with-quarto.html">inline images from jupyter with quarto</a></p>
<p>short answer: use jupyter lab to blog</p>
</section>
<section id="albert-rapp-as-an-example" class="level2">
<h2 class="anchored" data-anchor-id="albert-rapp-as-an-example">Albert Rapp as an example</h2>
<p><a href="https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html" class="uri">https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html</a></p>
</section>
<section id="workaround-links-are-not-rendered-as-links" class="level2">
<h2 class="anchored" data-anchor-id="workaround-links-are-not-rendered-as-links">[workaround] links are not rendered as links</h2>
<p>in jupyter, just typing url turns it into a link. Not with quarto: <a href="https://castorfou.github.io/blog/" class="uri">https://castorfou.github.io/blog/</a></p>
<p>anyway to do it ?</p>
<p><a href="https://github.com/quarto-dev/quarto-cli/discussions/2609">https://github.com/quarto-dev/quarto-cli/discussions/2609</a></p>
<section id="suggestions" class="level3">
<h3 class="anchored" data-anchor-id="suggestions">suggestions</h3>
<p>First one is to surround url with pointy braces ‘&lt;&gt;’</p>
<p>Does it work: <a href="https://pandoc.org/MANUAL.html#links-1" class="uri">https://pandoc.org/MANUAL.html#links-1</a></p>
<p>And better one (?) would be to run pandoc with <a href="https://pandoc.org/MANUAL.html#extension-autolink_bare_uris">autolink_bare_uris</a></p>
<p>Just modifying <code>_quarto.yml</code> in ( format &gt; html &gt; from ) option</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-09-16-migrate blog from nbdev to quarto_files/figure-html/069768d2-1-98d6bda2-f07a-4b7d-bfaf-68dc5f46130f.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>_quarto.yml <span class="op" style="color: #5E5E5E;">|</span> grep <span class="op" style="color: #5E5E5E;">-</span>B5 autolink</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  html:
    theme: 
      light: journal
      dark: darkly
    css: styles.css
    from: markdown+autolink_bare_uris</code></pre>
</div>
</div>
</section>
</section>
<section id="quarto-updated-to-version-1.2.269" class="level2">
<h2 class="anchored" data-anchor-id="quarto-updated-to-version-1.2.269">quarto updated to version 1.2.269</h2>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb32-1"><span class="ex" style="color: null;">~/temp$</span> wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.2.269/quarto-1.2.269-linux-amd64.deb</span>
<span id="cb32-2"><span class="ex" style="color: null;">~/temp$</span> sudo apt install ./quarto-1.2.269-linux-amd64.deb </span>
<span id="cb32-3"><span class="ex" style="color: null;">~/temp$</span> quarto <span class="at" style="color: #657422;">-V</span></span>
<span id="cb32-4"><span class="ex" style="color: null;">1.2.269</span></span></code></pre></div>
<p>I don’t know what is the changelog. Looks like we don’t need to install video extension anymore. (quarto install extension quarto-ext/video)</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb33-1"><span class="ex" style="color: null;">~/git/blog$</span> quarto remove extension quarto-ext/video</span></code></pre></div>
<p>I have started a <a href="https://forums.fast.ai/t/new-quarto-version-whats-new/102042">thread</a> in fastai forum. There are updates with widget states and inline images. Update worth running!</p>


</section>
</section>

 ]]></description>
  <category>nbdev</category>
  <category>quarto</category>
  <category>fastpages</category>
  <category>blog</category>
  <guid>https://castorfou.github.io/posts/2022-09-16-migrate blog from nbdev to quarto.html</guid>
  <pubDate>Fri, 16 Sep 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/posts/images/icons/fastai.png" medium="image" type="image/png"/>
</item>
<item>
  <title>nbdev2 - first steps</title>
  <link>https://castorfou.github.io/posts/2022-09-12-nbdev2.html</link>
  <description><![CDATA[ 




<p>fastai has just released <a href="https://nbdev.fast.ai/">nbdev2</a>.</p>
<p>This is a complete rewrite with quarto. I like how they displayed features in that card</p>
<p><img src="https://castorfou.github.io/posts/https:/nbdev.fast.ai/images/card.png" class="img-fluid"></p>
<section id="support" class="level1">
<h1>Support</h1>
<p>There is a <a href="https://forums.fast.ai/c/nbdev/48">nbdev section</a> in fastai forum.</p>
<p>There is a channel <a href="https://discord.com/channels/689892369998676007/887694559952400424">#nbdev-help</a> at fastai discord.</p>
<p>And <a href="https://github.com/fastai/nbdev/issues">issues page</a> in github fastai/nbdev repo.</p>
</section>
<section id="walkthrough" class="level1">
<h1>Walkthrough</h1>
<p>There is a 90 min video: <a href="https://www.youtube.com/watch?v=l7zS8Ld4_iA&amp;ab_channel=JeremyHoward">nbdev tutorial</a> – zero to published project in 90 minutes</p>
<p>I follow here this tutorial.</p>
<p>Here are the big steps:</p>
<section id="create-github-project" class="level2">
<h2 class="anchored" data-anchor-id="create-github-project">create github project</h2>
<ul>
<li>create a new project with github: <a href="https://github.com/castorfou/dataset_tools">dataset_tools</a>. Give a description it will be reused by nbdev</li>
</ul>
</section>
<section id="integrate-nbdev-in-your-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="integrate-nbdev-in-your-python-environment">integrate <code>nbdev</code> in your python environment</h2>
<ul>
<li>create a local conda env <code>dataset_tools</code> with what is required to develop this library</li>
</ul>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;">!</span>cat <span class="op" style="color: #5E5E5E;">/</span>home<span class="op" style="color: #5E5E5E;">/</span>guillaume<span class="op" style="color: #5E5E5E;">/</span>_conda_env<span class="op" style="color: #5E5E5E;">/</span>dataset_tools.txt</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>conda remove --name dataset_tools --all
conda create --name dataset_tools python=3.9
conda activate dataset_tools
conda install ipykernel
python -m ipykernel install --user --name=dataset_tools
pip install nbdev -U
pip install pandas</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;">import</span> sys</span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;">!</span>{sys.prefix}<span class="op" style="color: #5E5E5E;">/</span><span class="bu" style="color: null;">bin</span><span class="op" style="color: #5E5E5E;">/</span>pip <span class="bu" style="color: null;">list</span><span class="op" style="color: #5E5E5E;">|</span>grep nbdev</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>nbdev              2.2.10</code></pre>
</div>
</div>
</section>
<section id="clone-repo-and-turned-it-into-a-nbdev-repo" class="level2">
<h2 class="anchored" data-anchor-id="clone-repo-and-turned-it-into-a-nbdev-repo">clone repo and turned it into a nbdev repo</h2>
<ul>
<li>clone repo <code>dataset_tools</code> and turn it into a nbdev repo</li>
</ul>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;">git</span> clone git@github.com:castorfou/dataset_tools.git</span>
<span id="cb5-2"><span class="ex" style="color: null;">conda</span> activate dataset_tools</span>
<span id="cb5-3"><span class="bu" style="color: null;">cd</span> dataset_tools</span></code></pre></div>
</section>
<section id="nbdev_-commands-are-ready-to-be-used" class="level2">
<h2 class="anchored" data-anchor-id="nbdev_-commands-are-ready-to-be-used">nbdev_ commands are ready to be used</h2>
<ul>
<li>nbdev can be used from here. For example <code>nbdev_help</code> to display all nbdev_ commands and what it does. And more detail can be got with <code>-h</code>: <code>nbdev_new -h</code></li>
</ul>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="op" style="color: #5E5E5E;">!</span>{sys.prefix}<span class="op" style="color: #5E5E5E;">/</span><span class="bu" style="color: null;">bin</span><span class="op" style="color: #5E5E5E;">/</span>nbdev_help</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>nbdev_bump_version              Increment version in settings.ini by one
nbdev_changelog                 Create a CHANGELOG.md file from closed and labeled GitHub issues
nbdev_clean                     Clean all notebooks in `fname` to avoid merge conflicts
nbdev_conda                     Create a `meta.yaml` file ready to be built into a package, and optionally build and upload it
nbdev_create_config             Create a config file.
nbdev_deploy                    Deploy docs to GitHub Pages
nbdev_docs                      Create Quarto docs and README.md
nbdev_export                    Export notebooks in `path` to Python modules
nbdev_filter                    A notebook filter for Quarto
nbdev_fix                       Create working notebook from conflicted notebook `nbname`
nbdev_help                      Show help for all console scripts
nbdev_install                   Install Quarto and the current library
nbdev_install_hooks             Install Jupyter and git hooks to automatically clean, trust, and fix merge conflicts in notebooks
nbdev_install_quarto            Install latest Quarto on macOS or Linux, prints instructions for Windows
nbdev_merge                     Git merge driver for notebooks
nbdev_migrate                   Convert all directives and callouts in `fname` from v1 to v2
nbdev_new                       Create an nbdev project.
nbdev_prepare                   Export, test, and clean notebooks, and render README if needed
nbdev_preview                   Preview docs locally
nbdev_pypi                      Create and upload Python package to PyPI
nbdev_quarto                    Create Quarto docs and README.md
nbdev_readme                    Render README.md from index.ipynb
nbdev_release_both              Release both conda and PyPI packages
nbdev_release_gh                Calls `nbdev_changelog`, lets you edit the result, then pushes to git and calls `nbdev_release_git`
nbdev_release_git               Tag and create a release in GitHub for the current version
nbdev_sidebar                   Create sidebar.yml
nbdev_test                      Test in parallel notebooks matching `path`, passing along `flags`
nbdev_trust                     Trust notebooks matching `fname`
nbdev_update                    Propagate change in modules matching `fname` to notebooks that created them</code></pre>
</div>
</div>
<ul>
<li><code>nbdev_new</code>. It is creating the structure and files such as settings.ini.</li>
<li>from base environment we can start <code>jupyter notebook</code>. It is advised to install nb_extensions (<code>pip install jupyter_contrib_nbextensions</code>), and activate TOC2. Open <code>00_core.ipynb</code> with <code>dataset_tools</code> kernel. Rename <code>00_core.ipynb</code> –&gt; <code>00_container.ipynb</code></li>
</ul>
</section>
<section id="and-prefix-in-notebooks-as-well" class="level2">
<h2 class="anchored" data-anchor-id="and-prefix-in-notebooks-as-well">and <code>#|</code> prefix in notebooks as well</h2>
<p>Jeremy explains then what are <code>#|</code> used by quarto and nbdev.</p>
<p>And for example <code>#| hide</code> will allow to be executed but hide in your documentation.</p>
<p>Actually from a single notebook, you have 3 usages: * the notebook by itself - all cells are executed, whatever are the prefix <code>#|</code> that you display on cells * the python file - only the cells with <code>#| export</code> will be published in a python file referenced as <code>#| default_exp &lt;name of python file&gt;</code>. A new file is genreated when <code>nbdev_export</code> is called. * the documentation - all cells are used, except the one started with <code>#| hide</code>. Seems to be dynamically generated (when <code>nbdev_preview</code> is running?). <code>#| export</code> are handled specifically: if you have import, nothing is displayed. If you have code, definitions and docstrings are exported, and arguments as well.</p>
<p>There is an easy way to describe arguments of a function.</p>
<p>Just make some indentation with comments such as in</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, </span>
<span id="cb8-2">                 cle : <span class="bu" style="color: null;">str</span>, <span class="co" style="color: #5E5E5E;"># la clé du container</span></span>
<span id="cb8-3">                 dataset : pd.DataFrame <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span>, <span class="co" style="color: #5E5E5E;"># le dataset</span></span>
<span id="cb8-4">                 colonnes_a_masquer : <span class="bu" style="color: null;">list</span> <span class="op" style="color: #5E5E5E;">=</span> [], <span class="co" style="color: #5E5E5E;"># les colonnes à masquer</span></span>
<span id="cb8-5">                 colonnes_a_conserver : <span class="bu" style="color: null;">list</span> <span class="op" style="color: #5E5E5E;">=</span> [] <span class="co" style="color: #5E5E5E;"># les colonnes qui ne seront pas transformées</span></span>
<span id="cb8-6">                ):</span></code></pre></div>
<section id="show_doc" class="level3">
<h3 class="anchored" data-anchor-id="show_doc">show_doc</h3>
<p>and we can directly see the effect of it by calling <code>show_doc</code> (<code>show_doc(Container)</code>). You can even call show_doc on code not written with nbdev, or not even written by you.</p>
<div class="cell" data-executetime="{&quot;end_time&quot;:&quot;2022-09-12T09:01:42.139428Z&quot;,&quot;start_time&quot;:&quot;2022-09-12T09:01:41.974851Z&quot;}" data-execution_count="17">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;">from</span> nbdev.showdoc <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb9-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb9-3">show_doc(pd.DataFrame)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section See Also
  else: warn(msg)
/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section Examples
  else: warn(msg)</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="17">
<hr>
<section id="dataframe" class="level3">
<h3 class="anchored" data-anchor-id="dataframe">DataFrame</h3>
<blockquote class="blockquote">
<pre><code> DataFrame (data=None, index:Axes|None=None, columns:Axes|None=None,
            dtype:Dtype|None=None, copy:bool|None=None)</code></pre>
</blockquote>
<p>Two-dimensional, size-mutable, potentially heterogeneous tabular data.</p>
<p>Data structure also contains labeled axes (rows and columns). Arithmetic operations align on both row and column labels. Can be thought of as a dict-like container for Series objects. The primary pandas data structure.</p>
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 6%">
<col style="width: 25%">
<col style="width: 34%">
<col style="width: 34%">
</colgroup>
<thead>
<tr class="header">
<th></th>
<th><strong>Type</strong></th>
<th><strong>Default</strong></th>
<th><strong>Details</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>data</td>
<td>NoneType</td>
<td>None</td>
<td>Dict can contain Series, arrays, constants, dataclass or list-like objects. If<br>data is a dict, column order follows insertion-order. If a dict contains Series<br>which have an index defined, it is aligned by its index.<br><br>.. versionchanged:: 0.25.0<br> If data is a list of dicts, column order follows insertion-order.</td>
</tr>
<tr class="even">
<td>index</td>
<td>Axes | None</td>
<td>None</td>
<td>Index to use for resulting frame. Will default to RangeIndex if<br>no indexing information part of input data and no index provided.</td>
</tr>
<tr class="odd">
<td>columns</td>
<td>Axes | None</td>
<td>None</td>
<td>Column labels to use for resulting frame when data does not have them,<br>defaulting to RangeIndex(0, 1, 2, …, n). If data contains column labels,<br>will perform column selection instead.</td>
</tr>
<tr class="even">
<td>dtype</td>
<td>Dtype | None</td>
<td>None</td>
<td>Data type to force. Only a single dtype is allowed. If None, infer.</td>
</tr>
<tr class="odd">
<td>copy</td>
<td>bool | None</td>
<td>None</td>
<td>Copy data from inputs.<br>For dict data, the default of None behaves like <code>copy=True</code>. For DataFrame<br>or 2d ndarray input, the default of None behaves like <code>copy=False</code>.<br><br>.. versionchanged:: 1.3.0</td>
</tr>
</tbody>
</table>
</section>
</div>
</div>
</section>
<section id="unit-testing" class="level3">
<h3 class="anchored" data-anchor-id="unit-testing">unit testing</h3>
<p>There are some basic testing functionalty available by importing fastcore. <code>from fastcore.test import *</code></p>
<p>With <code>test_eq</code> very closed to <code>assert</code> and <code>test_ne</code> closed to <code>assert not</code></p>
<div class="cell" data-executetime="{&quot;end_time&quot;:&quot;2022-09-12T09:27:07.251089Z&quot;,&quot;start_time&quot;:&quot;2022-09-12T09:27:07.243921Z&quot;}" data-execution_count="20">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;">from</span> fastcore.test <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb12-2">show_doc(test_eq)</span>
<span id="cb12-3">show_doc(test_ne)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<hr>
<p><a href="https://github.com/fastai/fastcore/blob/master/fastcore/test.py#LNone" target="_blank" style="float:right; font-size:smaller">source</a></p>
<section id="test_ne" class="level3">
<h3 class="anchored" data-anchor-id="test_ne">test_ne</h3>
<blockquote class="blockquote">
<pre><code> test_ne (a, b)</code></pre>
</blockquote>
<p><code>test</code> that <code>a!=b</code></p>
</section>
</div>
</div>
<p>This is convenient to integrate all the unit tests that way. When you will export by running <code>Restart &amp; Run All</code>, if an error is met, export won’t be done.</p>
<p>And one can run <code>nbdev_test</code> from the command line.</p>
</section>
<section id="patch---define-method-out-of-its-class" class="level3">
<h3 class="anchored" data-anchor-id="patch---define-method-out-of-its-class"><span class="citation" data-cites="patch">@patch</span> - define method out of its class</h3>
<p>Just by adding this import</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="im" style="color: #00769E;">from</span> fastcore.utils <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span></code></pre></div>
<p>one can use</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="at" style="color: #657422;">@patch</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;">def</span> new_method(<span class="va" style="color: #111111;">self</span>:myclass):</span>
<span id="cb15-3">    <span class="cf" style="color: #003B4F;">pass</span></span></code></pre></div>
</section>
<section id="nbdev_export" class="level3">
<h3 class="anchored" data-anchor-id="nbdev_export"><code>nbdev_export</code></h3>
<p>from command line, one can run <code>nbdev_export</code></p>
<p>or directly from jupyter, for example will be executing <code>Restart &amp; Run All</code></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;">#| hide</span></span>
<span id="cb16-2"><span class="im" style="color: #00769E;">import</span> nbdev<span class="op" style="color: #5E5E5E;">;</span> nbdev.nbdev_export()</span></code></pre></div>
<p>And we can install it to be used directly by running <code>pip install -e .</code></p>
<p>It means that you can now import your project with</p>
<p><code>from dataset_tools.container import *</code></p>
<p>When it will be published (pypi or conda), it will be installable by calling</p>
<p><code>pip install dataset-tools</code></p>
<p>or</p>
<p><code>conda install -c fastai dataset-tools</code></p>
<p>NB: see how <code>_</code> has been turned into <code>-</code>, and for that to happen we have to update <code>lib_name</code> and <code>lib_path</code> in <code>settings.ini</code> by replacing <code>_</code>with <code>-</code></p>
<p>NB2: it is still confusing for me. It looks like modifying <code>lib_path</code> is not a good optiom.</p>
</section>
<section id="index.ipynb" class="level3">
<h3 class="anchored" data-anchor-id="index.ipynb">index.ipynb</h3>
<p>Here it is a good idea to give overview about how to use it.</p>
<p>By importing your library and start using it.</p>
<p>And it will be exported as the homepage of your lib.</p>
<p>Just have to decide what should land in index and what should land in module page.</p>
</section>
<section id="nbdev_preview" class="level3">
<h3 class="anchored" data-anchor-id="nbdev_preview"><code>nbdev_preview</code></h3>
<p>Just run it from command line</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;">nbdev_preview</span></span></code></pre></div>
<p>and it is accessible from <a href="http://localhost:3000" class="uri">http://localhost:3000</a>.</p>
<p>This is a quarto webserver. The 1st time you launch it it will install quarto for you. On ubuntu this is a standard package so it will be updated regularly.</p>
<div class="cell" data-executetime="{&quot;end_time&quot;:&quot;2022-09-12T10:00:57.349093Z&quot;,&quot;start_time&quot;:&quot;2022-09-12T10:00:53.838159Z&quot;}" data-execution_count="22">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;">from</span> getpass <span class="im" style="color: #00769E;">import</span> getpass</span>
<span id="cb18-2"><span class="op" style="color: #5E5E5E;">!</span>echo {getpass()} <span class="op" style="color: #5E5E5E;">|</span> sudo <span class="op" style="color: #5E5E5E;">-</span>S apt<span class="op" style="color: #5E5E5E;">-</span>cache show quarto</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>········
[sudo] password for guillaume: Package: quarto
Status: install ok installed
Priority: optional
Section: user/text
Installed-Size: 242759
Maintainer: RStudio, PBC &lt;quarto@rstudio.org&gt;
Architecture: amd64
Version: 1.1.189
Description: Quarto is an academic, scientific, and technical publishing system built on Pandoc.
Description-md5: 516c872f9c3577457bbd01eac38f8130
Homepage: https://github.com/quarto-dev/quarto-cli
</code></pre>
</div>
</div>
</section>
<section id="nbdev_test" class="level3">
<h3 class="anchored" data-anchor-id="nbdev_test"><code>nbdev_test</code></h3>
<p>As mentionned earlier, one can run <code>nbdev_test</code> to execute all tests in all notebooks.</p>
<p>If it fails, Hamel has shared his dev workflow. He runs <code>Restart kernel &amp; run All</code>, and use <code>%debug</code> magic command to enter debug mode.</p>
<p>You then have access to all <code>ipdb</code> commands such as h for help, p <code>var</code> to print content of <code>var</code>, w for stacktraces</p>
<div class="cell" data-executetime="{&quot;end_time&quot;:&quot;2022-09-12T12:46:31.638551Z&quot;,&quot;start_time&quot;:&quot;2022-09-12T12:44:45.229875Z&quot;}" data-execution_count="24">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="op" style="color: #5E5E5E;">%</span>debug</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&gt; /tmp/ipykernel_2453/349085080.py(1)&lt;cell line: 1&gt;()
----&gt; 1 show_doc(test_eq)

ipdb&gt; h

Documented commands (type help &lt;topic&gt;):
========================================
EOF    commands   enable    ll        pp       s                until 
a      condition  exit      longlist  psource  skip_hidden      up    
alias  cont       h         n         q        skip_predicates  w     
args   context    help      next      quit     source           whatis
b      continue   ignore    p         r        step             where 
break  d          interact  pdef      restart  tbreak         
bt     debug      j         pdoc      return   u              
c      disable    jump      pfile     retval   unalias        
cl     display    l         pinfo     run      undisplay      
clear  down       list      pinfo2    rv       unt            

Miscellaneous help topics:
==========================
exec  pdb

ipdb&gt; q</code></pre>
</div>
</div>
</section>
<section id="golden-rule-dont-mix-imports-and-code" class="level3">
<h3 class="anchored" data-anchor-id="golden-rule-dont-mix-imports-and-code">Golden rule: don’t mix imports and code</h3>
<p>For a reason it is asked not to mix cells with imports and code.</p>
<p>I am not sure what is the core reason for that. Something due to show_doc or doc generation?</p>
<p>During my tests, I have seen something complaining about it after running <code>nbdev_export</code> or <code>nbdev_test</code> but cannot reproduce that. Hmmm</p>
</section>
<section id="nbdev_clean" class="level3">
<h3 class="anchored" data-anchor-id="nbdev_clean"><code>nbdev_clean</code></h3>
<p>Just to remove unnecessary metadata in ipynb files.</p>
<p>Will open an issue, because it fails to run here</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="kw" style="color: #003B4F;">(</span><span class="ex" style="color: null;">dataset_tools</span><span class="kw" style="color: #003B4F;">)</span> <span class="ex" style="color: null;">guillaume@LK06LPF2LTSSL:~/git/dataset_tools$</span> nbdev_clean</span>
<span id="cb22-2"><span class="ex" style="color: null;">/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:110:</span> UserWarning: Failed to clean notebook</span>
<span id="cb22-3">  <span class="ex" style="color: null;">warn</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">f</span><span class="st" style="color: #20794D;">'{warn_msg}'</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb22-4"><span class="ex" style="color: null;">/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:111:</span> UserWarning: clean_ids</span>
<span id="cb22-5">  <span class="ex" style="color: null;">warn</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">e</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb22-6"><span class="ex" style="color: null;">/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:111:</span> UserWarning: clean_ids</span>
<span id="cb22-7">  <span class="ex" style="color: null;">warn</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">e</span><span class="kw" style="color: #003B4F;">)</span></span></code></pre></div>
</section>
<section id="push-to-github" class="level3">
<h3 class="anchored" data-anchor-id="push-to-github">push to github</h3>
<p>Need to activate github pages from your repo as explained in <a href="https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-from-a-branch" class="uri">https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-from-a-branch</a></p>
<p>Settings &gt; Pages &gt; Under “Build and deployment”, under “Branch”, use the None or Branch drop-down menu and select <strong>gh-pages</strong> as a publishing source.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-09-12-nbdev2_files/figure-html/713f80f6-1-2bea4d49-bd96-4e50-b6fb-44728dcd7fd4.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
<p>Not a bad thing to run all these stuff</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="ex" style="color: null;">nbdev_clean</span></span>
<span id="cb23-2"><span class="fu" style="color: #4758AB;">git</span> diff</span>
<span id="cb23-3"><span class="fu" style="color: #4758AB;">git</span> status</span>
<span id="cb23-4"><span class="fu" style="color: #4758AB;">git</span> add <span class="at" style="color: #657422;">-A</span></span>
<span id="cb23-5"><span class="ex" style="color: null;">nbdev_export</span></span>
<span id="cb23-6"><span class="ex" style="color: null;">nbdev_test</span></span>
<span id="cb23-7"><span class="ex" style="color: null;">nbdev_docs</span></span>
<span id="cb23-8"><span class="fu" style="color: #4758AB;">git</span> commit <span class="at" style="color: #657422;">-am</span><span class="st" style="color: #20794D;">'init version'</span></span>
<span id="cb23-9"><span class="fu" style="color: #4758AB;">git</span> push</span></code></pre></div>
<p>Note that for a reason nbdev_clean is failing</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="ex" style="color: null;">/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:110:</span> UserWarning: Failed to clean notebook</span>
<span id="cb24-2">  <span class="ex" style="color: null;">warn</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">f</span><span class="st" style="color: #20794D;">'{warn_msg}'</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb24-3"><span class="ex" style="color: null;">/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:111:</span> UserWarning: clean_ids</span>
<span id="cb24-4">  <span class="ex" style="color: null;">warn</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">e</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb24-5"><span class="ex" style="color: null;">/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:111:</span> UserWarning: clean_ids</span>
<span id="cb24-6">  <span class="ex" style="color: null;">warn</span><span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">e</span><span class="kw" style="color: #003B4F;">)</span></span></code></pre></div>
<p>And Hamel suggests to add <code>clean_ids = True</code> in settings.ini</p>
<p><code>nbdev_docs</code>is pushing the content of index.ipynb to README.md</p>
</section>
<section id="define-dep" class="level3">
<h3 class="anchored" data-anchor-id="define-dep">define dep</h3>
<p>Just modify <code>settings.ini</code>to add dependancies (here pandas)</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb25-1"><span class="co" style="color: #5E5E5E;"># end of settings.ini</span></span>
<span id="cb25-2"><span class="ex" style="color: null;">[..]</span></span>
<span id="cb25-3"><span class="co" style="color: #5E5E5E;">### Optional </span><span class="al" style="color: #AD0000;">###</span></span>
<span id="cb25-4"><span class="ex" style="color: null;">requirements</span> = fastcore pandas</span>
<span id="cb25-5"><span class="co" style="color: #5E5E5E;"># dev_requirements =</span></span>
<span id="cb25-6"><span class="co" style="color: #5E5E5E;"># console_scripts =</span></span>
<span id="cb25-7"><span class="ex" style="color: null;">clean_ids</span> = True</span></code></pre></div>
<p>Et voila!, doc is available at <a href="https://castorfou.github.io/dataset_tools/" class="uri">https://castorfou.github.io/dataset_tools/</a> and you can push that address to your repo settings</p>
</section>
<section id="publish-to-pypi-conda" class="level3">
<h3 class="anchored" data-anchor-id="publish-to-pypi-conda">publish to Pypi, conda, …</h3>
<p>This is done by calling <code>nbdev_pypi</code>or <code>nbdev_conda</code>. And it is modifying settings.ini to increment version number. (very much as <code>nbdev_bump_version</code> does)</p>
<p>There are other commands such as <code>nbdev_release_xxx</code> the seems to do quite the same for git.</p>
</section>
</section>
</section>
<section id="gitlab-integration" class="level1">
<h1>Gitlab integration</h1>
<p>because this is the platform we use at Michelin, I will need to make it work with our internal gitlab instance.</p>
<p>There is on-going work to make it happen:</p>
<ul>
<li>from Hamel Husain - enhancement request <a href="https://github.com/fastai/nbdev/issues/945">Support gitlab</a></li>
<li>and from fastai community in forum: <a href="https://forums.fast.ai/t/nbdev-and-gitlab-source-links/98867">Nbdev and Gitlab (source links)</a>, <a href="https://forums.fast.ai/t/example-nbdev-on-gitlab/98890">Example: nbdev on Gitlab</a></li>
</ul>
<p>I have published this version to <a href="https://forums.fast.ai/t/example-nbdev-on-gitlab/98890/2">nbdev forum</a></p>
<section id="my-tests-with-our-internal-gitlab" class="level2">
<h2 class="anchored" data-anchor-id="my-tests-with-our-internal-gitlab">my tests with our internal gitlab</h2>
<section id="create-project-in-gitlab" class="level3">
<h3 class="anchored" data-anchor-id="create-project-in-gitlab">create project in gitlab</h3>
<p>Project name : <code>nbdev_gitlab</code></p>
<p>Project URL : <code>https://gitlab.michelin.com</code> <code>janus</code> <code>nbdev_gitlab</code></p>
<p>Project description : <code>This is the smallest project to make nbdev working with gitlab</code></p>
<blockquote class="blockquote">
<p>Create project</p>
</blockquote>
</section>
<section id="clone-it" class="level3">
<h3 class="anchored" data-anchor-id="clone-it">clone it</h3>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb26-1"><span class="ex" style="color: null;">conda</span> activate dataset_tools</span>
<span id="cb26-2"><span class="bu" style="color: null;">cd</span> ~/git</span>
<span id="cb26-3"><span class="fu" style="color: #4758AB;">git</span> clone git@gitlab.michelin.com:janus/nbdev_gitlab.git</span></code></pre></div>
</section>
<section id="nbdev_new" class="level3">
<h3 class="anchored" data-anchor-id="nbdev_new">nbdev_new</h3>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb27-1"><span class="bu" style="color: null;">export</span> <span class="va" style="color: #111111;">SSL_CERT_FILE</span><span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/certifi/cacert.pem'</span></span>
<span id="cb27-2"><span class="ex" style="color: null;">nbdev_new</span></span></code></pre></div>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="ex" style="color: null;">/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/ghapi/core.py:99:</span> UserWarning: Neither GITHUB_TOKEN nor GITHUB_JWT_TOKEN found: running as unauthenticated</span>
<span id="cb28-2">  <span class="ex" style="color: null;">else:</span> warn<span class="er" style="color: #AD0000;">(</span><span class="st" style="color: #20794D;">'Neither GITHUB_TOKEN nor GITHUB_JWT_TOKEN found: running as unauthenticated'</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb28-3"><span class="ex" style="color: null;">Could</span> not access repo: janus/nbdev_gitlab to find your default branch <span class="at" style="color: #657422;">-</span> <span class="kw" style="color: #003B4F;">`</span><span class="ex" style="color: null;">main</span><span class="kw" style="color: #003B4F;">`</span> assumed.</span>
<span id="cb28-4"><span class="ex" style="color: null;">Edit</span> <span class="kw" style="color: #003B4F;">`</span><span class="ex" style="color: null;">settings.ini</span><span class="kw" style="color: #003B4F;">`</span> if this is incorrect.</span>
<span id="cb28-5"><span class="ex" style="color: null;">In</span> the future, you can allow nbdev to see private repos by setting the environment variable GITHUB_TOKEN as described here:</span>
<span id="cb28-6"><span class="ex" style="color: null;">https://nbdev.fast.ai/cli.html#Using-nbdev_new-with-private-repos</span></span>
<span id="cb28-7"><span class="ex" style="color: null;">repo</span> = nbdev_gitlab <span class="co" style="color: #5E5E5E;"># Automatically inferred from git</span></span>
<span id="cb28-8"><span class="ex" style="color: null;">user</span> = janus <span class="co" style="color: #5E5E5E;"># Automatically inferred from git</span></span>
<span id="cb28-9"><span class="ex" style="color: null;">author</span> = guillaume <span class="co" style="color: #5E5E5E;"># Automatically inferred from git</span></span>
<span id="cb28-10"><span class="ex" style="color: null;">author_email</span> = guillaume.ramelet@michelin.com <span class="co" style="color: #5E5E5E;"># Automatically inferred from git</span></span>
<span id="cb28-11"><span class="co" style="color: #5E5E5E;"># Please enter a value for description</span></span>
<span id="cb28-12"><span class="ex" style="color: null;">description</span> = This is the smallest project to make nbdev working with gitlab</span>
<span id="cb28-13"><span class="ex" style="color: null;">settings.ini</span> created.</span>
<span id="cb28-14"><span class="ex" style="color: null;">/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/ghapi/core.py:99:</span> UserWarning: Neither GITHUB_TOKEN nor GITHUB_JWT_TOKEN found: running as unauthenticated</span>
<span id="cb28-15">  <span class="ex" style="color: null;">else:</span> warn<span class="er" style="color: #AD0000;">(</span><span class="st" style="color: #20794D;">'Neither GITHUB_TOKEN nor GITHUB_JWT_TOKEN found: running as unauthenticated'</span><span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb28-16"><span class="ex" style="color: null;">pandoc</span> <span class="at" style="color: #657422;">-o</span> README.md</span>
<span id="cb28-17">  <span class="ex" style="color: null;">to:</span> gfm+footnotes+tex_math_dollars-yaml_metadata_block</span>
<span id="cb28-18">  <span class="ex" style="color: null;">standalone:</span> true</span>
<span id="cb28-19">  <span class="ex" style="color: null;">default-image-extension:</span> png</span>
<span id="cb28-20"></span>
<span id="cb28-21"><span class="ex" style="color: null;">metadata</span></span>
<span id="cb28-22">  <span class="ex" style="color: null;">description:</span> This is the smallest project to make nbdev working with gitlab</span>
<span id="cb28-23">  <span class="ex" style="color: null;">title:</span> nbdev_gitlab</span>
<span id="cb28-24"></span>
<span id="cb28-25"><span class="ex" style="color: null;">Output</span> created: _docs/README.md</span></code></pre></div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="op" style="color: #5E5E5E;">!</span>ls <span class="op" style="color: #5E5E5E;">-</span>l <span class="op" style="color: #5E5E5E;">~/</span>git<span class="op" style="color: #5E5E5E;">/</span>nbdev_gitlab</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>total 36
-rwxrwxrwx 1 guillaume guillaume   978 Sep  5 18:31 00_core.ipynb
-rwxrwxrwx 1 guillaume guillaume 11337 Sep  5 18:31 LICENSE
-rwxrwxrwx 1 guillaume guillaume   111 Sep  5 18:31 MANIFEST.in
-rwxrwxrwx 1 guillaume guillaume   309 Sep 13 14:02 README.md
drwxrwxrwx 1 guillaume guillaume  4096 Sep 13 14:02 _docs
-rwxrwxrwx 1 guillaume guillaume   728 Sep 13 14:02 _quarto.yml
-rwxrwxrwx 1 guillaume guillaume  1561 Sep 13 14:02 index.ipynb
drwxrwxrwx 1 guillaume guillaume  4096 Sep 13 14:02 nbdev_gitlab
-rwxrwxrwx 1 guillaume guillaume   945 Sep 13 14:02 settings.ini
-rwxrwxrwx 1 guillaume guillaume  2541 Sep  5 18:31 setup.py
-rwxrwxrwx 1 guillaume guillaume   600 Sep  5 18:31 styles.css</code></pre>
</div>
</div>
</section>
<section id="change-in-settings.ini" class="level3">
<h3 class="anchored" data-anchor-id="change-in-settings.ini">change in <code>settings.ini</code></h3>
<pre class="text"><code>- set company_name = acme

- set doc_path = public
- set branch = main instead of master
- doc_host = https://%(user)s.pages.gitlab.%(company_name)s.com/
- git_url = https://gitlab.%(company_name)s.com/%(user)s/%(repo)s
- doc_baseurl = /%(repo)s</code></pre>
</section>
<section id="change-in-_quarto.yml" class="level3">
<h3 class="anchored" data-anchor-id="change-in-_quarto.yml">change in <code>_quarto.yml</code></h3>
<p>nothing to be done with nbdev &gt; v2.3.3</p>
</section>
<section id="create-.gitlab-ci.yml-buildpublish-documentation-push-to-artifactory" class="level3">
<h3 class="anchored" data-anchor-id="create-.gitlab-ci.yml-buildpublish-documentation-push-to-artifactory">create <code>.gitlab-ci.yml</code> –&gt; build/publish documentation, push to artifactory</h3>
<p>With gitlab you have a nice editor to edit pipelines (CI lint)</p>
<p>One way to debug is to insert <code>sleep xx</code> and then click debug.</p>
<p>You then have access to your docker image.</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb32-1"><span class="ex" style="color: null;">default:</span></span>
<span id="cb32-2">  <span class="ex" style="color: null;">image:</span> <span class="st" style="color: #20794D;">'docker.artifactory.michelin.com/michelin/hub/ubuntu20.04:bib-1.1'</span></span>
<span id="cb32-3">  <span class="ex" style="color: null;">tags:</span></span>
<span id="cb32-4">    <span class="ex" style="color: null;">-</span> k8s</span>
<span id="cb32-5">  <span class="ex" style="color: null;">interruptible:</span> true</span>
<span id="cb32-6">  <span class="ex" style="color: null;">retry:</span></span>
<span id="cb32-7">    <span class="ex" style="color: null;">max:</span> 2</span>
<span id="cb32-8">    <span class="ex" style="color: null;">when:</span></span>
<span id="cb32-9">      <span class="ex" style="color: null;">-</span> runner_system_failure</span>
<span id="cb32-10">      <span class="ex" style="color: null;">-</span> stuck_or_timeout_failure</span>
<span id="cb32-11"></span>
<span id="cb32-12"><span class="co" style="color: #5E5E5E;"># Functions that should be executed before the build script is run</span></span>
<span id="cb32-13"><span class="ex" style="color: null;">before_script:</span></span>
<span id="cb32-14">  <span class="ex" style="color: null;">-</span> apt <span class="at" style="color: #657422;">-y</span> install wget</span>
<span id="cb32-15">  <span class="ex" style="color: null;">-</span> wget <span class="st" style="color: #20794D;">"https://github.com/quarto-dev/quarto-cli/releases/download/v1.1.189/quarto-1.1.189-linux-amd64.deb"</span></span>
<span id="cb32-16">  <span class="ex" style="color: null;">-</span> dpkg <span class="at" style="color: #657422;">-i</span> quarto-1.1.189-linux-amd64.deb</span>
<span id="cb32-17">  <span class="ex" style="color: null;">-</span> apt <span class="at" style="color: #657422;">-y</span> install python3-pip</span>
<span id="cb32-18">  <span class="ex" style="color: null;">-</span> wget <span class="at" style="color: #657422;">--no-check-certificate</span> <span class="at" style="color: #657422;">--content-disposition</span> <span class="at" style="color: #657422;">-O</span> <span class="at" style="color: #657422;">-</span> https://raw.githubusercontent.com/castorfou/guillaume_blog/master/files/setup_wsl_08_pip.sh <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">bash</span></span>
<span id="cb32-19">  <span class="ex" style="color: null;">-</span> pip3 install nbdev</span>
<span id="cb32-20">  <span class="ex" style="color: null;">-</span> nbdev_install</span>
<span id="cb32-21"></span>
<span id="cb32-22"><span class="ex" style="color: null;">stages:</span></span>
<span id="cb32-23">  <span class="ex" style="color: null;">-</span> test</span>
<span id="cb32-24">  <span class="ex" style="color: null;">-</span> build_doc</span>
<span id="cb32-25">  <span class="ex" style="color: null;">-</span> build</span>
<span id="cb32-26">  <span class="ex" style="color: null;">-</span> deploy_artifactory</span>
<span id="cb32-27"></span>
<span id="cb32-28"><span class="ex" style="color: null;">tests:</span></span>
<span id="cb32-29">  <span class="ex" style="color: null;">stage:</span> test</span>
<span id="cb32-30">  <span class="ex" style="color: null;">script:</span></span>
<span id="cb32-31">    <span class="ex" style="color: null;">-</span> nbdev_test</span>
<span id="cb32-32"></span>
<span id="cb32-33"><span class="ex" style="color: null;">pages:</span></span>
<span id="cb32-34">  <span class="ex" style="color: null;">stage:</span> build_doc</span>
<span id="cb32-35">  <span class="ex" style="color: null;">script:</span></span>
<span id="cb32-36">    <span class="ex" style="color: null;">-</span> nbdev_docs</span>
<span id="cb32-37">  <span class="ex" style="color: null;">artifacts:</span></span>
<span id="cb32-38">    <span class="ex" style="color: null;">paths:</span></span>
<span id="cb32-39">      <span class="co" style="color: #5E5E5E;"># The folder that contains the files to be exposed at the Page URL</span></span>
<span id="cb32-40">      <span class="ex" style="color: null;">-</span> public</span>
<span id="cb32-41">  <span class="ex" style="color: null;">rules:</span></span>
<span id="cb32-42">    <span class="co" style="color: #5E5E5E;"># This ensures that only pushes to the default branch will trigger</span></span>
<span id="cb32-43">    <span class="co" style="color: #5E5E5E;"># a pages deploy</span></span>
<span id="cb32-44">    <span class="ex" style="color: null;">-</span> if: <span class="va" style="color: #111111;">$CI_COMMIT_REF_NAME</span> == <span class="va" style="color: #111111;">$CI_DEFAULT_BRANCH</span></span>
<span id="cb32-45"></span>
<span id="cb32-46"><span class="ex" style="color: null;">wheel:</span></span>
<span id="cb32-47">  <span class="ex" style="color: null;">stage:</span> build</span>
<span id="cb32-48">  <span class="ex" style="color: null;">script:</span></span>
<span id="cb32-49">    <span class="ex" style="color: null;">-</span> mkdir <span class="at" style="color: #657422;">-p</span> public</span>
<span id="cb32-50">    <span class="ex" style="color: null;">-</span> echo <span class="st" style="color: #20794D;">"Build wheel with python version </span><span class="kw" style="color: #003B4F;">`</span><span class="ex" style="color: null;">python3</span> <span class="at" style="color: #657422;">--version</span><span class="kw" style="color: #003B4F;">`</span><span class="st" style="color: #20794D;">:"</span></span>
<span id="cb32-51">    <span class="ex" style="color: null;">-</span> pip install <span class="at" style="color: #657422;">-U</span> setuptools wheel pydnx_packaging</span>
<span id="cb32-52">    <span class="ex" style="color: null;">-</span> pip install <span class="at" style="color: #657422;">-e</span> .</span>
<span id="cb32-53">    <span class="ex" style="color: null;">-</span> python3 setup.py bdist_wheel</span>
<span id="cb32-54">    <span class="ex" style="color: null;">-</span> mkdir <span class="at" style="color: #657422;">-p</span> packages <span class="kw" style="color: #003B4F;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;">mv</span> dist/<span class="pp" style="color: #AD0000;">*</span> packages/</span>
<span id="cb32-55">  <span class="ex" style="color: null;">artifacts:</span></span>
<span id="cb32-56">    <span class="ex" style="color: null;">when:</span> always</span>
<span id="cb32-57">    <span class="ex" style="color: null;">paths:</span></span>
<span id="cb32-58">      <span class="ex" style="color: null;">-</span> packages/</span>
<span id="cb32-59"></span>
<span id="cb32-60"><span class="ex" style="color: null;">publish:</span></span>
<span id="cb32-61">  <span class="ex" style="color: null;">stage:</span> deploy_artifactory</span>
<span id="cb32-62">  <span class="ex" style="color: null;">dependencies:</span></span>
<span id="cb32-63">    <span class="ex" style="color: null;">-</span> wheel</span>
<span id="cb32-64">  <span class="ex" style="color: null;">only:</span></span>
<span id="cb32-65">    <span class="ex" style="color: null;">-</span> tags</span>
<span id="cb32-66">  <span class="ex" style="color: null;">script:</span></span>
<span id="cb32-67">    <span class="co" style="color: #5E5E5E;"># create credential config file</span></span>
<span id="cb32-68">    <span class="ex" style="color: null;">-</span> <span class="op" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb32-69">      <span class="cf" style="color: #003B4F;">if</span> <span class="bu" style="color: null;">[</span> <span class="ot" style="color: #003B4F;">-f</span> <span class="st" style="color: #20794D;">'.pypirc'</span> <span class="bu" style="color: null;">]</span><span class="kw" style="color: #003B4F;">;</span> <span class="cf" style="color: #003B4F;">then</span></span>
<span id="cb32-70">        <span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"Information: .pypirc file is not mandatory anymore."</span> <span class="kw" style="color: #003B4F;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;">cp</span> .pypirc ~/</span>
<span id="cb32-71">      <span class="cf" style="color: #003B4F;">else</span></span>
<span id="cb32-72">        <span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"[distutils]</span></span>
<span id="cb32-73"><span class="st" style="color: #20794D;">        index-servers = local</span></span>
<span id="cb32-74"><span class="st" style="color: #20794D;">        [local]</span></span>
<span id="cb32-75"><span class="st" style="color: #20794D;">        repository: https://artifactory.michelin.com/api/pypi/pypi</span></span>
<span id="cb32-76"><span class="st" style="color: #20794D;">        username: fm00884</span></span>
<span id="cb32-77"><span class="st" style="color: #20794D;">        password: &lt;don't even think about it&gt;"</span> <span class="op" style="color: #5E5E5E;">&gt;</span> ~/.pypirc</span>
<span id="cb32-78">      <span class="cf" style="color: #003B4F;">fi</span></span>
<span id="cb32-79">    <span class="ex" style="color: null;">-</span> pip install <span class="at" style="color: #657422;">-U</span> twine</span>
<span id="cb32-80">    <span class="ex" style="color: null;">-</span> pip index versions nbdev_gitlab <span class="kw" style="color: #003B4F;">||</span> <span class="fu" style="color: #4758AB;">true</span></span>
<span id="cb32-81">    <span class="ex" style="color: null;">-</span> echo <span class="st" style="color: #20794D;">'If the "twine upload" command below failed with a 403 status code, please check that the version is not already uploaded on artifactory (see versions of nbdev_git above).'</span></span>
<span id="cb32-82">    <span class="ex" style="color: null;">-</span> twine upload <span class="at" style="color: #657422;">--verbose</span> <span class="at" style="color: #657422;">-r</span> local packages/<span class="pp" style="color: #AD0000;">*</span></span></code></pre></div>
</section>
<section id="commit-to-gitlab" class="level3">
<h3 class="anchored" data-anchor-id="commit-to-gitlab">commit to gitlab</h3>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb33-1"><span class="ex" style="color: null;">nbdev_prepare</span></span>
<span id="cb33-2"><span class="fu" style="color: #4758AB;">rm</span> <span class="at" style="color: #657422;">-rf</span> index_files</span>
<span id="cb33-3"><span class="ex" style="color: null;">nbdev_docs</span> <span class="co" style="color: #5E5E5E;">#optionnal if nbdev_preview was used</span></span>
<span id="cb33-4"><span class="ex" style="color: null;">nbdev_proc_nbs</span></span>
<span id="cb33-5"><span class="fu" style="color: #4758AB;">git</span> diff</span>
<span id="cb33-6"><span class="fu" style="color: #4758AB;">git</span> status</span>
<span id="cb33-7"><span class="fu" style="color: #4758AB;">git</span> add <span class="at" style="color: #657422;">-A</span></span>
<span id="cb33-8"><span class="fu" style="color: #4758AB;">git</span> commit <span class="at" style="color: #657422;">-am</span><span class="st" style="color: #20794D;">'&lt;proper comment&gt;'</span></span>
<span id="cb33-9"><span class="fu" style="color: #4758AB;">git</span> push</span></code></pre></div>
</section>
<section id="setup-online-documentation-badge" class="level3">
<h3 class="anchored" data-anchor-id="setup-online-documentation-badge">setup online-documentation badge</h3>
<p><img src="https://castorfou.github.io/posts/https:/img.shields.io/badge/-online_documentation-grey.svg" class="img-fluid"></p>
<p>From Settings &gt; General &gt; Badges</p>
<p>create a new entry <code>doc</code></p>
<p>Link: <code>https://janus.si-pages.michelin.com/nbdev_gitlab/</code></p>
<p>Badge image URL: <code>https://img.shields.io/badge/-online_documentation-grey.svg</code></p>
</section>
<section id="manual-way-create-a-new-version-tag-publication-to-artifactory" class="level3">
<h3 class="anchored" data-anchor-id="manual-way-create-a-new-version-tag-publication-to-artifactory">[manual way] create a new version, tag, publication to artifactory</h3>
<p>To summarize, here is the publishing process</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb34-1"><span class="ex" style="color: null;">nbdev_bump_version</span></span>
<span id="cb34-2"><span class="fu" style="color: #4758AB;">git</span> add <span class="at" style="color: #657422;">-A</span></span>
<span id="cb34-3"><span class="fu" style="color: #4758AB;">git</span> commit <span class="at" style="color: #657422;">-am</span><span class="st" style="color: #20794D;">'&lt;my tag changelog&gt;'</span></span>
<span id="cb34-4"><span class="fu" style="color: #4758AB;">git</span> tag <span class="at" style="color: #657422;">-a</span> 0.0.3 <span class="at" style="color: #657422;">-m</span> <span class="st" style="color: #20794D;">"&lt;my tag changelog&gt;"</span></span>
<span id="cb34-5"><span class="fu" style="color: #4758AB;">git</span> push origin 0.0.3 </span></code></pre></div>
<p>And it will be published at: <a href="https://artifactory.michelin.com/ui/packages/pypi:%2F%2Fjanus-tools?name=janus-tools&amp;type=packages">artifactory janus-tools package</a></p>
<p>to automatically reuse tag name from settings.ini, just use (script way) create a new version, tag, publication to artifactory</p>
<p><code>nbdev_bump_version</code> increases version number (in settings.ini and <strong>ini</strong>.py)</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb35-1"><span class="ex" style="color: null;">$</span> nbdev_bump_version</span>
<span id="cb35-2"><span class="ex" style="color: null;">Old</span> version: 0.0.2</span>
<span id="cb35-3"><span class="ex" style="color: null;">New</span> version: 0.0.3</span></code></pre></div>
<p>which is modifying 2 files:</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb36-1"><span class="ex" style="color: null;">$</span> git diff</span>
<span id="cb36-2"><span class="fu" style="color: #4758AB;">diff</span> <span class="at" style="color: #657422;">--git</span> a/nbdev_gitlab/__init__.py b/nbdev_gitlab/__init__.py</span>
<span id="cb36-3"><span class="ex" style="color: null;">-__version__</span> = <span class="st" style="color: #20794D;">"0.0.2"</span></span>
<span id="cb36-4"><span class="ex" style="color: null;">+__version__</span> = <span class="st" style="color: #20794D;">"0.0.3"</span></span>
<span id="cb36-5"><span class="fu" style="color: #4758AB;">diff</span> <span class="at" style="color: #657422;">--git</span> a/settings.ini b/settings.ini</span>
<span id="cb36-6"><span class="ex" style="color: null;">-version</span> = 0.0.2</span>
<span id="cb36-7"><span class="ex" style="color: null;">+version</span> = 0.0.3</span></code></pre></div>
</section>
<section id="script-way-create-a-new-version-tag-publication-to-artifactory" class="level3">
<h3 class="anchored" data-anchor-id="script-way-create-a-new-version-tag-publication-to-artifactory">[script way] create a new version, tag, publication to artifactory</h3>
<p>just call <code>push_tag.sh</code>, it will increase version (calling nbdev_bump_version), and create/push tag with this version and last git commit</p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-09-27T07:06:09.426148Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-09-27T07:06:09.425342Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-09-27T07:06:09.540285Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-09-27T07:06:09.539373Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-09-27T07:06:09.426121Z&quot;}" data-tags="[]" data-execution_count="2">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>files<span class="op" style="color: #5E5E5E;">/</span>push_tag.sh</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>#!/bin/bash
nbdev_bump_version
LAST_GIT_COMMENT=`git log -1 --pretty=%B`
VERSION_TO_TAG=`grep "version " settings.ini | cut -d '=' -f 2`

echo "Tag: $VERSION_TO_TAG - Comment: $LAST_GIT_COMMENT"

git add -A
git commit -am"$LAST_GIT_COMMENT"
git tag -a $VERSION_TO_TAG -m "$LAST_GIT_COMMENT"
git push origin $VERSION_TO_TAG</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="directives-from-quarto-and-nbdev" class="level1">
<h1><code>#|</code> directives from quarto and nbdev</h1>
<p>This is detailed at <a href="https://nbdev.fast.ai/explanations/directives.html" class="uri">https://nbdev.fast.ai/explanations/directives.html</a></p>
<section id="hide" class="level2">
<h2 class="anchored" data-anchor-id="hide"><code>#| hide</code></h2>
<p>not exported, not displayed in doc, executed in jupyter</p>
<p>Some examples:</p>
<section id="imports" class="level3">
<h3 class="anchored" data-anchor-id="imports">imports</h3>
<p>imports that I need for development that I don’t need in my lib</p>
<p>here it will be used later in internal tests (and will be executed with nbdev_test)</p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="co" style="color: #5E5E5E;">#| hide</span></span>
<span id="cb39-2"><span class="co" style="color: #5E5E5E;">#not exported, not displayed in doc, executed in jupyter</span></span>
<span id="cb39-3"><span class="co" style="color: #5E5E5E;"># I need this to develop but not to be found in my lib (actuelly my lib should not depend on nbdev)</span></span>
<span id="cb39-4"><span class="im" style="color: #00769E;">from</span> nbdev.showdoc <span class="im" style="color: #00769E;">import</span> <span class="op" style="color: #5E5E5E;">*</span></span>
<span id="cb39-5"><span class="im" style="color: #00769E;">import</span> tempfile</span>
<span id="cb39-6"><span class="im" style="color: #00769E;">from</span> sklearn.datasets <span class="im" style="color: #00769E;">import</span> load_diabetes</span></code></pre></div>
</section>
<section id="tests" class="level3">
<h3 class="anchored" data-anchor-id="tests">tests</h3>
<p>some internal tests that I don’t wand in doc</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="co" style="color: #5E5E5E;">#| hide</span></span>
<span id="cb40-2"><span class="cf" style="color: #003B4F;">with</span> tempfile.TemporaryDirectory(<span class="bu" style="color: null;">dir</span><span class="op" style="color: #5E5E5E;">=</span>root_data) <span class="im" style="color: #00769E;">as</span> tmpdirname:</span>
<span id="cb40-3">    temp_mixpath <span class="op" style="color: #5E5E5E;">=</span> MixPath(tmpdirname.split(os.sep)[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>])</span>
<span id="cb40-4">    <span class="bu" style="color: null;">print</span>(temp_mixpath, temp_mixpath.OBF_DIRECTORY)</span></code></pre></div>
<p>or</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="co" style="color: #5E5E5E;">#| hide</span></span>
<span id="cb41-2">test_eq(ml25625,MixPath(<span class="st" style="color: #20794D;">'25625'</span>))</span></code></pre></div>
</section>
<section id="toc" class="level3">
<h3 class="anchored" data-anchor-id="toc">toc</h3>
<p>some markdown that will appear in jupyter’s TOC</p>
<p>but not in doc because I have some export after that</p>
<pre class="text"><code>#| hide

### DatasetObf.get_dataset_initial_filtré</code></pre>
</section>
<section id="export-module" class="level3">
<h3 class="anchored" data-anchor-id="export-module">export module</h3>
<p>at the end of notebook</p>
<p>here to have an entry in TOC</p>
<pre class="text"><code>#| hide
# Export module</code></pre>
<p>and here to export notebook code when <code>restart kernel and run all</code></p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="co" style="color: #5E5E5E;">#| hide</span></span>
<span id="cb44-2"><span class="im" style="color: #00769E;">import</span> nbdev<span class="op" style="color: #5E5E5E;">;</span> nbdev.nbdev_export()</span></code></pre></div>
</section>
</section>
<section id="exporti---used-in-combination-of-patch-and-show_doc" class="level2">
<h2 class="anchored" data-anchor-id="exporti---used-in-combination-of-patch-and-show_doc"><code>#| exporti</code> - used in combination of <code>@patch</code> and <code>show_doc</code></h2>
<p>exporti will export code but not doc - I use show_doc below</p>
<p>without exporti I would have 2 entries in doc</p>
<p>I prefer it like that to have a toc entry in jupyter</p>
<p>And only with methods from a class. (otherwise it won’t be exposed)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/2022-09-12-nbdev2_files/figure-html/611c8437-1-9296aaf7-8d34-481b-b18a-d9949d99faad.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">image.png</figcaption><p></p>
</figure>
</div>
</section>
</section>
<section id="nbdev-v2.3" class="level1">
<h1>nbdev v2.3</h1>
<p>New release 2.3 made Sept-14</p>
<p><a href="https://forums.fast.ai/t/upcoming-changes-in-v2-3-edit-now-released/98905" class="uri">https://forums.fast.ai/t/upcoming-changes-in-v2-3-edit-now-released/98905</a></p>
<p>To migrate:</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb45-1"><span class="ex" style="color: null;">pip</span> install <span class="at" style="color: #657422;">-U</span> nbdev</span>
<span id="cb45-2"><span class="fu" style="color: #4758AB;">rm</span> _quarto.yml</span>
<span id="cb45-3"><span class="ex" style="color: null;">nbdev_new</span></span>
<span id="cb45-4"><span class="co" style="color: #5E5E5E;"># reintegrate entries in settings.ini that could have been changed such as requirements, dev_requirements, clean_ids</span></span></code></pre></div>
</section>
<section id="nbdev-v2.3.7" class="level1">
<h1>nbdev v2.3.7</h1>
<p>changelog: <a href="https://github.com/fastai/nbdev/releases/tag/2.3.7" class="uri">https://github.com/fastai/nbdev/releases/tag/2.3.7</a></p>
<p>applying these changes: - recursive = True - notebooks in nbs folder - not understood what nbdev_proc_nbs is compared to nbdev_docs</p>
<p>To move notebooks to nbs:</p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb46-1"><span class="fu" style="color: #4758AB;">mv</span> <span class="pp" style="color: #AD0000;">*</span>.ipynb nbs/</span>
<span id="cb46-2"><span class="fu" style="color: #4758AB;">mv</span> _quarto.yml nbs/</span>
<span id="cb46-3"><span class="fu" style="color: #4758AB;">mv</span> styles.css nbs/</span></code></pre></div>
</section>
<section id="open-questions" class="level1">
<h1>Open questions</h1>
<section id="fixed-nbdev_clean-fails" class="level2">
<h2 class="anchored" data-anchor-id="fixed-nbdev_clean-fails">[fixed] nbdev_clean fails</h2>
<p><a href="https://forums.fast.ai/t/nbdev-clean-fails-cryptically/98784/13" class="uri">https://forums.fast.ai/t/nbdev-clean-fails-cryptically/98784/13</a></p>
<p>Solution: update <code>fastcore</code> to version &gt; 1.2.5</p>
</section>
<section id="fixed-nbdev_prepare-typeerror-exception-when-parsing-pycaret-import" class="level2">
<h2 class="anchored" data-anchor-id="fixed-nbdev_prepare-typeerror-exception-when-parsing-pycaret-import">[fixed] nbdev_prepare TypeError exception when parsing pycaret import</h2>
<p>as explained in <a href="https://github.com/fastai/nbdev/issues/1150" class="uri">https://github.com/fastai/nbdev/issues/1150</a></p>
<p>Seem has fixed it. Culprit was in execnb. It will be integrated in release 0.1.5. Meanwhile I can fix it by running <code>pip install git+https://github.com/fastai/execnb.git</code></p>
<p>(for example in .gitlab-ci.yml)</p>


</section>
</section>

 ]]></description>
  <category>nbdev</category>
  <category>jupyter</category>
  <category>fastai</category>
  <guid>https://castorfou.github.io/posts/2022-09-12-nbdev2.html</guid>
  <pubDate>Mon, 12 Sep 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/posts/images/icons/fastai.png" medium="image" type="image/png"/>
</item>
<item>
  <title>SSL: CERTIFICATE_VERIFY_FAILED</title>
  <link>https://castorfou.github.io/posts/2022-09-06-ssl-certificate_verify_failed.html</link>
  <description><![CDATA[ 




<section id="description-of-the-problem" class="level1">
<h1>Description of the problem</h1>
<p>From time to time when using network function, I have this kind of errors:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">Traceback (most recent call last):</span>
<span id="cb1-2">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/urllib/request.py"</span>, line <span class="dv" style="color: #AD0000;">1346</span>, <span class="kw" style="color: #003B4F;">in</span> do_open</span>
<span id="cb1-3">    h.request(req.get_method(), req.selector, req.data, headers,</span>
<span id="cb1-4">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py"</span>, line <span class="dv" style="color: #AD0000;">1285</span>, <span class="kw" style="color: #003B4F;">in</span> request</span>
<span id="cb1-5">    <span class="va" style="color: #111111;">self</span>._send_request(method, url, body, headers, encode_chunked)</span>
<span id="cb1-6">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py"</span>, line <span class="dv" style="color: #AD0000;">1331</span>, <span class="kw" style="color: #003B4F;">in</span> _send_request</span>
<span id="cb1-7">    <span class="va" style="color: #111111;">self</span>.endheaders(body, encode_chunked<span class="op" style="color: #5E5E5E;">=</span>encode_chunked)</span>
<span id="cb1-8">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py"</span>, line <span class="dv" style="color: #AD0000;">1280</span>, <span class="kw" style="color: #003B4F;">in</span> endheaders</span>
<span id="cb1-9">    <span class="va" style="color: #111111;">self</span>._send_output(message_body, encode_chunked<span class="op" style="color: #5E5E5E;">=</span>encode_chunked)</span>
<span id="cb1-10">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py"</span>, line <span class="dv" style="color: #AD0000;">1040</span>, <span class="kw" style="color: #003B4F;">in</span> _send_output</span>
<span id="cb1-11">    <span class="va" style="color: #111111;">self</span>.send(msg)</span>
<span id="cb1-12">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py"</span>, line <span class="dv" style="color: #AD0000;">980</span>, <span class="kw" style="color: #003B4F;">in</span> send</span>
<span id="cb1-13">    <span class="va" style="color: #111111;">self</span>.<span class="ex" style="color: null;">connect</span>()</span>
<span id="cb1-14">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py"</span>, line <span class="dv" style="color: #AD0000;">1454</span>, <span class="kw" style="color: #003B4F;">in</span> <span class="ex" style="color: null;">connect</span></span>
<span id="cb1-15">    <span class="va" style="color: #111111;">self</span>.sock <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._context.wrap_socket(<span class="va" style="color: #111111;">self</span>.sock,</span>
<span id="cb1-16">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/ssl.py"</span>, line <span class="dv" style="color: #AD0000;">501</span>, <span class="kw" style="color: #003B4F;">in</span> wrap_socket</span>
<span id="cb1-17">    <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.sslsocket_class._create(</span>
<span id="cb1-18">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/ssl.py"</span>, line <span class="dv" style="color: #AD0000;">1041</span>, <span class="kw" style="color: #003B4F;">in</span> _create</span>
<span id="cb1-19">    <span class="va" style="color: #111111;">self</span>.do_handshake()</span>
<span id="cb1-20">  File <span class="st" style="color: #20794D;">"/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/ssl.py"</span>, line <span class="dv" style="color: #AD0000;">1310</span>, <span class="kw" style="color: #003B4F;">in</span> do_handshake</span>
<span id="cb1-21">    <span class="va" style="color: #111111;">self</span>._sslobj.do_handshake()</span>
<span id="cb1-22">ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: <span class="va" style="color: #111111;">self</span> signed certificate <span class="kw" style="color: #003B4F;">in</span> certificate chain (_ssl.c:<span class="dv" style="color: #AD0000;">1129</span>)</span></code></pre></div>
</section>
<section id="context" class="level1">
<h1>Context</h1>
<p>My company uses some ssl interceptor and it has to be considered as a cert autority.</p>
</section>
<section id="solution" class="level1">
<h1>Solution</h1>
<p>from <a href="https://stackoverflow.com/questions/51390968/python-ssl-certificate-verify-error">https://stackoverflow.com/questions/51390968/python-ssl-certificate-verify-error</a></p>
<p>where certifcates are kept</p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-09-06T17:10:59.132720Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-09-06T17:10:59.132439Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-09-06T17:10:59.140296Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-09-06T17:10:59.139080Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-09-06T17:10:59.132698Z&quot;}" data-tags="[]" data-execution_count="25">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;">import</span> certifi</span>
<span id="cb2-2">pem_path <span class="op" style="color: #5E5E5E;">=</span> certifi.where() </span>
<span id="cb2-3">pem_path</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre><code>'/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/certifi/cacert.pem'</code></pre>
</div>
</div>
<p>get company certificates</p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-09-06T17:11:00.048400Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-09-06T17:11:00.048129Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-09-06T17:11:00.074663Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-09-06T17:11:00.072680Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-09-06T17:11:00.048374Z&quot;}" data-tags="[]" data-execution_count="26">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">tmpdir <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">!</span>mktemp <span class="op" style="color: #5E5E5E;">-</span>d</span>
<span id="cb4-2">tmpdir</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>['/tmp/tmp.0V7L0xu2a5']</code></pre>
</div>
</div>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-09-06T17:11:00.465177Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-09-06T17:11:00.464896Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-09-06T17:11:02.322799Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-09-06T17:11:02.319123Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-09-06T17:11:00.465143Z&quot;}" data-tags="[]" data-execution_count="27">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="op" style="color: #5E5E5E;">!</span>git clone git<span class="op" style="color: #5E5E5E;">@</span>gitlab.michelin.com:DEV<span class="op" style="color: #5E5E5E;">/</span>bib<span class="op" style="color: #5E5E5E;">-</span>certificates.git {tmpdir[<span class="dv" style="color: #AD0000;">0</span>]}</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Cloning into '/tmp/tmp.0V7L0xu2a5'...
remote: Enumerating objects: 87, done.
remote: Total 87 (delta 0), reused 0 (delta 0), pack-reused 87
Receiving objects: 100% (87/87), 78.90 KiB | 1.55 MiB/s, done.
Resolving deltas: 100% (26/26), done.</code></pre>
</div>
</div>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-09-06T17:18:44.823212Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-09-06T17:18:44.822955Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-09-06T17:18:44.949535Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-09-06T17:18:44.948154Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-09-06T17:18:44.823191Z&quot;}" data-tags="[]" data-execution_count="41">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="op" style="color: #5E5E5E;">!</span>ls <span class="op" style="color: #5E5E5E;">-</span>l {tmpdir[<span class="dv" style="color: #AD0000;">0</span>]}<span class="op" style="color: #5E5E5E;">/*</span>trust<span class="op" style="color: #5E5E5E;">-</span>ca.pem</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>-rw-r--r-- 1 guillaume guillaume 1606 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_aze-cn-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1606 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_rnh-ac-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1606 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_rnh-eu-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1606 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_rnh-na-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1602 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_sase-mob-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1602 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_sase-net-sslfwd-trust-ca.pem</code></pre>
</div>
</div>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-09-06T17:17:11.556937Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-09-06T17:17:11.556645Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-09-06T17:17:12.314653Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-09-06T17:17:12.313305Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-09-06T17:17:11.556917Z&quot;}" data-tags="[]" data-execution_count="37">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;">import</span> os</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="cf" style="color: #003B4F;">for</span> filename <span class="kw" style="color: #003B4F;">in</span> os.listdir(tmpdir[<span class="dv" style="color: #AD0000;">0</span>]):</span>
<span id="cb10-4">    <span class="cf" style="color: #003B4F;">if</span> filename.endswith(<span class="st" style="color: #20794D;">"trust-ca.pem"</span>): </span>
<span id="cb10-5">         <span class="co" style="color: #5E5E5E;"># print(os.path.join(directory, filename))</span></span>
<span id="cb10-6">        <span class="op" style="color: #5E5E5E;">!</span>cat {os.path.join(tmpdir[<span class="dv" style="color: #AD0000;">0</span>], filename)} <span class="op" style="color: #5E5E5E;">&gt;&gt;</span> {pem_path}</span>
<span id="cb10-7">        <span class="cf" style="color: #003B4F;">continue</span></span>
<span id="cb10-8">    <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb10-9">        <span class="cf" style="color: #003B4F;">continue</span></span></code></pre></div>
</div>
</section>
<section id="validate-it-works" class="level1">
<h1>Validate it works</h1>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-09-06T17:17:17.881109Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-09-06T17:17:17.880802Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-09-06T17:17:18.656236Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-09-06T17:17:18.655110Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-09-06T17:17:17.881087Z&quot;}" data-tags="[]" data-execution_count="38">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;">import</span> urllib.request</span>
<span id="cb11-2"><span class="cf" style="color: #003B4F;">with</span> urllib.request.urlopen(<span class="st" style="color: #20794D;">'http://python.org/'</span>, cafile<span class="op" style="color: #5E5E5E;">=</span>certifi.where()) <span class="im" style="color: #00769E;">as</span> response:</span>
<span id="cb11-3">   html <span class="op" style="color: #5E5E5E;">=</span> response.read()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>/tmp/ipykernel_2003/2808005746.py:2: DeprecationWarning: cafile, capath and cadefault are deprecated, use a custom context instead.
  with urllib.request.urlopen('http://python.org/', cafile=certifi.where()) as response:</code></pre>
</div>
</div>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-09-06T17:18:26.333707Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-09-06T17:18:26.333372Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-09-06T17:18:26.342020Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-09-06T17:18:26.341052Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-09-06T17:18:26.333686Z&quot;}" data-tags="[]" data-execution_count="40">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">html[:<span class="dv" style="color: #AD0000;">100</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="40">
<pre><code>b'&lt;!doctype html&gt;\n&lt;!--[if lt IE 7]&gt;   &lt;html class="no-js ie6 lt-ie7 lt-ie8 lt-ie9"&gt;   &lt;![endif]--&gt;\n&lt;!-'</code></pre>
</div>
</div>
<p>and from a command-line</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="bu" style="color: null;">export</span> <span class="va" style="color: #111111;">SSL_CERT_FILE</span><span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/certifi/cacert.pem'</span></span>
<span id="cb15-2"><span class="ex" style="color: null;">nbdev_new</span></span></code></pre></div>
</section>
<section id="integration-in-wsl2" class="level1">
<h1>Integration in WSL2</h1>
<p>I will modify SSL cert of my (base) environment.</p>
<p>and add export <code>SSL_CERT_FILE</code> in <code>.bashrc</code></p>
<p>I have made the modification at <a href="../posts/2022-04-25-install ubuntu 22.04 on WSL.html">install ubuntu 22.04 on WSL</a></p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-10-20T06:57:10.053581Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-10-20T06:57:10.053107Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-10-20T06:57:10.224068Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-10-20T06:57:10.223292Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-10-20T06:57:10.053533Z&quot;}" data-execution_count="1">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="op" style="color: #5E5E5E;">!</span>cat ..<span class="op" style="color: #5E5E5E;">/</span>files<span class="op" style="color: #5E5E5E;">/</span>setup_wsl_02_install_python_conda_part3.sh</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>echo "configure SSL cert v2"

conda deactivate
pip install -U certifi
export SSL_CERT_FILE=`python -c 'import certifi;print(certifi.where())'`

export TMPDIR=`mktemp -d`
git clone git@gitlab.michelin.com:DEV/bib-certificates.git $TMPDIR
cd $TMPDIR
cat *trust-ca.pem &gt;&gt; $SSL_CERT_FILE

tee -a ~/.bashrc &lt;&lt; EOF
export SSL_CERT_FILE=$SSL_CERT_FILE
EOF

if [ -e "/.cfg" ]; then
        config='/usr/bin/git --git-dir=/.cfg/ --work-tree=/'
        $config add ~/.bashrc
        $config commit -m'export certificates for commandline'
        $config push        
fi</code></pre>
</div>
</div>
</section>
<section id="to-be-reexecuted-after-certifi-update" class="level1">
<h1>To be (re)executed after certifi update</h1>
<p>Of course each time certifi is being updated, we have to re-run this process.</p>
<p>Here is a script that could be run each time we have the same problem:</p>
<div class="cell" data-execution="{&quot;iopub.execute_input&quot;:&quot;2022-12-12T09:05:48.082851Z&quot;,&quot;iopub.status.busy&quot;:&quot;2022-12-12T09:05:48.082088Z&quot;,&quot;iopub.status.idle&quot;:&quot;2022-12-12T09:05:48.199661Z&quot;,&quot;shell.execute_reply&quot;:&quot;2022-12-12T09:05:48.198475Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2022-12-12T09:05:48.082804Z&quot;}" data-execution_count="1">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="op" style="color: #5E5E5E;">!</span>cat <span class="op" style="color: #5E5E5E;">/</span>home<span class="op" style="color: #5E5E5E;">/</span>guillaume<span class="op" style="color: #5E5E5E;">/</span>_conda_env<span class="op" style="color: #5E5E5E;">/</span>update_SSL.sh</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>#!/bin/bash
conda deactivate
pip list|grep certifi
pip install -U certifi
pip list|grep certifi
export SSL_CERT_FILE=`python -c 'import certifi;print(certifi.where())'`

export TMPDIR=`mktemp -d`
git clone git@gitlab.michelin.com:DEV/bib-certificates.git $TMPDIR
cd $TMPDIR
cat *trust-ca.pem &gt;&gt; $SSL_CERT_FILE</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>jupyter</category>
  <guid>https://castorfou.github.io/posts/2022-09-06-ssl-certificate_verify_failed.html</guid>
  <pubDate>Tue, 06 Sep 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/posts/images/icons/jupyter.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Logbook for September 22</title>
  <link>https://castorfou.github.io/posts/2022-09-01-logbook-September-22.html</link>
  <description><![CDATA[ 




<section id="week-36---september-22" class="level2">
<h2 class="anchored" data-anchor-id="week-36---september-22">Week 36 - September 22</h2>
<p><strong>Monday 9/5</strong></p>
<ul>
<li>Start with fastai courses version <a href="https://course.fast.ai/">2022</a>. Video of <a href="https://www.youtube.com/watch?v=8SF_h3xF3cE">Lesson 1</a></li>
</ul>
<p><strong>Tuesday 9/6</strong></p>
<p>Keep backups on an external drive to upgrade PC. Using freefilesync.</p>
<ul>
<li>backup files</li>
<li>sbox</li>
<li>git (check with clustergit)</li>
<li>wsl</li>
</ul>
<blockquote class="blockquote">
<p>from <a href="https://www.virtualizationhowto.com/2021/01/wsl2-backup-and-restore-images-using-import-and-export/">WSL2 Backup and Restore Images using Import and Export</a></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># from PowerShell</span></span>
<span id="cb1-2"><span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">--list</span></span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;">&gt;</span> Ubuntu <span class="kw" style="color: #003B4F;">(</span><span class="ex" style="color: null;">par</span> défaut<span class="kw" style="color: #003B4F;">)</span></span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;">&gt;</span> ubuntu-docker</span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;">&gt;</span> ubuntu-18.04</span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;">&gt;</span> ubuntu-22.04</span>
<span id="cb1-7"><span class="op" style="color: #5E5E5E;">&gt;</span> wsl-vpnkit</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">--shutdown</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="ex" style="color: null;">wsl</span> <span class="at" style="color: #657422;">--export</span> <span class="op" style="color: #5E5E5E;">&lt;</span>Image Name<span class="op" style="color: #5E5E5E;">&gt;</span> <span class="op" style="color: #5E5E5E;">&lt;</span>Export location file name.tar<span class="op" style="color: #5E5E5E;">&gt;</span></span></code></pre></div>
</blockquote>
<ul>
<li>installed apps</li>
</ul>
<p>wsl2, prtscr, vscode, jdiskreport (centre logiciel), accessdatabasenginex64, driver nvidia, freefilesync (centre logiciel), notepad++ (centre logiciel), keepass (centre logiciel), zotero (centre logiciel), Windows Terminal, barrier, GWSL, typora,</p>
<ul>
<li>version windows - 21H2 19044.1889</li>
<li>tree structure</li>
</ul>
<pre class="cmd"><code>D:\&gt; tree &gt; e:\tree_structure.txt
D:\&gt; xcopy d: e:\t /t /s</code></pre>
<p><strong>Wednesday 9/7</strong></p>
<p>From time to time when running screen from WSL I have the following error:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;">$</span> screen <span class="at" style="color: #657422;">-dR</span></span>
<span id="cb3-2"><span class="ex" style="color: null;">Cannot</span> make directory <span class="st" style="color: #20794D;">'/run/screen'</span>: Permission denied</span></code></pre></div>
<p>then one can run</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;">sudo</span> /etc/init.d/screen-cleanup start</span></code></pre></div>
<p><strong>Thurdsay 9/8</strong></p>
<p>Restore backups on this new PC and without administrator rights.</p>
<p>Install of wsl2 following <a href="https://dev.michelin.com/wsl2/fundamentals">corporate instructions</a></p>
</section>
<section id="week-37---september-22" class="level2">
<h2 class="anchored" data-anchor-id="week-37---september-22">Week 37 - September 22</h2>
<p><strong>Thursday 9/15</strong><br>
Played a lot with <a href="../posts/2022-09-12-nbdev2.html">nbdev2</a>. Most thinks work now with gitlab. That’s great</p>
<p><strong>Friday 9/16</strong> Hamel just announced that <a href="https://forums.fast.ai/t/fastpages-deprecating-fastpages-in-favor-of-quarto/99095">fastpages will be discontinued</a> as nbdev+quarto is now a valid option to provide a blogging platform. He has written a <a href="https://nbdev.fast.ai/tutorials/blogging.html">migration guide</a> for that. Will have to follow that.</p>
</section>
<section id="week-38---september-22" class="level2">
<h2 class="anchored" data-anchor-id="week-38---september-22">Week 38 - September 22</h2>
<p><strong>Thursday 9/22</strong> I have completed migration of my blog to quarto as explaine in <a href="../posts/2022-09-16-migrate blog from nbdev to quarto.html">Blog - migrate to quarto</a></p>
<p><strong>Friday 9/23</strong> Activate <a href="../posts/2022-07-21-jupyter-export-lab-as-py.html">Auto export python code from jupyter lab</a> Remove <a href="../posts/2021-01-05-jupyter-export-notebook-as-py.html">previous hack</a> (jupyter_notebook_config.py)</p>
</section>
<section id="week-39---september-22" class="level2">
<h2 class="anchored" data-anchor-id="week-39---september-22">Week 39 - September 22</h2>
<p><strong>Monday 9/26</strong> Just tested way to install last (untagged) version of a lib from gitlab with</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;">pip</span> uninstall janus-tools</span>
<span id="cb5-2"><span class="ex" style="color: null;">pip</span> install git+https://gitlab.michelin.com/janus/janus_tools.git</span></code></pre></div>


</section>

 ]]></description>
  <category>logbook</category>
  <guid>https://castorfou.github.io/posts/2022-09-01-logbook-September-22.html</guid>
  <pubDate>Thu, 01 Sep 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/posts/images/logbook.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>EvalAI and gitlab</title>
  <link>https://castorfou.github.io/posts/2022-07-29-evalai and gitlab.html</link>
  <description><![CDATA[ 




<section id="source-of-inspiration" class="level2">
<h2 class="anchored" data-anchor-id="source-of-inspiration">source of inspiration</h2>
<p>Deploy evalai docker images by <a href="../guillaume_blog/blog/logbook-July-22.html#week-30---july-22">copying from another PC</a></p>
<p><a href="https://evalai.readthedocs.io/en/latest/host_challenge.html#host-challenge-using-github">Host challenge using github</a></p>
</section>
<section id="run-docker-from-wsl" class="level2">
<h2 class="anchored" data-anchor-id="run-docker-from-wsl">Run docker from wsl</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;">cd</span> ~/evalai</span>
<span id="cb1-2"><span class="ex" style="color: null;">docker-compose</span> up</span></code></pre></div>
<p>In case of errors:</p>
<ul>
<li><code>ERROR: for nodejs UnixHTTPConnectionPool(host='localhost', port=None): Read timed out.</code> Restart docker service and rerun evalai: <code>sudo service docker restart</code></li>
</ul>
</section>
<section id="host-challenge-using-gitlab" class="level1">
<h1>Host challenge using gitlab</h1>
<section id="create-evalai-starters-project-in-gitlab" class="level3">
<h3 class="anchored" data-anchor-id="create-evalai-starters-project-in-gitlab">Create EvalAI-Starters project in gitlab</h3>
<p>This project is hosted at <a href="https://github.com/Cloud-CV/EvalAI-Starters">github</a></p>
<p>Create a blank project at <a href="https://gitlab.michelin.com/janus/EvalAI-Starters">gitlab</a></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;">#from a WSL image</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">git</span> clone https://github.com/Cloud-CV/EvalAI-Starters.git</span>
<span id="cb2-3"><span class="bu" style="color: null;">cd</span> EvalAI-Starters</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;">git</span> remote rename origin origin-github</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;">git</span> remote add origin-gitlab git@gitlab.michelin.com:janus/EvalAI-Starters.git</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;">git</span> push <span class="at" style="color: #657422;">-u</span> origin-gitlab <span class="at" style="color: #657422;">--all</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;">git</span> push <span class="at" style="color: #657422;">-u</span> origin-gitlab <span class="at" style="color: #657422;">--tags</span></span></code></pre></div>
</section>
<section id="create-challenge-using-gitlab" class="level3">
<h3 class="anchored" data-anchor-id="create-challenge-using-gitlab">Create challenge using gitlab</h3>
<ol type="1">
<li>create a repo <code>test_evalai</code>for challenge by importing from github</li>
</ol>
<p><del>Create new project &gt; Create from template &gt; Sample GitLab Project &gt; Use template</del></p>
<p>from github: clone evalai-starters</p>
<p>from gitlab: create new project &gt; import project &gt; GitHub &gt; integrate token &gt;</p>
<p>select EvalAI-Starters and named it janus/ test_evalai</p>
<p>import</p>
<p>go to project</p>
<ol start="2" type="1">
<li>create project access token</li>
</ol>
<p>repo test_evalai &gt; settings &gt; Access Tokens</p>
<p>Token name : evalai_user_auth_token</p>
<p>Create project access token</p>
<p>(glpat-w8GWL4WqqzgfQsCLRaMZ)</p>
<ol start="3" type="1">
<li>setup host configuration</li>
</ol>
<p>login as host (for the moment: host/password)</p>
<p>go to profile page, get your auth (eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY5MDYyMDYxMywianRpIjoiOWVkOTU2YmU2ZTJkNDNmOWI3Y2M0YTZhOGQ1ODY3ZjIiLCJ1c2VyX2lkIjoyfQ.bO9wp7r17uct4KJbt9hixsOT4nzYAUr-wUZR6PHI0jw)</p>
<p>create a new team Host teams &gt; Create a new team</p>
<p>Team Name: janus</p>
<p>ID is 34</p>
<p>and evalai host url is <a href="http://localhost:8888/" class="uri">http://localhost:8888/</a></p>
<ol start="4" type="1">
<li>setup automated update push</li>
</ol>
<p>Create a branch with name <code>challenge</code> in the forked repository from the <code>master</code> branch. Note: Only changes in <code>challenge</code> branch will be synchronized with challenge on EvalAI.</p>
<p>Add <code>evalai_user_auth_token</code> and <code>host_team_pk</code> in <code>github/host_config.json</code>.</p>
<ol start="5" type="1">
<li>update challenge details</li>
</ol>
<p>Read <a href="https://evalai.readthedocs.io/en/latest/configuration.html">EvalAI challenge creation documentation</a> to know more about how you want to structure your challenge. Once you are ready, start making changes in the yaml file, HTML templates, evaluation script according to your need.</p>
<ol start="6" type="1">
<li>push changes to the challenge</li>
</ol>
<p>Here I have to move from github actions to gitlab jobs.</p>
<p>Let’s locally clone this repo</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;">git</span> clone git@gitlab.michelin.com:janus/test_evalai.git</span>
<span id="cb3-2"><span class="bu" style="color: null;">cd</span> test_evalai</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;">git</span> branch <span class="at" style="color: #657422;">-a</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;">git</span> checkout challenge</span></code></pre></div>
<ul>
<li>Watch <a href="https://www.youtube.com/watch?v=kTNfi5z6Uvk&amp;t=1093s">First time GitLab &amp; CI/CD</a>. This includes a quick introduction to GitLab, the first steps with CI/CD, building a Go project, running tests, using the CI/CD pipeline editor, detecting secrets and security vulnerabilities and offers more exercises for asynchronous practice.</li>
<li>Watch <a href="https://www.youtube.com/watch?v=l5705U8s_nQ&amp;t=358s">Intro to GitLab CI</a>. This workshop uses the Web IDE to quickly get going with building source code using CI/CD, and run unit tests.</li>
</ul>
<p>1st step is to try with a very simple <code>.gitlab-ci.yml</code> file. And use pipeline editor from gitlab to edit it.</p>
<p>Some questions or errors:</p>
<ul>
<li>I have been waiting 1 hour for my job to run, and it was simply pending because I had no tags entry and runners on our gitlab catch only tagged CI.</li>
<li>How to know which images are available in artifactory? Would like to use one with python pre-installed (with version 3.7.5)</li>
</ul>
<p>I am stuck when having to deal with github action context calls such as ${{ toJSON(github) }}’</p>


</section>
</section>

 ]]></description>
  <category>docker</category>
  <category>evalai</category>
  <category>gitlab</category>
  <category>wsl</category>
  <guid>https://castorfou.github.io/posts/2022-07-29-evalai and gitlab.html</guid>
  <pubDate>Fri, 29 Jul 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>install ubuntu 18.04 on WSL and then evalai</title>
  <link>https://castorfou.github.io/posts/2022-07-26-install ubuntu 18.04 on WSL.html</link>
  <description><![CDATA[ 




<section id="source-of-inspiration" class="level2">
<h2 class="anchored" data-anchor-id="source-of-inspiration">source of inspiration</h2>
<p><a href="../guillaume_blog/blog/install-ubuntu-22.04-on-WSL.html">install ubuntu 22.04 on WSL</a></p>
<p><a href="https://evalai.readthedocs.io/en/stable/setup.html#ubuntu-installation-instructions">install evalai in ubuntu</a></p>
</section>
<section id="installation-ubuntu-18.04" class="level2">
<h2 class="anchored" data-anchor-id="installation-ubuntu-18.04">Installation ubuntu-18.04</h2>
<section id="uninstall-image-if-needed" class="level3">
<h3 class="anchored" data-anchor-id="uninstall-image-if-needed">uninstall image (if needed)</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># wsl --unregister &lt;distroName&gt;</span></span>
<span id="cb1-2">wsl <span class="op" style="color: #5E5E5E;">--</span>unregister ubuntu<span class="op" style="color: #5E5E5E;">-</span>18<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">04</span></span></code></pre></div>
</section>
<section id="download-images" class="level3">
<h3 class="anchored" data-anchor-id="download-images">download images</h3>
<p>From <a href="https://cloud-images.ubuntu.com/bionic/current/">cloud images ubuntu</a> (cloud-images &gt; bionic&gt; current), now there are wsl images:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/posts/https:/www.windowscentral.com/sites/wpcentral.com/files/styles/larger/public/field/image/2022/01/ubuntu-cloud-images-website.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">ubuntu cloud images</figcaption><p></p>
</figure>
</div>
<p>I just have to download the last bionic (18.04) image <code>bionic-server-cloudimg-amd64-wsl.rootfs.tar.gz</code></p>
</section>
<section id="install-and-setup-from-powershell" class="level3">
<h3 class="anchored" data-anchor-id="install-and-setup-from-powershell">install and setup from powershell</h3>
<p>I have downloaded this ubuntu image to <code>D:\wsl\ubuntu-18.04\download</code></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="kw" style="color: #003B4F;">(</span><span class="ex" style="color: null;">base</span><span class="kw" style="color: #003B4F;">)</span> <span class="ex" style="color: null;">guillaume@LL11LPC0PQARQ:/mnt/d/wsl$</span> tree</span>
<span id="cb2-2"><span class="bu" style="color: null;">.</span></span>
<span id="cb2-3"><span class="ex" style="color: null;">├──</span> Ubuntu-20.04</span>
<span id="cb2-4"><span class="ex" style="color: null;">│&nbsp;&nbsp;</span> └── ext4.vhdx</span>
<span id="cb2-5"><span class="ex" style="color: null;">├──</span> Ubuntu-22.04</span>
<span id="cb2-6"><span class="ex" style="color: null;">│&nbsp;&nbsp;</span> ├── download</span>
<span id="cb2-7"><span class="ex" style="color: null;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; └── jammy-server-cloudimg-amd64-wsl.rootfs.tar.gz</span>
<span id="cb2-8"><span class="ex" style="color: null;">│&nbsp;&nbsp;</span> └── instance</span></code></pre></div>
<p>and my <code>ubuntu-18.04</code> instance will stand in <code>D:\wsl\ubuntu-18.04\instance</code></p>
<p>Install with this command from powershell</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># wsl --import &lt;distroname&gt; &lt;location of instance&gt; &lt;location of download&gt;</span></span>
<span id="cb3-2">wsl <span class="op" style="color: #5E5E5E;">--</span>import ubuntu<span class="op" style="color: #5E5E5E;">-</span>18<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">04</span> D<span class="op" style="color: #5E5E5E;">:</span>\wsl\ubuntu<span class="op" style="color: #5E5E5E;">-</span>18<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">04</span>\instance D<span class="op" style="color: #5E5E5E;">:</span>\wsl\ubuntu<span class="op" style="color: #5E5E5E;">-</span>18<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">04</span>\download\bionic<span class="op" style="color: #5E5E5E;">-</span>server<span class="op" style="color: #5E5E5E;">-</span>cloudimg<span class="op" style="color: #5E5E5E;">-</span>amd64<span class="op" style="color: #5E5E5E;">-</span>wsl<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">rootfs</span><span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">tar</span><span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">gz</span></span></code></pre></div>
<p>It takes 3-4 minutes to install. and should be visible in your wsl instances.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb4-1"> wsl <span class="op" style="color: #5E5E5E;">--</span>list <span class="op" style="color: #5E5E5E;">--</span>all <span class="op" style="color: #5E5E5E;">-</span>v</span>
<span id="cb4-2">  NAME            STATE           VERSION</span>
<span id="cb4-3">  ubuntu<span class="op" style="color: #5E5E5E;">-</span>22<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">04</span>    Stopped         2</span></code></pre></div>
<p>then to run it</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># wsl -d &lt;distroname&gt;</span></span>
<span id="cb5-2">wsl <span class="op" style="color: #5E5E5E;">-</span>d ubuntu<span class="op" style="color: #5E5E5E;">-</span>18<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">04</span></span></code></pre></div>
<p>or</p>
<section id="use-windows-terminal-as-a-launcher" class="level4">
<h4 class="anchored" data-anchor-id="use-windows-terminal-as-a-launcher">use Windows Terminal as a launcher</h4>
<p>Windows Terminal is a smart way to group all terminals (powershell, and all your wsl instances)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://castorfou.github.io/images/windows_terminal.jpg" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">windows terminal</figcaption><p></p>
</figure>
</div>
<p>It can be installed even with limited windows store access by clicking install in <a href="https://docs.microsoft.com/fr-fr/windows/terminal/install">Installer le Terminal Windows et commencer à le configurer</a></p>
<p>Automatically all wsl instances appear in Settings.</p>
</section>
</section>
</section>
<section id="automatic-setup" class="level2">
<h2 class="anchored" data-anchor-id="automatic-setup">Automatic setup</h2>
<p>copy these 2 <a href="https://github.com/castorfou/guillaume_blog/tree/master/files">scripts</a> in /root/ (given they are in <code>D:\wsl\ubuntu-18.04\download</code>)</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;">cp</span> /mnt/d/wsl/Ubuntu-18.04/download/setup_wsl_<span class="pp" style="color: #AD0000;">*</span> .</span></code></pre></div>
<p><code>setup_wsl_root.sh</code> <a href="../files/setup_wsl_root.sh">download</a></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"0. get username: "</span></span>
<span id="cb7-4"><span class="bu" style="color: null;">read</span> <span class="va" style="color: #111111;">user_name</span></span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="bu" style="color: null;">.</span> /etc/lsb-release</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="bu" style="color: null;">echo</span> Configuration for user [<span class="va" style="color: #111111;">$user_name</span>]</span>
<span id="cb7-9"><span class="bu" style="color: null;">echo</span> of distribution <span class="va" style="color: #111111;">$DISTRIB_CODENAME</span></span>
<span id="cb7-10"><span class="bu" style="color: null;">echo</span></span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"1. create user and add in sudo"</span></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;">#adduser --disabled-password --gecos "" $user_name</span></span>
<span id="cb7-14"><span class="ex" style="color: null;">adduser</span> <span class="at" style="color: #657422;">--gecos</span> <span class="st" style="color: #20794D;">""</span> <span class="va" style="color: #111111;">$user_name</span></span>
<span id="cb7-15"><span class="ex" style="color: null;">usermod</span> <span class="at" style="color: #657422;">-aG</span> sudo <span class="va" style="color: #111111;">$user_name</span></span>
<span id="cb7-16"><span class="bu" style="color: null;">echo</span></span>
<span id="cb7-17"></span>
<span id="cb7-18"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"2. create wsl.conf file"</span></span>
<span id="cb7-19"><span class="fu" style="color: #4758AB;">rm</span> <span class="at" style="color: #657422;">-rf</span> /etc/wsl.conf</span>
<span id="cb7-20"><span class="fu" style="color: #4758AB;">tee</span> /etc/wsl.conf <span class="op" style="color: #5E5E5E;">&lt;&lt; EOF</span></span>
<span id="cb7-21"><span class="st" style="color: #20794D;"># Set the user when launching a distribution with WSL.</span></span>
<span id="cb7-22"><span class="st" style="color: #20794D;">[user]</span></span>
<span id="cb7-23"><span class="st" style="color: #20794D;">default=</span><span class="va" style="color: #111111;">$user_name</span></span>
<span id="cb7-24"><span class="op" style="color: #5E5E5E;">EOF</span></span>
<span id="cb7-25"><span class="bu" style="color: null;">echo</span></span>
<span id="cb7-26"></span>
<span id="cb7-27"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"3. prepare setup by user"</span></span>
<span id="cb7-28"><span class="fu" style="color: #4758AB;">cp</span> setup_wsl_user.sh /home/<span class="va" style="color: #111111;">$user_name</span></span>
<span id="cb7-29"><span class="fu" style="color: #4758AB;">chown</span> <span class="va" style="color: #111111;">$user_name</span>:users /home/<span class="va" style="color: #111111;">$user_name</span>/setup_wsl_user.sh</span>
<span id="cb7-30"><span class="fu" style="color: #4758AB;">chmod</span> 750  /home/<span class="va" style="color: #111111;">$user_name</span>/setup_wsl_user.sh</span>
<span id="cb7-31"><span class="fu" style="color: #4758AB;">tee</span> <span class="at" style="color: #657422;">-a</span> /home/<span class="va" style="color: #111111;">$user_name</span>/.bashrc <span class="op" style="color: #5E5E5E;">&lt;&lt; EOF</span></span>
<span id="cb7-32"><span class="st" style="color: #20794D;">if [ ! -e ".wsl_configured" ]; then</span></span>
<span id="cb7-33"><span class="st" style="color: #20794D;">        ./setup_wsl_user.sh</span></span>
<span id="cb7-34"><span class="st" style="color: #20794D;">        touch .wsl_configured</span></span>
<span id="cb7-35"><span class="st" style="color: #20794D;">fi</span></span>
<span id="cb7-36"><span class="op" style="color: #5E5E5E;">EOF</span></span>
<span id="cb7-37"><span class="bu" style="color: null;">echo</span></span>
<span id="cb7-38"></span>
<span id="cb7-39"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"end of configuration for root"</span></span>
<span id="cb7-40"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"stop wsl instance by running 'wsl -t &lt;distro-name&gt;' from powershell"</span></span>
<span id="cb7-41"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"and start from Windows Terminal"</span></span></code></pre></div>
<p><code>setup_wsl_user.sh</code> <a href="../files/setup_wsl_user.sh">download</a></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"1. setup wsl-vpnkit"</span></span>
<span id="cb8-4"><span class="cf" style="color: #003B4F;">if</span> <span class="fu" style="color: #4758AB;">grep</span> <span class="at" style="color: #657422;">-Fxq</span> <span class="st" style="color: #20794D;">"wsl-vpnkit"</span> ~/.profile</span>
<span id="cb8-5"><span class="cf" style="color: #003B4F;">then</span></span>
<span id="cb8-6">    <span class="co" style="color: #5E5E5E;"># code if found</span></span>
<span id="cb8-7">    <span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"   wsl-vpnkit already setup"</span></span>
<span id="cb8-8"><span class="cf" style="color: #003B4F;">else</span></span>
<span id="cb8-9">    <span class="co" style="color: #5E5E5E;"># code if not found</span></span>
<span id="cb8-10">    <span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">'wsl.exe -d wsl-vpnkit service wsl-vpnkit start'</span> <span class="op" style="color: #5E5E5E;">&gt;&gt;</span> ~/.profile</span>
<span id="cb8-11"><span class="cf" style="color: #003B4F;">fi</span></span>
<span id="cb8-12"><span class="ex" style="color: null;">wsl.exe</span> <span class="at" style="color: #657422;">-d</span> wsl-vpnkit service wsl-vpnkit start</span>
<span id="cb8-13"><span class="bu" style="color: null;">source</span> ./.bashrc</span>
<span id="cb8-14"><span class="bu" style="color: null;">echo</span></span>
<span id="cb8-15"></span>
<span id="cb8-16"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"2. create ssh key to copy to gitlab"</span></span>
<span id="cb8-17"><span class="bu" style="color: null;">.</span> /etc/lsb-release</span>
<span id="cb8-18"><span class="cf" style="color: #003B4F;">if</span> <span class="bu" style="color: null;">[</span> <span class="ot" style="color: #003B4F;">!</span> <span class="ot" style="color: #003B4F;">-e</span> <span class="st" style="color: #20794D;">".ssh/id_rsa.pub"</span> <span class="bu" style="color: null;">]</span><span class="kw" style="color: #003B4F;">;</span> <span class="cf" style="color: #003B4F;">then</span></span>
<span id="cb8-19">        <span class="fu" style="color: #4758AB;">ssh-keygen</span> <span class="at" style="color: #657422;">-t</span> rsa <span class="at" style="color: #657422;">-b</span> 4096 <span class="at" style="color: #657422;">-C</span> <span class="st" style="color: #20794D;">"WSL2 ubuntu </span><span class="va" style="color: #111111;">$DISTRIB_RELEASE</span><span class="st" style="color: #20794D;">"</span></span>
<span id="cb8-20">        <span class="fu" style="color: #4758AB;">cat</span> .ssh/id_rsa.pub</span>
<span id="cb8-21">        <span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"copy this content to gitlab &gt; preferences &gt; SSH Keys"</span></span>
<span id="cb8-22">        <span class="bu" style="color: null;">read</span> <span class="at" style="color: #657422;">-p</span> <span class="st" style="color: #20794D;">"Press any key to resume ..."</span></span>
<span id="cb8-23"><span class="cf" style="color: #003B4F;">fi</span></span>
<span id="cb8-24"><span class="bu" style="color: null;">echo</span></span>
<span id="cb8-25"></span>
<span id="cb8-26"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"3. update certificates"</span></span>
<span id="cb8-27"><span class="fu" style="color: #4758AB;">git</span> clone git@gitlab.michelin.com:devops-foundation/devops_environment.git /tmp/devops_environment</span>
<span id="cb8-28"><span class="fu" style="color: #4758AB;">sudo</span> cp /tmp/devops_environment/certs/<span class="pp" style="color: #AD0000;">*</span> /usr/local/share/ca-certificates/</span>
<span id="cb8-29"><span class="fu" style="color: #4758AB;">sudo</span> update-ca-certificates</span>
<span id="cb8-30"><span class="fu" style="color: #4758AB;">rm</span> <span class="at" style="color: #657422;">-rf</span> /tmp/devops_environment</span>
<span id="cb8-31"><span class="cf" style="color: #003B4F;">if</span> <span class="bu" style="color: null;">[</span> <span class="va" style="color: #111111;">$DISTRIB_RELEASE</span> <span class="ot" style="color: #003B4F;">==</span> <span class="st" style="color: #20794D;">"22.04"</span> <span class="bu" style="color: null;">]</span></span>
<span id="cb8-32"><span class="cf" style="color: #003B4F;">then</span></span>
<span id="cb8-33"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">'bug SSL with ubuntu 22.04 - https://bugs.launchpad.net/ubuntu/+source/openssl/+bug/1963834/comments/7'</span></span>
<span id="cb8-34"><span class="fu" style="color: #4758AB;">sudo</span> tee <span class="at" style="color: #657422;">-a</span> /etc/ssl/openssl.cnf <span class="op" style="color: #5E5E5E;">&lt;&lt; EOF</span></span>
<span id="cb8-35"><span class="st" style="color: #20794D;">[openssl_init]</span></span>
<span id="cb8-36"><span class="st" style="color: #20794D;">ssl_conf = ssl_sect</span></span>
<span id="cb8-37"></span>
<span id="cb8-38"><span class="st" style="color: #20794D;">[ssl_sect]</span></span>
<span id="cb8-39"><span class="st" style="color: #20794D;">system_default = system_default_sect</span></span>
<span id="cb8-40"></span>
<span id="cb8-41"><span class="st" style="color: #20794D;">[system_default_sect]</span></span>
<span id="cb8-42"><span class="st" style="color: #20794D;">Options = UnsafeLegacyRenegotiation</span></span>
<span id="cb8-43"><span class="op" style="color: #5E5E5E;">EOF</span></span>
<span id="cb8-44"><span class="cf" style="color: #003B4F;">fi</span></span>
<span id="cb8-45"><span class="bu" style="color: null;">echo</span></span>
<span id="cb8-46"></span>
<span id="cb8-47"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"4. update apt sources with artifactory"</span></span>
<span id="cb8-48"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">'Acquire { http::User-Agent "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.37) Gecko/20100101 Firefox/31.33.7"; };'</span> <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">sudo</span> tee /etc/apt/apt.conf.d/90globalprotectconf</span>
<span id="cb8-49"><span class="fu" style="color: #4758AB;">sudo</span> sed <span class="at" style="color: #657422;">-i</span> <span class="st" style="color: #20794D;">'s,http://archive.ubuntu.com/ubuntu,https://artifactory.michelin.com/artifactory/ubuntu-archive-remote,g'</span> /etc/apt/sources.list</span>
<span id="cb8-50"><span class="fu" style="color: #4758AB;">sudo</span> sed <span class="at" style="color: #657422;">-i</span> <span class="st" style="color: #20794D;">'s,http://security.ubuntu.com/ubuntu,https://artifactory.michelin.com/artifactory/ubuntu-archive-remote,g'</span> /etc/apt/sources.list</span>
<span id="cb8-51"><span class="fu" style="color: #4758AB;">sudo</span> apt update</span>
<span id="cb8-52"><span class="fu" style="color: #4758AB;">sudo</span> apt upgrade <span class="at" style="color: #657422;">-y</span></span>
<span id="cb8-53"><span class="bu" style="color: null;">echo</span></span></code></pre></div>
<p>Then</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;">chmod</span> +x setup_wsl_root.sh</span>
<span id="cb9-2"><span class="ex" style="color: null;">./setup_wsl_root.sh</span></span></code></pre></div>
<p>As explained stop wsl instance by running <code>wsl --shutdown ubuntu-22.04</code> from powershell and start from Windows Terminal</p>
<p>It restarts from your user and it will install:</p>
<ul>
<li>setup wsl-vpnkit</li>
<li>create ssh key to copy to gitlab</li>
<li>update certificates</li>
<li>update apt sources with artifactory</li>
</ul>
</section>
<section id="installation-evalai" class="level2">
<h2 class="anchored" data-anchor-id="installation-evalai">Installation EvalAI</h2>
<section id="step-1-install-prerequisites" class="level6">
<h6 class="anchored" data-anchor-id="step-1-install-prerequisites">Step 1: Install prerequisites</h6>
<ul>
<li>Install git - postgres</li>
</ul>
<pre><code>sudo apt-get install git postgresql libpq-dev</code></pre>
<ul>
<li>install rabbit-mq</li>
</ul>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="fu" style="color: #4758AB;">sudo</span> apt-get <span class="at" style="color: #657422;">-y</span> install socat logrotate init-system-helpers adduser erlang-base </span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;"># download the package</span></span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;">wget</span> https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.10.6/rabbitmq-server_3.10.6-1_all.deb</span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;"># install the package with dpkg</span></span>
<span id="cb11-6"><span class="fu" style="color: #4758AB;">sudo</span> dpkg <span class="at" style="color: #657422;">-i</span> rabbitmq-server_3.10.6-1_all.deb</span>
<span id="cb11-7"><span class="fu" style="color: #4758AB;">rm</span> rabbitmq-server_3.10.6-1_all.deb</span></code></pre></div>
<ul>
<li>install python 3.7</li>
</ul>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;">sudo</span> apt install python3.7</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--install</span> /usr/bin/python python /usr/bin/python3.7 1</span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--install</span> /usr/bin/python python /usr/bin/python3.6 2</span>
<span id="cb12-4"><span class="ex" style="color: null;">update-alternatives</span> <span class="at" style="color: #657422;">--list</span> python</span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--config</span> python</span></code></pre></div>
<ul>
<li>install virtualenv</li>
</ul>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="co" style="color: #5E5E5E;"># only if pip is not installed</span></span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;">sudo</span> apt-get install python3-pip build-essential</span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;"># upgrade pip</span></span>
<span id="cb13-4"><span class="ex" style="color: null;">pip3</span> install <span class="at" style="color: #657422;">--upgrade</span> pip</span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;"># upgrade virtualenv</span></span>
<span id="cb13-6"><span class="ex" style="color: null;">pip</span> <span class="at" style="color: #657422;">--trusted-host</span> pypi.org <span class="at" style="color: #657422;">--trusted-host</span> pypi.python.org <span class="at" style="color: #657422;">--trusted-host</span> files.pythonhosted.org install <span class="at" style="color: #657422;">--upgrade</span> virtualenv</span>
<span id="cb13-7"><span class="bu" style="color: null;">source</span> .profile</span></code></pre></div>
</section>
<section id="step-2-get-evalai-code" class="level6">
<h6 class="anchored" data-anchor-id="step-2-get-evalai-code">Step 2: Get EvalAI code</h6>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="fu" style="color: #4758AB;">git</span> clone https://github.com/Cloud-CV/EvalAI.git evalai</span></code></pre></div>
</section>
<section id="step-3-setup-codebase" class="level6">
<h6 class="anchored" data-anchor-id="step-3-setup-codebase">Step 3: Setup codebase</h6>
<ul>
<li>Create a python virtual environment and install python dependencies.</li>
</ul>
<pre><code>#pour curl-config
sudo apt install libcurl4-openssl-dev libssl-dev

cd evalai
virtualenv -p python3.7 venv
source venv/bin/activate

pip --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org install -r requirements/dev.txt
# issue on django-autofixture 
# https://github.com/gregmuellegger/django-autofixture/issues/117</code></pre>
<div class="alert alert-block alert-danger">
<p>cannot go further due to this error. at some time in setuptools, dist.py has been introduced long_description ends-with, and it is not managed by ‘UltraMagicString’ in django-autofixture</p>
</div>
<ul>
<li>Rename <code>settings/dev.sample.py</code> as <code>dev.py</code></li>
</ul>
<pre><code>cp settings/dev.sample.py settings/dev.py</code></pre>
<ul>
<li>Create an empty postgres database and run database migration.</li>
</ul>
<pre><code>createdb evalai -U postgres
# update postgres user password
psql -U postgres -c "ALTER USER postgres PASSWORD 'postgres';"
# run migrations
python manage.py migrate</code></pre>
<ul>
<li>For setting up frontend, please make sure that node(<code>&gt;=7.x.x</code>), npm(<code>&gt;=5.x.x</code>) and bower(<code>&gt;=1.8.x</code>) are installed globally on your machine. Install npm and bower dependencies by running</li>
</ul>
<pre><code>npm install
bower install</code></pre>


</section>
</section>

 ]]></description>
  <category>wsl</category>
  <guid>https://castorfou.github.io/posts/2022-07-26-install ubuntu 18.04 on WSL.html</guid>
  <pubDate>Tue, 26 Jul 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/posts/images/icons/wsl2.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>install docker within linux</title>
  <link>https://castorfou.github.io/posts/2022-07-21-install docker on linux.html</link>
  <description><![CDATA[ 




<section id="source-of-inspiration" class="level2">
<h2 class="anchored" data-anchor-id="source-of-inspiration">source of inspiration</h2>
<p><a href="https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository">Install Docker Engine on Ubuntu</a></p>
</section>
<section id="installation-and-test" class="level2">
<h2 class="anchored" data-anchor-id="installation-and-test">Installation and test</h2>
<section id="set-up-the-repository" class="level4">
<h4 class="anchored" data-anchor-id="set-up-the-repository">Set up the repository</h4>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;">sudo</span> apt-get update</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">sudo</span> apt-get install <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-3">    ca-certificates <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-4">    curl <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-5">    gnupg <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-6">    lsb-release</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;"># Add Docker’s official GPG key</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;">sudo</span> mkdir <span class="at" style="color: #657422;">-p</span> /etc/apt/keyrings</span>
<span id="cb1-10"><span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">sudo</span> gpg <span class="at" style="color: #657422;">--dearmor</span> <span class="at" style="color: #657422;">-o</span> /etc/apt/keyrings/docker.gpg</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;"># set up the Docker repository</span></span>
<span id="cb1-13"><span class="bu" style="color: null;">echo</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-14">  <span class="st" style="color: #20794D;">"deb [arch=</span><span class="va" style="color: #111111;">$(</span><span class="ex" style="color: null;">dpkg</span> <span class="at" style="color: #657422;">--print-architecture</span><span class="va" style="color: #111111;">)</span><span class="st" style="color: #20794D;"> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu </span><span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-15"><span class="st" style="color: #20794D;">  </span><span class="va" style="color: #111111;">$(</span><span class="ex" style="color: null;">lsb_release</span> <span class="at" style="color: #657422;">-cs</span><span class="va" style="color: #111111;">)</span><span class="st" style="color: #20794D;"> stable"</span> <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">sudo</span> tee /etc/apt/sources.list.d/docker.list <span class="op" style="color: #5E5E5E;">&gt;</span> /dev/null</span></code></pre></div>
</section>
<section id="install-docker-engine" class="level4">
<h4 class="anchored" data-anchor-id="install-docker-engine">Install Docker Engine</h4>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Install Docker Engine</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">sudo</span> apt-get update</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">sudo</span> apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span></code></pre></div>
</section>
<section id="test" class="level4">
<h4 class="anchored" data-anchor-id="test">Test</h4>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;">sudo</span> docker run hello-world</span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;">&gt;</span> Hello <span class="ex" style="color: null;">from</span> Docker!</span>
<span id="cb3-3"><span class="op" style="color: #5E5E5E;">&gt;</span> [...]</span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>linux</category>
  <category>docker</category>
  <guid>https://castorfou.github.io/posts/2022-07-21-install docker on linux.html</guid>
  <pubDate>Thu, 21 Jul 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/posts/images/icons/image_linux.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>install docker within WSL</title>
  <link>https://castorfou.github.io/posts/2022-07-21-install docker on WSL.html</link>
  <description><![CDATA[ 




<section id="source-of-inspiration" class="level2">
<h2 class="anchored" data-anchor-id="source-of-inspiration">source of inspiration</h2>
<p><a href="https://dev.michelin.com/wsl2/docker">WSL 2 Docker inside WSL 2</a></p>
<p><a href="../guillaume_blog/blog/install-ubuntu-22.04-on-WSL.html">install ubuntu 22.04 on WSL</a></p>
</section>
<section id="pre-requisite-installation---ubuntu-docker" class="level2">
<h2 class="anchored" data-anchor-id="pre-requisite-installation---ubuntu-docker">Pre-requisite Installation - ubuntu-docker</h2>
<section id="uninstall-image-if-needed" class="level3">
<h3 class="anchored" data-anchor-id="uninstall-image-if-needed">uninstall image (if needed)</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># wsl --unregister &lt;distroName&gt;</span></span>
<span id="cb1-2">wsl <span class="op" style="color: #5E5E5E;">--</span>unregister ubuntu<span class="op" style="color: #5E5E5E;">-</span>docker</span></code></pre></div>
</section>
<section id="setup-installation-directory" class="level3">
<h3 class="anchored" data-anchor-id="setup-installation-directory">setup installation directory</h3>
<p>create this structure by copying the existing one from <code>ubuntu-22.04</code></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">guillaume@LL11LPC0PQARQ:/mnt/d/wsl/Ubuntu-docker$</span> tree</span>
<span id="cb2-2"><span class="bu" style="color: null;">.</span></span>
<span id="cb2-3"><span class="ex" style="color: null;">└──</span> download</span>
<span id="cb2-4"> <span class="ex" style="color: null;">&nbsp;&nbsp;</span> ├── GWSL.Traditional.140.release.x64.exe</span>
<span id="cb2-5"> <span class="ex" style="color: null;">&nbsp;&nbsp;</span> ├── ZscalerRootCA.crt</span>
<span id="cb2-6"> <span class="ex" style="color: null;">&nbsp;&nbsp;</span> ├── jammy-server-cloudimg-amd64-wsl.rootfs.tar.gz</span>
<span id="cb2-7"> <span class="ex" style="color: null;">&nbsp;&nbsp;</span> ├── setup_wsl_root.sh</span>
<span id="cb2-8"> <span class="ex" style="color: null;">&nbsp;&nbsp;</span> └── setup_wsl_user.sh</span></code></pre></div>
</section>
<section id="create-ubuntu-docker-image" class="level3">
<h3 class="anchored" data-anchor-id="create-ubuntu-docker-image">create ubuntu-docker image</h3>
<p>from Powershell</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb3-1">wsl <span class="op" style="color: #5E5E5E;">--</span>import ubuntu<span class="op" style="color: #5E5E5E;">-</span>docker D<span class="op" style="color: #5E5E5E;">:</span>\wsl\ubuntu<span class="op" style="color: #5E5E5E;">-</span>docker\instance D<span class="op" style="color: #5E5E5E;">:</span>\wsl\ubuntu<span class="op" style="color: #5E5E5E;">-</span>docker\download\jammy<span class="op" style="color: #5E5E5E;">-</span>server<span class="op" style="color: #5E5E5E;">-</span>cloudimg<span class="op" style="color: #5E5E5E;">-</span>amd64<span class="op" style="color: #5E5E5E;">-</span>wsl<span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">rootfs</span><span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">tar</span><span class="op" style="color: #5E5E5E;">.</span><span class="fu" style="color: #4758AB;">gz</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;">#should appear in </span></span>
<span id="cb3-4">wsl <span class="op" style="color: #5E5E5E;">--</span>list <span class="op" style="color: #5E5E5E;">--</span>all <span class="op" style="color: #5E5E5E;">-</span>v</span></code></pre></div>
</section>
<section id="declare-ubuntu-docker-in-windows-terminal" class="level3">
<h3 class="anchored" data-anchor-id="declare-ubuntu-docker-in-windows-terminal">declare ubuntu-docker in Windows Terminal</h3>
<p>Windows Terminal &gt; Settings &gt; Add a profile &gt; Duplicate a profile (from Ubuntu-22.04)</p>
<p>Name: <code>ubuntu-docker</code></p>
<p>Command line: <code>C:\WINDOWS\system32\wsl.exe -d ubuntu-docker</code></p>
<p>Tab title: <code>ubuntu docker</code></p>
</section>
<section id="setup-root-configuration" class="level3">
<h3 class="anchored" data-anchor-id="setup-root-configuration">setup root configuration</h3>
<p>Start ubuntu-docker from Windows Terminal</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;">cp</span> /mnt/d/wsl/Ubuntu-docker/download/setup_wsl_<span class="pp" style="color: #AD0000;">*</span> .</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;">chmod</span> +x setup_wsl_root.sh</span>
<span id="cb4-3"><span class="ex" style="color: null;">./setup_wsl_root.sh</span></span></code></pre></div>
<p>enter username and password</p>
<p>From powershell, stop ubuntu-docker</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb5-1">wsl <span class="op" style="color: #5E5E5E;">-</span>t ubuntu<span class="op" style="color: #5E5E5E;">-</span>docker</span></code></pre></div>
</section>
<section id="setup-user-configuration" class="level3">
<h3 class="anchored" data-anchor-id="setup-user-configuration">setup user configuration</h3>
<p>Start ubuntu-docker from Windows Terminal</p>
<p>Follow instructions, don’t skip the integration of ssh key in gitlab</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;">guillaume@LL11LPC0PQARQ:~$</span> host google.fr</span>
<span id="cb6-2"><span class="ex" style="color: null;">google.fr</span> has address 142.250.75.227</span>
<span id="cb6-3"><span class="ex" style="color: null;">google.fr</span> has IPv6 address 2a00:1450:4007:811::2003</span>
<span id="cb6-4"><span class="ex" style="color: null;">Host</span> google.fr not found: 3<span class="er" style="color: #AD0000;">(</span><span class="ex" style="color: null;">NXDOMAIN</span><span class="kw" style="color: #003B4F;">)</span></span></code></pre></div>
<p>That’s it for WSL setup, docker can now be installed</p>
</section>
</section>
<section id="docker-installation" class="level1">
<h1>Docker installation</h1>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;">curl</span>  https://artifactory.michelin.com/artifactory/mt-generic-prod/devops-environment/install.sh <span class="at" style="color: #657422;">-o</span> install.sh</span></code></pre></div>
<p>Edit install.sh</p>
<ul>
<li>line 246: add 22 as a support for ubuntu 22.04</li>
</ul>
<p><code>declare -A support_matrix=(["debian"]="10 11" ["ubuntu"]="18 20")</code></p>
<ul>
<li>comment lines 297 to 301</li>
</ul>
<p><code>#configure_vpn_kit #configure_wsl_dns #install_cacert #configure_apt_global "$os" #configure_apt_artifactory "$os"</code></p>
<ul>
<li>insert docker list (line 40)</li>
</ul>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="bu" style="color: null;">source</span> /etc/os-release</span>
<span id="cb8-2"><span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-fsSL</span> https://download.docker.com/linux/<span class="va" style="color: #111111;">${ID}</span>/gpg <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">sudo</span> apt-key add <span class="at" style="color: #657422;">-</span></span>
<span id="cb8-3"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"deb [arch=amd64] https://artifactory.michelin.com/artifactory/ubuntu-docker-remote jammy stable"</span> <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">sudo</span> tee /etc/apt/sources.list.d/docker.list</span>
<span id="cb8-4"><span class="fu" style="color: #4758AB;">sudo</span> apt-get update</span></code></pre></div>
<p>And run it</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;">chmod</span> +x install.sh</span>
<span id="cb9-2"><span class="ex" style="color: null;">./install.sh</span> <span class="at" style="color: #657422;">--no-dev</span> <span class="at" style="color: #657422;">--no-dev-tools</span> <span class="at" style="color: #657422;">--no-swag</span> <span class="at" style="color: #657422;">--no-swagerino</span> <span class="at" style="color: #657422;">--no-kube</span> <span class="at" style="color: #657422;">--skip-update</span></span></code></pre></div>
<p>Activate legacy for iptables</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--set</span> iptables /usr/sbin/iptables-legacy</span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;">sudo</span> update-alternatives <span class="at" style="color: #657422;">--set</span> ip6tables /usr/sbin/ip6tables-legacy</span></code></pre></div>
<p>Then start docker service</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="fu" style="color: #4758AB;">sudo</span> service docker start</span></code></pre></div>
<p>Before restarting, ensure your <code>wsl.conf</code> is correct (remove network-generateResolvConf entry and add user-default one):</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;">guillaume@LL11LPC0PQARQ:~$</span> cat /etc/wsl.conf</span>
<span id="cb12-2"><span class="ex" style="color: null;">[user]</span></span>
<span id="cb12-3"><span class="va" style="color: #111111;">default</span><span class="op" style="color: #5E5E5E;">=</span>guillaume</span></code></pre></div>
<p>Restart</p>
</section>
<section id="test-installation" class="level1">
<h1>Test installation</h1>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;">docker</span> run docker.artifactory.michelin.com/hello-world</span>
<span id="cb13-2"><span class="op" style="color: #5E5E5E;">&gt;</span> Hello <span class="ex" style="color: null;">from</span> Docker!</span>
<span id="cb13-3"><span class="op" style="color: #5E5E5E;">&gt;</span> This <span class="ex" style="color: null;">message</span> shows that your installation appears to be working correctly.</span></code></pre></div>


</section>

 ]]></description>
  <category>wsl</category>
  <category>docker</category>
  <guid>https://castorfou.github.io/posts/2022-07-21-install docker on WSL.html</guid>
  <pubDate>Thu, 21 Jul 2022 00:00:00 GMT</pubDate>
  <media:content url="https://castorfou.github.io/posts/images/icons/wsl2.jpeg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
